(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
var ArkMainDialog, ArkScrollView, eventManager, eventNames, g_click_times;

eventManager = require('../event/ArkEventManager.coffee');

eventNames = require('../event/ArkEventNames.coffee');

ArkScrollView = require('../tools/ScrollView.coffee');

g_click_times = 0;

ArkMainDialog = (function() {
  function ArkMainDialog() {}

  ArkMainDialog.prototype.onDidLoadFromCCB = function() {
    this._datTable = [];
    this._reset();
    return this.init();
  };

  ArkMainDialog.prototype._reset = function() {
    this._scrollView = null;
    this._stockCodeEditBox = null;
    return this._yearsEditBox = null;
  };

  ArkMainDialog.prototype.init = function() {
    this._stockCodeEditBox = this._createEditBox(this.ccb_textField_1);
    this.rootNode.addChild(this._stockCodeEditBox);
    this._yearsEditBox = this._createEditBox(this.ccb_textField_2);
    this.rootNode.addChild(this._yearsEditBox);
    this._initData();
    this._scrollView = ArkScrollView.createScrollView(this.ccb_scrollView);
    this.rootNode.addChild(this._scrollView);
    ArkScrollView.initFromContainer(this._scrollView, this.ccb_result);
  };

  ArkMainDialog.prototype._initData = function() {
    this._stockCodeEditBox.setString("000651");
    return this._yearsEditBox.setString("6");
  };

  ArkMainDialog.prototype._createEditBox = function(node) {
    var editBox;
    editBox = new cc.EditBox(cc.size(200, 50));
    editBox.setPosition(node.getPosition());
    editBox.setInputMode(cc.EDITBOX_INPUT_MODE_SINGLELINE);
    editBox.setReturnType(cc.KEYBOARD_RETURNTYPE_DONE);
    editBox.setInputFlag(cc.EDITBOX_INPUT_FLAG_INITIAL_CAPS_SENTENCE);
    editBox.setMaxLength(13);
    editBox.setFont("Arial", 26);
    editBox.setFontColor(cc.color(100, 100, 255, 255));
    return editBox;
  };

  ArkMainDialog.prototype.showResult = function(result) {
    this.ccb_result.setString(result);
    ArkScrollView.initFromContainer(this._scrollView, this.ccb_result);
    return ArkScrollView.scrollJumpToTop(this._scrollView);
  };

  ArkMainDialog.prototype.onCalc = function() {
    var stockCode, years;
    stockCode = this._stockCodeEditBox.getString();
    years = this._yearsEditBox.getString();
    global.year = years;
    return eventManager.send(eventNames.GAME_GET_RESULT, {
      stockCode: stockCode,
      callback: (function(_this) {
        return function(str) {
          return _this.showResult(str);
        };
      })(this)
    });
  };

  cc.BuilderReader.registerController("ArkMainDialog", new ArkMainDialog());

  return ArkMainDialog;

})();

module.exports = cc.BuilderReader.load("res/main.ccbi");


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../event/ArkEventManager.coffee":3,"../event/ArkEventNames.coffee":4,"../tools/ScrollView.coffee":13}],2:[function(require,module,exports){
(function (global){
var BalanceSheet, CashFlowStatement, GameLogic, ProfitStatement, UserData, eventManager, eventNames, g_directory, sceneManager, utils;

sceneManager = require('../tools/ArkSceneManager.coffee');

eventManager = require('../event/ArkEventManager.coffee');

eventNames = require('../event/ArkEventNames.coffee');

UserData = require('../model/ArkUserData.coffee');

BalanceSheet = require('../model/BalanceSheet.coffee');

ProfitStatement = require('../model/ProfitStatement.coffee');

CashFlowStatement = require('../model/CashFlowStatement.coffee');

require("../globalValue.coffee");

utils = require('../tools/utils.coffee');

g_directory = "zz1000";

GameLogic = (function() {
  function GameLogic() {}

  GameLogic.prototype.init = function() {
    this._balanceObj = {};
    this._profitObj = {};
    this._cashFlowObj = {};
    this._registerEvents();
    return this._initTable();
  };

  GameLogic.prototype._registerEvents = function() {
    return eventManager.listen(eventNames.GAME_GET_RESULT, (function(_this) {
      return function(obj) {
        return typeof obj.callback === "function" ? obj.callback(_this.findMatchConditionStock()) : void 0;
      };
    })(this));
  };

  GameLogic.prototype._filterROE = function(stockCode) {
    var aveRoe, roeTable;
    roeTable = this._getROE(stockCode);
    aveRoe = utils.getAverage(roeTable);
    if (aveRoe > 18) {
      return true;
    }
    return false;
  };

  GameLogic.prototype._filterProfitAddRatio = function(stockCode) {
    var profitAddRatio;
    profitAddRatio = this._profitObj[stockCode].getNetProfitAddRatio();
    if (profitAddRatio > 20) {
      return true;
    }
    return false;
  };

  GameLogic.prototype._filterPE = function(stockCode) {
    var pe;
    pe = this._profitObj[stockCode].getPE();
    console.log(pe, typeof pe, pe > 0);
    if ((0 < pe && pe < 35)) {
      return true;
    }
    return false;
  };

  GameLogic.prototype._getStockInfo = function(stockCode) {
    var PE, aveRoe, baseInfo, profitAddRatio, roeTable;
    baseInfo = this._profitObj[stockCode].getBaseInfo();
    profitAddRatio = this._profitObj[stockCode].getNetProfitAddRatio();
    roeTable = this._getROE(stockCode);
    aveRoe = utils.getAverage(roeTable);
    PE = this._profitObj[stockCode].getPE();
    return utils.addTab(stockCode) + utils.addTab(baseInfo) + utils.addTab(profitAddRatio) + utils.addTab(aveRoe) + utils.addTab("PE:" + PE) + "\n";
  };

  GameLogic.prototype.findMatchConditionStock = function() {
    var i, j, len, len1, matchStockTable, ref, stockCode, stockInfoTable;
    matchStockTable = [];
    ref = utils.getStockTable(g_directory);
    for (i = 0, len = ref.length; i < len; i++) {
      stockCode = ref[i];
      stockCode = stockCode.slice(2, 8);
      console.log(stockCode);
      if (this._filterROE(stockCode) && this._filterProfitAddRatio(stockCode) && this._filterPE(stockCode)) {
        matchStockTable.push(stockCode);
      }
    }
    stockInfoTable = ["股票代码 \t 基本信息 \t 利润复合增长率 \t 平均ROE \t PE  统计时间:" + global.year + ", 总数:" + matchStockTable.length + "\n"];
    for (j = 0, len1 = matchStockTable.length; j < len1; j++) {
      stockCode = matchStockTable[j];
      stockInfoTable.push(this._getStockInfo(stockCode));
    }
    return stockInfoTable;
  };

  GameLogic.prototype._getROE = function(stockCode) {
    var i, index, len, netAssets, netAssetsTable, netProfitsTable, roe, roeTable;
    netAssetsTable = this._balanceObj[stockCode].getNetAssets();
    netProfitsTable = this._profitObj[stockCode].getNetProfitTable();
    roeTable = [];
    for (index = i = 0, len = netAssetsTable.length; i < len; index = ++i) {
      netAssets = netAssetsTable[index];
      if (index >= netAssetsTable.length - 1) {
        break;
      }
      roe = ((netProfitsTable[index] / ((netAssets + netAssetsTable[index + 1]) / 2)) * 100).toFixed(2);
      roeTable.push(roe + "\t");
    }
    return roeTable;
  };

  GameLogic.prototype.getReceivableTurnoverDays = function(stockCode) {
    var days, daysTable, i, inComeValueTable, index, len, receivableValue, receivableValueTable;
    receivableValueTable = this._balanceObj[stockCode].getReceivableValue();
    inComeValueTable = this._profitObj[stockCode].getIncomeValue();
    daysTable = ["应收账款周转天数" + "\t"];
    console.log(receivableValueTable, inComeValueTable);
    for (index = i = 0, len = receivableValueTable.length; i < len; index = ++i) {
      receivableValue = receivableValueTable[index];
      if (index >= receivableValueTable.length - 1) {
        break;
      }
      days = 360 / inComeValueTable[index] * (receivableValue + receivableValueTable[index + 1]) / 2;
      daysTable.push(days + "\t");
    }
    return daysTable;
  };

  GameLogic.prototype._initTable = function() {
    var i, len, ref, stockCode;
    ref = utils.getStockTable(g_directory);
    for (i = 0, len = ref.length; i < len; i++) {
      stockCode = ref[i];
      stockCode = stockCode.slice(2, 8);
      this._balanceObj[stockCode] = new BalanceSheet(g_directory, stockCode);
      this._profitObj[stockCode] = new ProfitStatement(g_directory, stockCode);
      this._cashFlowObj[stockCode] = new CashFlowStatement(g_directory, stockCode);
    }
  };

  return GameLogic;

})();

module.exports = GameLogic;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../event/ArkEventManager.coffee":3,"../event/ArkEventNames.coffee":4,"../globalValue.coffee":5,"../model/ArkUserData.coffee":7,"../model/BalanceSheet.coffee":8,"../model/CashFlowStatement.coffee":9,"../model/ProfitStatement.coffee":10,"../tools/ArkSceneManager.coffee":12,"../tools/utils.coffee":14}],3:[function(require,module,exports){
var EventManager;

EventManager = {
  send: function(eventName, data) {
    var event;
    event = new cc.EventCustom(eventName);
    if (data !== null) {
      event.setUserData(data);
    }
    return cc.eventManager.dispatchEvent(event);
  },
  listen: function(eventName, listenFunc, nodeOrPriority) {
    var ccListener;
    if (nodeOrPriority == null) {
      nodeOrPriority = 1;
    }
    ccListener = cc.EventListener.create({
      event: cc.EventListener.CUSTOM,
      eventName: eventName,
      callback: function(event) {
        return listenFunc(event.getUserData(), event);
      }
    });
    return cc.eventManager.addListener(ccListener, nodeOrPriority);
  }
};

module.exports = EventManager;


},{}],4:[function(require,module,exports){
var EventNames;

EventNames = {
  GAME_START: "game.start",
  GAME_END: "game.end",
  GAME_NEXT_LEVEL: "game.next.level",
  GAME_GET_RESULT: "game.get.result",
  GAME_INIT_TABLE: "game.init.table"
};

module.exports = EventNames;


},{}],5:[function(require,module,exports){
(function (global){
global.year = 6;

global.loadNum = 0;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],6:[function(require,module,exports){
cc.game.onStart = function() {
  var GameLogic, gameDialog, gameLogicObj, sceneManager;
  cc.view.adjustViewPort(true);
  cc.view.setDesignResolutionSize(1136, 640, cc.ResolutionPolicy.SHOW_ALL);
  cc.view.enableAutoFullScreen(false);
  cc.view.resizeWithBrowserSize(true);
  cc.BuilderReader.setResourcePath("res/");
  sceneManager = require("./tools/ArkSceneManager.coffee");
  sceneManager.init();
  gameDialog = require('./ccbView/ArkMainDialog.coffee');
  sceneManager.addLayerToScene(gameDialog);
  GameLogic = require('./control/ArkGameLogic.coffee');
  gameLogicObj = new GameLogic();
  return gameLogicObj.init();
};

cc.game.run();


},{"./ccbView/ArkMainDialog.coffee":1,"./control/ArkGameLogic.coffee":2,"./tools/ArkSceneManager.coffee":12}],7:[function(require,module,exports){
var UserData;

UserData = (function() {
  function UserData() {
    this._score = 0;
    this._count = 0;
  }

  UserData.prototype.setScore = function(_score) {
    this._score = _score;
  };

  UserData.prototype.getScore = function() {
    return this._score;
  };

  UserData.prototype.setCount = function(_count) {
    this._count = _count;
  };

  UserData.prototype.getCount = function() {
    return this._count;
  };

  return UserData;

})();

module.exports = UserData;


},{}],8:[function(require,module,exports){
var BalanceSheet, TableBase,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

TableBase = require("./TableBase.coffee");

BalanceSheet = (function(superClass) {
  extend(BalanceSheet, superClass);

  function BalanceSheet() {
    return BalanceSheet.__super__.constructor.apply(this, arguments);
  }

  BalanceSheet.prototype.getFilePath = function() {
    return "res/" + this._stockType + "_json/zcfzb_" + this._stockCode + ".json";
  };

  BalanceSheet.prototype.getCashValue = function() {
    return this.getValue(this._data["货币资金(万元)"]);
  };

  BalanceSheet.prototype.getTotalAssets = function() {
    return this.getValue(this._data["资产总计(万元)"]);
  };

  BalanceSheet.prototype.getNetAssets = function() {
    console.log(JSON.stringify(this._data));
    return this.getValue(this._data["归属于母公司股东权益合计(万元)"]);
  };

  BalanceSheet.prototype._getNoNeedCalcItems = function() {
    return ["资料", "报告日期"];
  };

  BalanceSheet.prototype.getReceivableValue = function() {
    return this.getValue(this._data["应收账款(万元)"]);
  };

  BalanceSheet.prototype.dumpPercentTable = function() {
    var assetsPercentTable, celValue, i, index, key, len, percent, percentTable, ref, ref1, totalAssets, value;
    totalAssets = this.getTotalAssets();
    assetsPercentTable = [];
    ref = this._data;
    for (key in ref) {
      value = ref[key];
      percentTable = [key + "\t\t\t\t\t"];
      if (value[0] === 0) {
        continue;
      }
      if (indexOf.call(this._getNoNeedCalcItems(), key) >= 0) {
        continue;
      }
      ref1 = this.getValue(value);
      for (index = i = 0, len = ref1.length; i < len; index = ++i) {
        celValue = ref1[index];
        percent = celValue / totalAssets[index] * 100;
        percentTable.push(percent.toFixed(2));
        percentTable.push("\t\t\t\t");
      }
      percentTable.push("\n");
      assetsPercentTable.push(percentTable);
    }
    console.log(JSON.stringify(assetsPercentTable, null, "\t"));
    return assetsPercentTable;
  };

  BalanceSheet.prototype.getCurrentRatio = function() {
    var currentAssets, currentAssetsTable, currentDebtsTable, currentRatio, i, index, len;
    currentAssetsTable = this.getValue(this._data["流动资产合计(万元)"]);
    currentDebtsTable = this.getValue(this._data["流动负债合计(万元)"]);
    currentRatio = [];
    for (index = i = 0, len = currentAssetsTable.length; i < len; index = ++i) {
      currentAssets = currentAssetsTable[index];
      currentRatio.push((currentAssets / currentDebtsTable[index]).toFixed(2));
    }
    return currentRatio;
  };

  BalanceSheet.prototype.getQuickRatio = function() {
    var currentAssets, currentAssetsTable, currentDebtsTable, i, index, inventoryTable, len, quickRatio;
    currentAssetsTable = this.getValue(this._data["流动资产合计(万元)"]);
    currentDebtsTable = this.getValue(this._data["流动负债合计(万元)"]);
    inventoryTable = this.getValue(this._data["存货(万元)"]);
    quickRatio = [];
    for (index = i = 0, len = currentAssetsTable.length; i < len; index = ++i) {
      currentAssets = currentAssetsTable[index];
      quickRatio.push(((currentAssets - inventoryTable[index]) / currentDebtsTable[index]).toFixed(2));
    }
    return quickRatio;
  };

  return BalanceSheet;

})(TableBase);

module.exports = BalanceSheet;


},{"./TableBase.coffee":11}],9:[function(require,module,exports){
var CashFlowStatement, TableBase,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

TableBase = require("./TableBase.coffee");

CashFlowStatement = (function(superClass) {
  extend(CashFlowStatement, superClass);

  function CashFlowStatement() {
    return CashFlowStatement.__super__.constructor.apply(this, arguments);
  }

  CashFlowStatement.prototype.getFilePath = function() {
    return "res/" + this._stockType + "_json/xjllb_" + this._stockCode + ".json";
  };

  return CashFlowStatement;

})(TableBase);

module.exports = CashFlowStatement;


},{"./TableBase.coffee":11}],10:[function(require,module,exports){
(function (global){
var ProfitStatement, TableBase, utils,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

TableBase = require("./TableBase.coffee");

utils = require('../tools/utils.coffee');

ProfitStatement = (function(superClass) {
  extend(ProfitStatement, superClass);

  function ProfitStatement() {
    return ProfitStatement.__super__.constructor.apply(this, arguments);
  }

  ProfitStatement.prototype.getFilePath = function() {
    return "res/" + this._stockType + "_json/lrb_" + this._stockCode + ".json";
  };

  ProfitStatement.prototype.getIncomeValue = function() {
    return this.getValue(this._data["营业收入(万元)"]);
  };

  ProfitStatement.prototype.getNetProfitAddRatio = function() {
    var addRatio, addTimes, netProfitTable;
    netProfitTable = this.getValue(this._data["净利润(万元)"]);
    addTimes = netProfitTable[0] / netProfitTable[netProfitTable.length - 1];
    addRatio = utils.getCompoundRate(addTimes, global.year);
    addRatio = ((addRatio - 1) * 100).toFixed(2);
    return addRatio;
  };

  ProfitStatement.prototype.getNetProfitTable = function() {
    return this.getValue(this._data["净利润(万元)"]);
  };

  ProfitStatement.prototype.getPE = function() {
    var PE, earnPerShare, price;
    earnPerShare = this.getValue(this._data["基本每股收益"], true)[0];
    price = this.getSharePrice();
    PE = (price / earnPerShare).toFixed(2);
    return PE;
  };

  return ProfitStatement;

})(TableBase);

module.exports = ProfitStatement;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../tools/utils.coffee":14,"./TableBase.coffee":11}],11:[function(require,module,exports){
(function (global){
var TableBase;

TableBase = (function() {
  function TableBase(_stockType, _stockCode) {
    this._stockType = _stockType;
    this._stockCode = _stockCode;
    this._data = [];
    this._loadJson();
  }

  TableBase.prototype.getFilePath = function() {};

  TableBase.prototype.getStockCode = function() {
    return this._stockCode;
  };

  TableBase.prototype._loadJson = function() {
    var filePath;
    filePath = this.getFilePath();
    return cc.loader.loadJson(filePath, (function(_this) {
      return function(error, data) {
        global.loadNum++;
        console.log("load num:" + global.loadNum);
        return _this._data = data;
      };
    })(this));
  };

  TableBase.prototype.getBaseInfo = function() {
    return this._data["资料"][0] + "------" + this._data["资料"][2];
  };

  TableBase.prototype.getSharePrice = function() {
    return this._data["资料"][1];
  };

  TableBase.prototype._getShowNumber = function(number) {
    return ((number / 100000).toFixed(2)) + " 亿";
  };

  TableBase.prototype.getFormatNumberTable = function(numberTable) {
    var formatTable, i, len, number;
    formatTable = [];
    for (i = 0, len = numberTable.length; i < len; i++) {
      number = numberTable[i];
      formatTable.push(this._getShowNumber(number));
    }
    return formatTable;
  };

  TableBase.prototype._getYearValueIndex = function() {
    var i, index, indexTable, len, ref, timeStr;
    indexTable = [];
    ref = this._data["报告日期"];
    for (index = i = 0, len = ref.length; i < len; index = ++i) {
      timeStr = ref[index];
      if (timeStr.indexOf("12-31") !== -1) {
        indexTable.push(index);
      }
    }
    return indexTable;
  };

  TableBase.prototype._getValueLength = function(valueLength) {
    var length;
    if (valueLength < global.year) {
      length = valueLength;
    } else {
      length = global.year;
    }
    return length;
  };

  TableBase.prototype._formatToInt = function(valueTable) {
    var i, intTable, len, value;
    intTable = [];
    for (i = 0, len = valueTable.length; i < len; i++) {
      value = valueTable[i];
      intTable.push(parseInt(value));
    }
    return intTable;
  };

  TableBase.prototype.getValue = function(data, doNotToInt) {
    var i, index, len, valueTable, yearIndexTable;
    yearIndexTable = this._getYearValueIndex();
    valueTable = [];
    for (i = 0, len = yearIndexTable.length; i < len; i++) {
      index = yearIndexTable[i];
      valueTable.push(data[index]);
    }
    valueTable = valueTable.slice(0, this._getValueLength(valueTable.length));
    if (doNotToInt) {
      return valueTable;
    }
    return this._formatToInt(valueTable);
  };

  return TableBase;

})();

module.exports = TableBase;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],12:[function(require,module,exports){
var LayerManager, Loader;

LayerManager = {
  init: function() {
    this.layerStack = [];
    this.scene = new cc.Scene();
    return cc.director.runScene(this.scene);
  },
  clearLayer: function() {
    this.scene.removeAllChildren();
    return this.layerStack.length = 0;
  },
  addLayerToScene: function(ccbLayer, zOrder) {
    var layout, node;
    if (zOrder == null) {
      zOrder = 0;
    }
    layout = new ccui.Layout();
    layout.setContentSize(cc.size(1136, 640));
    layout.setTouchEnabled(true);
    node = new cc.Node();
    node.addChild(layout);
    node.addChild(ccbLayer);
    this.scene.addChild(node, zOrder);
    return this.layerStack.push(node);
  },
  removeTopLayer: function() {
    var topLayer;
    topLayer = this.layerStack.pop();
    return this.scene.removeChild(topLayer, true);
  }
};

Loader = (function() {
  function Loader(ccbFile1, controllerName1) {
    this.ccbFile = ccbFile1;
    this.controllerName = controllerName1;
  }

  Loader.prototype.showDialog = function() {
    return cc.BuilderReader.load(this.ccbFile);
  };

  return Loader;

})();

LayerManager.defineDialog = function(ccbFile, controllerName, controllerClass) {
  cc.BuilderReader.registerController(controllerName, new controllerClass());
  return new Loader(ccbFile, controllerName);
};

module.exports = LayerManager;


},{}],13:[function(require,module,exports){
var ScrollView;

ScrollView = {
  createScrollView: function(targetNode) {
    var container, scrollView, size;
    size = targetNode.getContentSize();
    container = new cc.Node();
    scrollView = new cc.ScrollView(size, container);
    scrollView.setPosition(targetNode.getPosition());
    scrollView.setDirection(cc.SCROLLVIEW_DIRECTION_VERTICAL);
    scrollView.setTouchEnabled(true);
    return scrollView;
  },
  initFromContainer: function(scrollView, inner) {
    var container;
    inner.setPosition({
      x: 0,
      y: 0
    });
    inner.setAnchorPoint({
      x: 0,
      y: 0
    });
    inner.removeFromParent();
    container = scrollView.getContainer();
    container.removeAllChildren(true);
    container.setContentSize(inner.getContentSize());
    return container.addChild(inner);
  },
  scrollJumpToTop: function(scrollView) {
    var container, offset;
    container = scrollView.getContainer();
    offset = scrollView.getViewSize().height - container.getContentSize().height;
    if (offset < 0) {
      return scrollView.setContentOffset({
        x: 0,
        y: offset
      });
    } else {
      return scrollView.setContentOffset({
        x: 0,
        y: 0
      });
    }
  }
};

module.exports = ScrollView;


},{}],14:[function(require,module,exports){
var utils;

utils = {
  getCompoundRate: function(addRate, time) {
    return Math.exp(1 / time * Math.log(addRate));
  },
  getAverage: function(table) {
    var ave, i, len, total, value;
    total = 0;
    for (i = 0, len = table.length; i < len; i++) {
      value = table[i];
      total += parseInt(value);
    }
    ave = (total / table.length).toFixed(2);
    return ave;
  },
  addTab: function(value) {
    return value + "\t\t";
  },
  getStockTable: function(dir) {
    var stockTable, stockTableHs300, stockTableZz1000;
    stockTableHs300 = ["SZ000001", "SZ000002", "SZ000008", "SZ000060", "SZ000063", "SZ000069", "SZ000100", "SZ000157", "SZ000166", "SZ000333", "SZ000338", "SZ000402", "SZ000413", "SZ000415", "SZ000423", "SZ000425", "SZ000503", "SZ000538", "SZ000540", "SZ000559", "SZ000568", "SZ000623", "SZ000625", "SZ000627", "SZ000630", "SZ000651", "SZ000671", "SZ000686", "SZ000709", "SZ000723", "SZ000725", "SZ000728", "SZ000738", "SZ000750", "SZ000768", "SZ000776", "SZ000783", "SZ000792", "SZ000826", "SZ000839", "SZ000858", "SZ000876", "SZ000895", "SZ000898", "SZ000938", "SZ000959", "SZ000961", "SZ000963", "SZ000983", "SZ001979", "SZ002007", "SZ002008", "SZ002024", "SZ002027", "SZ002044", "SZ002065", "SZ002074", "SZ002081", "SZ002142", "SZ002146", "SZ002153", "SZ002174", "SZ002202", "SZ002230", "SZ002236", "SZ002241", "SZ002252", "SZ002292", "SZ002294", "SZ002304", "SZ002310", "SZ002352", "SZ002385", "SZ002411", "SZ002415", "SZ002424", "SZ002426", "SZ002450", "SZ002456", "SZ002460", "SZ002465", "SZ002466", "SZ002468", "SZ002470", "SZ002475", "SZ002500", "SZ002508", "SZ002555", "SZ002558", "SZ002572", "SZ002594", "SZ002601", "SZ002602", "SZ002608", "SZ002624", "SZ002673", "SZ002714", "SZ002736", "SZ002739", "SZ002797", "SZ002831", "SZ002839", "SZ002841", "SZ300003", "SZ300015", "SZ300017", "SZ300024", "SZ300027", "SZ300033", "SZ300059", "SZ300070", "SZ300072", "SZ300122", "SZ300124", "SZ300136", "SZ300144", "SZ300251", "SZ300315", "SH600000", "SH600008", "SH600009", "SH600010", "SH600011", "SH600015", "SH600016", "SH600018", "SH600019", "SH600021", "SH600023", "SH600028", "SH600029", "SH600030", "SH600031", "SH600036", "SH600038", "SH600048", "SH600050", "SH600061", "SH600066", "SH600068", "SH600074", "SH600085", "SH600089", "SH600100", "SH600104", "SH600109", "SH600111", "SH600115", "SH600118", "SH600153", "SH600157", "SH600170", "SH600177", "SH600188", "SH600196", "SH600208", "SH600219", "SH600221", "SH600233", "SH600271", "SH600276", "SH600297", "SH600309", "SH600332", "SH600340", "SH600352", "SH600362", "SH600369", "SH600372", "SH600373", "SH600376", "SH600383", "SH600390", "SH600406", "SH600415", "SH600436", "SH600482", "SH600485", "SH600489", "SH600498", "SH600518", "SH600519", "SH600522", "SH600535", "SH600547", "SH600549", "SH600570", "SH600583", "SH600585", "SH600588", "SH600606", "SH600637", "SH600649", "SH600660", "SH600663", "SH600674", "SH600682", "SH600685", "SH600688", "SH600690", "SH600703", "SH600704", "SH600705", "SH600739", "SH600741", "SH600795", "SH600804", "SH600816", "SH600820", "SH600827", "SH600837", "SH600871", "SH600886", "SH600887", "SH600893", "SH600895", "SH600900", "SH600909", "SH600919", "SH600926", "SH600958", "SH600959", "SH600977", "SH600999", "SH601006", "SH601009", "SH601012", "SH601018", "SH601021", "SH601088", "SH601099", "SH601111", "SH601117", "SH601118", "SH601155", "SH601163", "SH601166", "SH601169", "SH601186", "SH601198", "SH601211", "SH601212", "SH601216", "SH601225", "SH601228", "SH601229", "SH601288", "SH601318", "SH601328", "SH601333", "SH601336", "SH601375", "SH601377", "SH601390", "SH601398", "SH601555", "SH601600", "SH601601", "SH601607", "SH601608", "SH601611", "SH601618", "SH601628", "SH601633", "SH601668", "SH601669", "SH601688", "SH601718", "SH601727", "SH601766", "SH601788", "SH601800", "SH601818", "SH601857", "SH601866", "SH601872", "SH601877", "SH601878", "SH601881", "SH601888", "SH601898", "SH601899", "SH601901", "SH601919", "SH601933", "SH601939", "SH601958", "SH601966", "SH601985", "SH601988", "SH601989", "SH601991", "SH601992", "SH601997", "SH601998", "SH603160", "SH603799", "SH603833", "SH603858", "SH603993"];
    stockTableZz1000 = ["SZ000010", "SZ000011", "SZ000016", "SZ000018", "SZ000022", "SZ000029", "SZ000034", "SZ000035", "SZ000036", "SZ000038", "SZ000040", "SZ000042", "SZ000043", "SZ000048", "SZ000055", "SZ000058", "SZ000059", "SZ000065", "SZ000070", "SZ000088", "SZ000150", "SZ000151", "SZ000159", "SZ000404", "SZ000407", "SZ000409", "SZ000416", "SZ000429", "SZ000498", "SZ000506", "SZ000514", "SZ000516", "SZ000518", "SZ000520", "SZ000525", "SZ000532", "SZ000533", "SZ000537", "SZ000544", "SZ000545", "SZ000546", "SZ000548", "SZ000550", "SZ000551", "SZ000553", "SZ000554", "SZ000558", "SZ000560", "SZ000561", "SZ000571", "SZ000573", "SZ000576", "SZ000582", "SZ000584", "SZ000591", "SZ000601", "SZ000603", "SZ000607", "SZ000615", "SZ000626", "SZ000637", "SZ000639", "SZ000650", "SZ000657", "SZ000665", "SZ000666", "SZ000672", "SZ000673", "SZ000676", "SZ000683", "SZ000687", "SZ000688", "SZ000700", "SZ000701", "SZ000711", "SZ000717", "SZ000719", "SZ000722", "SZ000731", "SZ000733", "SZ000735", "SZ000739", "SZ000751", "SZ000752", "SZ000757", "SZ000760", "SZ000767", "SZ000782", "SZ000789", "SZ000795", "SZ000796", "SZ000797", "SZ000800", "SZ000801", "SZ000802", "SZ000811", "SZ000818", "SZ000819", "SZ000820", "SZ000821", "SZ000828", "SZ000831", "SZ000836", "SZ000837", "SZ000838", "SZ000851", "SZ000863", "SZ000869", "SZ000875", "SZ000881", "SZ000882", "SZ000885", "SZ000889", "SZ000892", "SZ000893", "SZ000899", "SZ000901", "SZ000902", "SZ000905", "SZ000910", "SZ000915", "SZ000917", "SZ000918", "SZ000920", "SZ000921", "SZ000925", "SZ000927", "SZ000928", "SZ000933", "SZ000936", "SZ000951", "SZ000952", "SZ000957", "SZ000958", "SZ000965", "SZ000967", "SZ000968", "SZ000971", "SZ000973", "SZ000976", "SZ000980", "SZ000989", "SZ000996", "SZ001896", "SZ002009", "SZ002016", "SZ002017", "SZ002023", "SZ002025", "SZ002031", "SZ002033", "SZ002035", "SZ002036", "SZ002042", "SZ002043", "SZ002047", "SZ002053", "SZ002055", "SZ002059", "SZ002060", "SZ002067", "SZ002071", "SZ002079", "SZ002080", "SZ002086", "SZ002089", "SZ002091", "SZ002094", "SZ002095", "SZ002097", "SZ002099", "SZ002100", "SZ002102", "SZ002104", "SZ002108", "SZ002110", "SZ002113", "SZ002114", "SZ002115", "SZ002117", "SZ002121", "SZ002124", "SZ002126", "SZ002130", "SZ002135", "SZ002137", "SZ002138", "SZ002139", "SZ002141", "SZ002145", "SZ002148", "SZ002151", "SZ002154", "SZ002156", "SZ002157", "SZ002166", "SZ002167", "SZ002171", "SZ002175", "SZ002177", "SZ002178", "SZ002182", "SZ002185", "SZ002192", "SZ002196", "SZ002197", "SZ002198", "SZ002203", "SZ002204", "SZ002206", "SZ002210", "SZ002212", "SZ002215", "SZ002218", "SZ002222", "SZ002224", "SZ002226", "SZ002229", "SZ002231", "SZ002232", "SZ002234", "SZ002235", "SZ002237", "SZ002239", "SZ002245", "SZ002246", "SZ002247", "SZ002253", "SZ002255", "SZ002256", "SZ002259", "SZ002260", "SZ002262", "SZ002263", "SZ002274", "SZ002279", "SZ002283", "SZ002284", "SZ002287", "SZ002288", "SZ002296", "SZ002298", "SZ002301", "SZ002302", "SZ002303", "SZ002305", "SZ002307", "SZ002313", "SZ002314", "SZ002318", "SZ002320", "SZ002321", "SZ002322", "SZ002323", "SZ002326", "SZ002329", "SZ002331", "SZ002335", "SZ002339", "SZ002341", "SZ002343", "SZ002346", "SZ002349", "SZ002351", "SZ002355", "SZ002362", "SZ002363", "SZ002364", "SZ002367", "SZ002372", "SZ002376", "SZ002378", "SZ002383", "SZ002387", "SZ002388", "SZ002389", "SZ002393", "SZ002401", "SZ002402", "SZ002406", "SZ002413", "SZ002418", "SZ002419", "SZ002421", "SZ002425", "SZ002427", "SZ002429", "SZ002430", "SZ002432", "SZ002433", "SZ002436", "SZ002443", "SZ002445", "SZ002446", "SZ002447", "SZ002448", "SZ002449", "SZ002451", "SZ002452", "SZ002453", "SZ002457", "SZ002458", "SZ002461", "SZ002462", "SZ002464", "SZ002467", "SZ002474", "SZ002476", "SZ002481", "SZ002483", "SZ002484", "SZ002488", "SZ002494", "SZ002496", "SZ002497", "SZ002499", "SZ002501", "SZ002502", "SZ002507", "SZ002509", "SZ002510", "SZ002511", "SZ002515", "SZ002516", "SZ002518", "SZ002519", "SZ002521", "SZ002522", "SZ002524", "SZ002531", "SZ002534", "SZ002535", "SZ002537", "SZ002538", "SZ002539", "SZ002542", "SZ002543", "SZ002545", "SZ002547", "SZ002550", "SZ002554", "SZ002556", "SZ002559", "SZ002562", "SZ002564", "SZ002567", "SZ002574", "SZ002575", "SZ002577", "SZ002579", "SZ002581", "SZ002582", "SZ002584", "SZ002585", "SZ002586", "SZ002590", "SZ002596", "SZ002597", "SZ002600", "SZ002604", "SZ002605", "SZ002606", "SZ002609", "SZ002610", "SZ002611", "SZ002614", "SZ002616", "SZ002617", "SZ002618", "SZ002619", "SZ002622", "SZ002625", "SZ002626", "SZ002630", "SZ002631", "SZ002636", "SZ002638", "SZ002643", "SZ002647", "SZ002648", "SZ002649", "SZ002650", "SZ002651", "SZ002655", "SZ002656", "SZ002658", "SZ002660", "SZ002662", "SZ002664", "SZ002667", "SZ002668", "SZ002675", "SZ002677", "SZ002678", "SZ002680", "SZ002684", "SZ002695", "SZ002697", "SZ002703", "SZ002711", "SZ002712", "SZ002716", "SZ002717", "SZ002721", "SZ002724", "SZ002726", "SZ002733", "SZ002737", "SZ002746", "SZ002747", "SZ002751", "SZ002752", "SZ002756", "SZ002759", "SZ002762", "SZ002766", "SZ002769", "SZ002772", "SZ002781", "SZ002782", "SZ002783", "SZ002786", "SZ002788", "SZ002790", "SZ002791", "SZ002792", "SZ002801", "SZ002802", "SZ002812", "SZ002821", "SZ002822", "SZ002850", "SZ002852", "SZ002859", "SZ002867", "SZ002872", "SZ300005", "SZ300006", "SZ300007", "SZ300008", "SZ300009", "SZ300011", "SZ300012", "SZ300014", "SZ300016", "SZ300020", "SZ300021", "SZ300028", "SZ300030", "SZ300031", "SZ300034", "SZ300036", "SZ300037", "SZ300038", "SZ300044", "SZ300045", "SZ300047", "SZ300048", "SZ300050", "SZ300051", "SZ300052", "SZ300053", "SZ300054", "SZ300056", "SZ300063", "SZ300064", "SZ300065", "SZ300066", "SZ300068", "SZ300071", "SZ300073", "SZ300074", "SZ300075", "SZ300076", "SZ300077", "SZ300078", "SZ300079", "SZ300083", "SZ300084", "SZ300085", "SZ300086", "SZ300090", "SZ300096", "SZ300097", "SZ300098", "SZ300100", "SZ300101", "SZ300102", "SZ300109", "SZ300110", "SZ300114", "SZ300118", "SZ300128", "SZ300130", "SZ300131", "SZ300135", "SZ300137", "SZ300140", "SZ300142", "SZ300145", "SZ300148", "SZ300149", "SZ300152", "SZ300157", "SZ300160", "SZ300165", "SZ300168", "SZ300170", "SZ300171", "SZ300172", "SZ300173", "SZ300175", "SZ300177", "SZ300178", "SZ300180", "SZ300183", "SZ300184", "SZ300185", "SZ300188", "SZ300191", "SZ300194", "SZ300198", "SZ300203", "SZ300205", "SZ300207", "SZ300208", "SZ300209", "SZ300212", "SZ300213", "SZ300215", "SZ300216", "SZ300219", "SZ300221", "SZ300222", "SZ300223", "SZ300224", "SZ300226", "SZ300227", "SZ300228", "SZ300229", "SZ300231", "SZ300232", "SZ300236", "SZ300237", "SZ300238", "SZ300242", "SZ300245", "SZ300248", "SZ300252", "SZ300255", "SZ300256", "SZ300262", "SZ300263", "SZ300269", "SZ300271", "SZ300276", "SZ300278", "SZ300284", "SZ300285", "SZ300288", "SZ300292", "SZ300294", "SZ300295", "SZ300299", "SZ300300", "SZ300302", "SZ300303", "SZ300304", "SZ300307", "SZ300308", "SZ300309", "SZ300310", "SZ300311", "SZ300312", "SZ300316", "SZ300317", "SZ300322", "SZ300323", "SZ300328", "SZ300332", "SZ300333", "SZ300336", "SZ300339", "SZ300343", "SZ300347", "SZ300348", "SZ300349", "SZ300350", "SZ300352", "SZ300353", "SZ300355", "SZ300356", "SZ300359", "SZ300362", "SZ300363", "SZ300364", "SZ300366", "SZ300367", "SZ300368", "SZ300369", "SZ300373", "SZ300377", "SZ300378", "SZ300379", "SZ300380", "SZ300381", "SZ300386", "SZ300388", "SZ300392", "SZ300403", "SZ300406", "SZ300409", "SZ300410", "SZ300413", "SZ300418", "SZ300419", "SZ300424", "SZ300426", "SZ300429", "SZ300431", "SZ300432", "SZ300438", "SZ300439", "SZ300440", "SZ300441", "SZ300443", "SZ300447", "SZ300449", "SZ300450", "SZ300456", "SZ300457", "SZ300458", "SZ300459", "SZ300463", "SZ300465", "SZ300467", "SZ300468", "SZ300471", "SZ300474", "SZ300476", "SZ300482", "SZ300484", "SZ300485", "SZ300494", "SZ300495", "SZ300496", "SZ300497", "SZ300502", "SZ300506", "SZ300507", "SZ300508", "SZ300511", "SZ300512", "SZ300516", "SZ300518", "SZ300520", "SZ300522", "SZ300523", "SZ300527", "SZ300528", "SZ300529", "SZ300531", "SZ300533", "SZ300558", "SZ300568", "SZ300601", "SZ300613", "SZ300616", "SZ300618", "SZ300625", "SZ300628", "SZ300633", "SZ300660", "SZ300679", "SH600007", "SH600012", "SH600020", "SH600033", "SH600035", "SH600054", "SH600057", "SH600063", "SH600067", "SH600072", "SH600075", "SH600076", "SH600082", "SH600084", "SH600090", "SH600093", "SH600096", "SH600101", "SH600103", "SH600105", "SH600106", "SH600107", "SH600110", "SH600113", "SH600114", "SH600116", "SH600119", "SH600123", "SH600129", "SH600130", "SH600132", "SH600133", "SH600135", "SH600136", "SH600162", "SH600165", "SH600172", "SH600173", "SH600175", "SH600185", "SH600190", "SH600192", "SH600193", "SH600197", "SH600206", "SH600207", "SH600209", "SH600210", "SH600217", "SH600226", "SH600227", "SH600230", "SH600231", "SH600237", "SH600239", "SH600246", "SH600252", "SH600255", "SH600258", "SH600261", "SH600269", "SH600273", "SH600278", "SH600279", "SH600283", "SH600285", "SH600288", "SH600290", "SH600303", "SH600310", "SH600313", "SH600318", "SH600320", "SH600321", "SH600322", "SH600323", "SH600326", "SH600330", "SH600331", "SH600336", "SH600337", "SH600343", "SH600354", "SH600359", "SH600360", "SH600363", "SH600381", "SH600382", "SH600386", "SH600391", "SH600399", "SH600400", "SH600405", "SH600420", "SH600446", "SH600449", "SH600456", "SH600459", "SH600467", "SH600470", "SH600477", "SH600480", "SH600486", "SH600490", "SH600491", "SH600495", "SH600501", "SH600502", "SH600507", "SH600508", "SH600512", "SH600523", "SH600526", "SH600531", "SH600533", "SH600546", "SH600548", "SH600550", "SH600552", "SH600559", "SH600562", "SH600567", "SH600568", "SH600569", "SH600571", "SH600577", "SH600590", "SH600592", "SH600595", "SH600602", "SH600604", "SH600612", "SH600616", "SH600620", "SH600621", "SH600622", "SH600624", "SH600626", "SH600629", "SH600630", "SH600634", "SH600638", "SH600641", "SH600650", "SH600652", "SH600658", "SH600662", "SH600667", "SH600668", "SH600675", "SH600676", "SH600677", "SH600681", "SH600684", "SH600686", "SH600692", "SH600693", "SH600702", "SH600707", "SH600708", "SH600711", "SH600728", "SH600730", "SH600734", "SH600735", "SH600740", "SH600742", "SH600744", "SH600745", "SH600756", "SH600758", "SH600763", "SH600764", "SH600771", "SH600775", "SH600777", "SH600779", "SH600782", "SH600783", "SH600784", "SH600789", "SH600797", "SH600798", "SH600800", "SH600803", "SH600807", "SH600812", "SH600814", "SH600818", "SH600824", "SH600828", "SH600830", "SH600836", "SH600838", "SH600843", "SH600845", "SH600846", "SH600855", "SH600856", "SH600865", "SH600868", "SH600876", "SH600963", "SH600965", "SH600973", "SH600986", "SH600987", "SH600988", "SH600990", "SH600995", "SH600997", "SH601003", "SH601007", "SH601011", "SH601015", "SH601038", "SH601058", "SH601069", "SH601101", "SH601107", "SH601116", "SH601126", "SH601137", "SH601222", "SH601339", "SH601366", "SH601388", "SH601500", "SH601566", "SH601588", "SH601595", "SH601599", "SH601636", "SH601666", "SH601700", "SH601789", "SH601799", "SH601858", "SH601882", "SH601890", "SH601900", "SH601918", "SH601952", "SH601968", "SH603003", "SH603008", "SH603010", "SH603026", "SH603043", "SH603058", "SH603063", "SH603081", "SH603098", "SH603108", "SH603111", "SH603113", "SH603116", "SH603118", "SH603126", "SH603128", "SH603166", "SH603218", "SH603227", "SH603233", "SH603258", "SH603298", "SH603299", "SH603303", "SH603305", "SH603308", "SH603313", "SH603323", "SH603337", "SH603338", "SH603339", "SH603358", "SH603368", "SH603385", "SH603393", "SH603398", "SH603421", "SH603508", "SH603517", "SH603555", "SH603579", "SH603588", "SH603600", "SH603603", "SH603609", "SH603612", "SH603618", "SH603626", "SH603636", "SH603660", "SH603669", "SH603678", "SH603686", "SH603707", "SH603708", "SH603718", "SH603727", "SH603730", "SH603758", "SH603777", "SH603779", "SH603800", "SH603803", "SH603817", "SH603839", "SH603843", "SH603861", "SH603881", "SH603885", "SH603898", "SH603900", "SH603919", "SH603920", "SH603939", "SH603958", "SH603959", "SH603979", "SH603980", "SH603989", "SH603996", "SH603997", "SH603999"];
    stockTable = [];
    switch (dir) {
      case "hs300":
        stockTable = stockTableHs300;
        break;
      case "zz1000":
        stockTable = stockTableZz1000;
    }
    return stockTable;
  }
};

module.exports = utils;


},{}]},{},[6])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvY2NiVmlldy9BcmtNYWluRGlhbG9nLmNvZmZlZSIsInNyYy9jb250cm9sL0Fya0dhbWVMb2dpYy5jb2ZmZWUiLCJzcmMvZXZlbnQvQXJrRXZlbnRNYW5hZ2VyLmNvZmZlZSIsInNyYy9ldmVudC9BcmtFdmVudE5hbWVzLmNvZmZlZSIsInNyYy9nbG9iYWxWYWx1ZS5jb2ZmZWUiLCJzcmMvbWFpbi5jb2ZmZWUiLCJzcmMvbW9kZWwvQXJrVXNlckRhdGEuY29mZmVlIiwic3JjL21vZGVsL0JhbGFuY2VTaGVldC5jb2ZmZWUiLCJzcmMvbW9kZWwvQ2FzaEZsb3dTdGF0ZW1lbnQuY29mZmVlIiwic3JjL21vZGVsL1Byb2ZpdFN0YXRlbWVudC5jb2ZmZWUiLCJzcmMvbW9kZWwvVGFibGVCYXNlLmNvZmZlZSIsInNyYy90b29scy9BcmtTY2VuZU1hbmFnZXIuY29mZmVlIiwic3JjL3Rvb2xzL1Njcm9sbFZpZXcuY29mZmVlIiwic3JjL3Rvb2xzL3V0aWxzLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQ3BGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3hKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQzlCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ25CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDL0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDbkdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3hCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQ25EQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDekdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUN2REE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDbERBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJ2YXIgQXJrTWFpbkRpYWxvZywgQXJrU2Nyb2xsVmlldywgZXZlbnRNYW5hZ2VyLCBldmVudE5hbWVzLCBnX2NsaWNrX3RpbWVzO1xuXG5ldmVudE1hbmFnZXIgPSByZXF1aXJlKCcuLi9ldmVudC9BcmtFdmVudE1hbmFnZXIuY29mZmVlJyk7XG5cbmV2ZW50TmFtZXMgPSByZXF1aXJlKCcuLi9ldmVudC9BcmtFdmVudE5hbWVzLmNvZmZlZScpO1xuXG5BcmtTY3JvbGxWaWV3ID0gcmVxdWlyZSgnLi4vdG9vbHMvU2Nyb2xsVmlldy5jb2ZmZWUnKTtcblxuZ19jbGlja190aW1lcyA9IDA7XG5cbkFya01haW5EaWFsb2cgPSAoZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIEFya01haW5EaWFsb2coKSB7fVxuXG4gIEFya01haW5EaWFsb2cucHJvdG90eXBlLm9uRGlkTG9hZEZyb21DQ0IgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9kYXRUYWJsZSA9IFtdO1xuICAgIHRoaXMuX3Jlc2V0KCk7XG4gICAgcmV0dXJuIHRoaXMuaW5pdCgpO1xuICB9O1xuXG4gIEFya01haW5EaWFsb2cucHJvdG90eXBlLl9yZXNldCA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3Njcm9sbFZpZXcgPSBudWxsO1xuICAgIHRoaXMuX3N0b2NrQ29kZUVkaXRCb3ggPSBudWxsO1xuICAgIHJldHVybiB0aGlzLl95ZWFyc0VkaXRCb3ggPSBudWxsO1xuICB9O1xuXG4gIEFya01haW5EaWFsb2cucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9zdG9ja0NvZGVFZGl0Qm94ID0gdGhpcy5fY3JlYXRlRWRpdEJveCh0aGlzLmNjYl90ZXh0RmllbGRfMSk7XG4gICAgdGhpcy5yb290Tm9kZS5hZGRDaGlsZCh0aGlzLl9zdG9ja0NvZGVFZGl0Qm94KTtcbiAgICB0aGlzLl95ZWFyc0VkaXRCb3ggPSB0aGlzLl9jcmVhdGVFZGl0Qm94KHRoaXMuY2NiX3RleHRGaWVsZF8yKTtcbiAgICB0aGlzLnJvb3ROb2RlLmFkZENoaWxkKHRoaXMuX3llYXJzRWRpdEJveCk7XG4gICAgdGhpcy5faW5pdERhdGEoKTtcbiAgICB0aGlzLl9zY3JvbGxWaWV3ID0gQXJrU2Nyb2xsVmlldy5jcmVhdGVTY3JvbGxWaWV3KHRoaXMuY2NiX3Njcm9sbFZpZXcpO1xuICAgIHRoaXMucm9vdE5vZGUuYWRkQ2hpbGQodGhpcy5fc2Nyb2xsVmlldyk7XG4gICAgQXJrU2Nyb2xsVmlldy5pbml0RnJvbUNvbnRhaW5lcih0aGlzLl9zY3JvbGxWaWV3LCB0aGlzLmNjYl9yZXN1bHQpO1xuICB9O1xuXG4gIEFya01haW5EaWFsb2cucHJvdG90eXBlLl9pbml0RGF0YSA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3N0b2NrQ29kZUVkaXRCb3guc2V0U3RyaW5nKFwiMDAwNjUxXCIpO1xuICAgIHJldHVybiB0aGlzLl95ZWFyc0VkaXRCb3guc2V0U3RyaW5nKFwiNlwiKTtcbiAgfTtcblxuICBBcmtNYWluRGlhbG9nLnByb3RvdHlwZS5fY3JlYXRlRWRpdEJveCA9IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICB2YXIgZWRpdEJveDtcbiAgICBlZGl0Qm94ID0gbmV3IGNjLkVkaXRCb3goY2Muc2l6ZSgyMDAsIDUwKSk7XG4gICAgZWRpdEJveC5zZXRQb3NpdGlvbihub2RlLmdldFBvc2l0aW9uKCkpO1xuICAgIGVkaXRCb3guc2V0SW5wdXRNb2RlKGNjLkVESVRCT1hfSU5QVVRfTU9ERV9TSU5HTEVMSU5FKTtcbiAgICBlZGl0Qm94LnNldFJldHVyblR5cGUoY2MuS0VZQk9BUkRfUkVUVVJOVFlQRV9ET05FKTtcbiAgICBlZGl0Qm94LnNldElucHV0RmxhZyhjYy5FRElUQk9YX0lOUFVUX0ZMQUdfSU5JVElBTF9DQVBTX1NFTlRFTkNFKTtcbiAgICBlZGl0Qm94LnNldE1heExlbmd0aCgxMyk7XG4gICAgZWRpdEJveC5zZXRGb250KFwiQXJpYWxcIiwgMjYpO1xuICAgIGVkaXRCb3guc2V0Rm9udENvbG9yKGNjLmNvbG9yKDEwMCwgMTAwLCAyNTUsIDI1NSkpO1xuICAgIHJldHVybiBlZGl0Qm94O1xuICB9O1xuXG4gIEFya01haW5EaWFsb2cucHJvdG90eXBlLnNob3dSZXN1bHQgPSBmdW5jdGlvbihyZXN1bHQpIHtcbiAgICB0aGlzLmNjYl9yZXN1bHQuc2V0U3RyaW5nKHJlc3VsdCk7XG4gICAgQXJrU2Nyb2xsVmlldy5pbml0RnJvbUNvbnRhaW5lcih0aGlzLl9zY3JvbGxWaWV3LCB0aGlzLmNjYl9yZXN1bHQpO1xuICAgIHJldHVybiBBcmtTY3JvbGxWaWV3LnNjcm9sbEp1bXBUb1RvcCh0aGlzLl9zY3JvbGxWaWV3KTtcbiAgfTtcblxuICBBcmtNYWluRGlhbG9nLnByb3RvdHlwZS5vbkNhbGMgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RvY2tDb2RlLCB5ZWFycztcbiAgICBzdG9ja0NvZGUgPSB0aGlzLl9zdG9ja0NvZGVFZGl0Qm94LmdldFN0cmluZygpO1xuICAgIHllYXJzID0gdGhpcy5feWVhcnNFZGl0Qm94LmdldFN0cmluZygpO1xuICAgIGdsb2JhbC55ZWFyID0geWVhcnM7XG4gICAgcmV0dXJuIGV2ZW50TWFuYWdlci5zZW5kKGV2ZW50TmFtZXMuR0FNRV9HRVRfUkVTVUxULCB7XG4gICAgICBzdG9ja0NvZGU6IHN0b2NrQ29kZSxcbiAgICAgIGNhbGxiYWNrOiAoZnVuY3Rpb24oX3RoaXMpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHN0cikge1xuICAgICAgICAgIHJldHVybiBfdGhpcy5zaG93UmVzdWx0KHN0cik7XG4gICAgICAgIH07XG4gICAgICB9KSh0aGlzKVxuICAgIH0pO1xuICB9O1xuXG4gIGNjLkJ1aWxkZXJSZWFkZXIucmVnaXN0ZXJDb250cm9sbGVyKFwiQXJrTWFpbkRpYWxvZ1wiLCBuZXcgQXJrTWFpbkRpYWxvZygpKTtcblxuICByZXR1cm4gQXJrTWFpbkRpYWxvZztcblxufSkoKTtcblxubW9kdWxlLmV4cG9ydHMgPSBjYy5CdWlsZGVyUmVhZGVyLmxvYWQoXCJyZXMvbWFpbi5jY2JpXCIpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUwxVnpaWEp6TDNSaGIzZDFMM04wZFdSNUwwRnlhMkZrTDBGeWEyRmtSMkZ0WlM5emNtTXZZMk5pVm1sbGR5OUJjbXROWVdsdVJHbGhiRzluTG1OdlptWmxaU0lzSW5OdmRYSmpaVkp2YjNRaU9pSWlMQ0p6YjNWeVkyVnpJanBiSWk5VmMyVnljeTkwWVc5M2RTOXpkSFZrZVM5QmNtdGhaQzlCY210aFpFZGhiV1V2YzNKakwyTmpZbFpwWlhjdlFYSnJUV0ZwYmtScFlXeHZaeTVqYjJabVpXVWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzU1VGQlFUczdRVUZCUVN4WlFVRkJMRWRCUVdVc1QwRkJRU3hEUVVGUkxHbERRVUZTT3p0QlFVTm1MRlZCUVVFc1IwRkJZU3hQUVVGQkxFTkJRVkVzSzBKQlFWSTdPMEZCUTJJc1lVRkJRU3hIUVVGblFpeFBRVUZCTEVOQlFWRXNORUpCUVZJN08wRkJSV2hDTEdGQlFVRXNSMEZCWjBJN08wRkJSVlk3T3pzd1FrRkRSaXhuUWtGQlFTeEhRVUZyUWl4VFFVRkJPMGxCUTJRc1NVRkJReXhEUVVGQkxGTkJRVVFzUjBGQllUdEpRVU5pTEVsQlFVTXNRMEZCUVN4TlFVRkVMRU5CUVVFN1YwRkRRU3hKUVVGRExFTkJRVUVzU1VGQlJDeERRVUZCTzBWQlNHTTdPekJDUVV0c1FpeE5RVUZCTEVkQlFWRXNVMEZCUVR0SlFVTktMRWxCUVVNc1EwRkJRU3hYUVVGRUxFZEJRV1U3U1VGRFppeEpRVUZETEVOQlFVRXNhVUpCUVVRc1IwRkJjVUk3VjBGRGNrSXNTVUZCUXl4RFFVRkJMR0ZCUVVRc1IwRkJhVUk3UlVGSVlqczdNRUpCUzFJc1NVRkJRU3hIUVVGTkxGTkJRVUU3U1VGRFJpeEpRVUZETEVOQlFVRXNhVUpCUVVRc1IwRkJjVUlzU1VGQlF5eERRVUZCTEdOQlFVUXNRMEZCWjBJc1NVRkJReXhEUVVGQkxHVkJRV3BDTzBsQlEzSkNMRWxCUVVNc1EwRkJRU3hSUVVGUkxFTkJRVU1zVVVGQlZpeERRVUZ0UWl4SlFVRkRMRU5CUVVFc2FVSkJRWEJDTzBsQlJVRXNTVUZCUXl4RFFVRkJMR0ZCUVVRc1IwRkJhVUlzU1VGQlF5eERRVUZCTEdOQlFVUXNRMEZCWjBJc1NVRkJReXhEUVVGQkxHVkJRV3BDTzBsQlEycENMRWxCUVVNc1EwRkJRU3hSUVVGUkxFTkJRVU1zVVVGQlZpeERRVUZ0UWl4SlFVRkRMRU5CUVVFc1lVRkJjRUk3U1VGRlFTeEpRVUZETEVOQlFVRXNVMEZCUkN4RFFVRkJPMGxCUlVFc1NVRkJReXhEUVVGQkxGZEJRVVFzUjBGQlpTeGhRVUZoTEVOQlFVTXNaMEpCUVdRc1EwRkJLMElzU1VGQlF5eERRVUZCTEdOQlFXaERPMGxCUTJZc1NVRkJReXhEUVVGQkxGRkJRVkVzUTBGQlF5eFJRVUZXTEVOQlFXMUNMRWxCUVVNc1EwRkJRU3hYUVVGd1FqdEpRVVZCTEdGQlFXRXNRMEZCUXl4cFFrRkJaQ3hEUVVGblF5eEpRVUZETEVOQlFVRXNWMEZCYWtNc1JVRkJPRU1zU1VGQlF5eERRVUZCTEZWQlFTOURPMFZCV2tVN096QkNRV2RDVGl4VFFVRkJMRWRCUVZjc1UwRkJRVHRKUVVOUUxFbEJRVU1zUTBGQlFTeHBRa0ZCYVVJc1EwRkJReXhUUVVGdVFpeERRVUUyUWl4UlFVRTNRanRYUVVOQkxFbEJRVU1zUTBGQlFTeGhRVUZoTEVOQlFVTXNVMEZCWml4RFFVRjVRaXhIUVVGNlFqdEZRVVpQT3pzd1FrRkpXQ3hqUVVGQkxFZEJRV2RDTEZOQlFVTXNTVUZCUkR0QlFVTmFMRkZCUVVFN1NVRkJRU3hQUVVGQkxFZEJRVlVzU1VGQlNTeEZRVUZGTEVOQlFVTXNUMEZCVUN4RFFVRmxMRVZCUVVVc1EwRkJReXhKUVVGSUxFTkJRVkVzUjBGQlVpeEZRVUZoTEVWQlFXSXNRMEZCWmp0SlFVTldMRTlCUVU4c1EwRkJReXhYUVVGU0xFTkJRVzlDTEVsQlFVa3NRMEZCUXl4WFFVRk1MRU5CUVVFc1EwRkJjRUk3U1VGRFFTeFBRVUZQTEVOQlFVTXNXVUZCVWl4RFFVRnhRaXhGUVVGRkxFTkJRVU1zTmtKQlFYaENPMGxCUTBFc1QwRkJUeXhEUVVGRExHRkJRVklzUTBGQmMwSXNSVUZCUlN4RFFVRkRMSGRDUVVGNlFqdEpRVU5CTEU5QlFVOHNRMEZCUXl4WlFVRlNMRU5CUVhGQ0xFVkJRVVVzUTBGQlF5eDNRMEZCZUVJN1NVRkRRU3hQUVVGUExFTkJRVU1zV1VGQlVpeERRVUZ4UWl4RlFVRnlRanRKUVVOQkxFOUJRVThzUTBGQlF5eFBRVUZTTEVOQlFXZENMRTlCUVdoQ0xFVkJRWGxDTEVWQlFYcENPMGxCUTBFc1QwRkJUeXhEUVVGRExGbEJRVklzUTBGQmNVSXNSVUZCUlN4RFFVRkRMRXRCUVVnc1EwRkJVeXhIUVVGVUxFVkJRV01zUjBGQlpDeEZRVUZ0UWl4SFFVRnVRaXhGUVVGM1FpeEhRVUY0UWl4RFFVRnlRanRCUVVOQkxGZEJRVTg3UlVGVVN6czdNRUpCVjJoQ0xGVkJRVUVzUjBGQldTeFRRVUZETEUxQlFVUTdTVUZEVWl4SlFVRkRMRU5CUVVFc1ZVRkJWU3hEUVVGRExGTkJRVm9zUTBGQmMwSXNUVUZCZEVJN1NVRkRRU3hoUVVGaExFTkJRVU1zYVVKQlFXUXNRMEZCWjBNc1NVRkJReXhEUVVGQkxGZEJRV3BETEVWQlFUaERMRWxCUVVNc1EwRkJRU3hWUVVFdlF6dFhRVU5CTEdGQlFXRXNRMEZCUXl4bFFVRmtMRU5CUVRoQ0xFbEJRVU1zUTBGQlFTeFhRVUV2UWp0RlFVaFJPenN3UWtGTFdpeE5RVUZCTEVkQlFWRXNVMEZCUVR0QlFVTktMRkZCUVVFN1NVRkJRU3hUUVVGQkxFZEJRVmtzU1VGQlF5eERRVUZCTEdsQ1FVRnBRaXhEUVVGRExGTkJRVzVDTEVOQlFVRTdTVUZEV2l4TFFVRkJMRWRCUVZFc1NVRkJReXhEUVVGQkxHRkJRV0VzUTBGQlF5eFRRVUZtTEVOQlFVRTdTVUZEVWl4TlFVRk5MRU5CUVVNc1NVRkJVQ3hIUVVGak8xZEJSV1FzV1VGQldTeERRVUZETEVsQlFXSXNRMEZCYTBJc1ZVRkJWU3hEUVVGRExHVkJRVGRDTEVWQlEwazdUVUZCUVN4VFFVRkJMRVZCUVZjc1UwRkJXRHROUVVOQkxGRkJRVUVzUlVGQlZTeERRVUZCTEZOQlFVRXNTMEZCUVR0bFFVRkJMRk5CUVVNc1IwRkJSRHRwUWtGRFRpeExRVUZETEVOQlFVRXNWVUZCUkN4RFFVRlpMRWRCUVZvN1VVRkVUVHROUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVsQlFVRXNRMEZFVmp0TFFVUktPMFZCVEVrN08wVkJWVklzUlVGQlJTeERRVUZETEdGQlFXRXNRMEZCUXl4clFrRkJha0lzUTBGRFNTeGxRVVJLTEVWQlJVa3NTVUZCU1N4aFFVRktMRU5CUVVFc1EwRkdTanM3T3pzN08wRkJTMG9zVFVGQlRTeERRVUZETEU5QlFWQXNSMEZCYVVJc1JVRkJSU3hEUVVGRExHRkJRV0VzUTBGQlF5eEpRVUZxUWl4RFFVRnpRaXhsUVVGMFFpSjlcbiIsInZhciBCYWxhbmNlU2hlZXQsIENhc2hGbG93U3RhdGVtZW50LCBHYW1lTG9naWMsIFByb2ZpdFN0YXRlbWVudCwgVXNlckRhdGEsIGV2ZW50TWFuYWdlciwgZXZlbnROYW1lcywgZ19kaXJlY3RvcnksIHNjZW5lTWFuYWdlciwgdXRpbHM7XG5cbnNjZW5lTWFuYWdlciA9IHJlcXVpcmUoJy4uL3Rvb2xzL0Fya1NjZW5lTWFuYWdlci5jb2ZmZWUnKTtcblxuZXZlbnRNYW5hZ2VyID0gcmVxdWlyZSgnLi4vZXZlbnQvQXJrRXZlbnRNYW5hZ2VyLmNvZmZlZScpO1xuXG5ldmVudE5hbWVzID0gcmVxdWlyZSgnLi4vZXZlbnQvQXJrRXZlbnROYW1lcy5jb2ZmZWUnKTtcblxuVXNlckRhdGEgPSByZXF1aXJlKCcuLi9tb2RlbC9BcmtVc2VyRGF0YS5jb2ZmZWUnKTtcblxuQmFsYW5jZVNoZWV0ID0gcmVxdWlyZSgnLi4vbW9kZWwvQmFsYW5jZVNoZWV0LmNvZmZlZScpO1xuXG5Qcm9maXRTdGF0ZW1lbnQgPSByZXF1aXJlKCcuLi9tb2RlbC9Qcm9maXRTdGF0ZW1lbnQuY29mZmVlJyk7XG5cbkNhc2hGbG93U3RhdGVtZW50ID0gcmVxdWlyZSgnLi4vbW9kZWwvQ2FzaEZsb3dTdGF0ZW1lbnQuY29mZmVlJyk7XG5cbnJlcXVpcmUoXCIuLi9nbG9iYWxWYWx1ZS5jb2ZmZWVcIik7XG5cbnV0aWxzID0gcmVxdWlyZSgnLi4vdG9vbHMvdXRpbHMuY29mZmVlJyk7XG5cbmdfZGlyZWN0b3J5ID0gXCJ6ejEwMDBcIjtcblxuR2FtZUxvZ2ljID0gKGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBHYW1lTG9naWMoKSB7fVxuXG4gIEdhbWVMb2dpYy5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2JhbGFuY2VPYmogPSB7fTtcbiAgICB0aGlzLl9wcm9maXRPYmogPSB7fTtcbiAgICB0aGlzLl9jYXNoRmxvd09iaiA9IHt9O1xuICAgIHRoaXMuX3JlZ2lzdGVyRXZlbnRzKCk7XG4gICAgcmV0dXJuIHRoaXMuX2luaXRUYWJsZSgpO1xuICB9O1xuXG4gIEdhbWVMb2dpYy5wcm90b3R5cGUuX3JlZ2lzdGVyRXZlbnRzID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGV2ZW50TWFuYWdlci5saXN0ZW4oZXZlbnROYW1lcy5HQU1FX0dFVF9SRVNVTFQsIChmdW5jdGlvbihfdGhpcykge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKG9iaikge1xuICAgICAgICByZXR1cm4gdHlwZW9mIG9iai5jYWxsYmFjayA9PT0gXCJmdW5jdGlvblwiID8gb2JqLmNhbGxiYWNrKF90aGlzLmZpbmRNYXRjaENvbmRpdGlvblN0b2NrKCkpIDogdm9pZCAwO1xuICAgICAgfTtcbiAgICB9KSh0aGlzKSk7XG4gIH07XG5cbiAgR2FtZUxvZ2ljLnByb3RvdHlwZS5fZmlsdGVyUk9FID0gZnVuY3Rpb24oc3RvY2tDb2RlKSB7XG4gICAgdmFyIGF2ZVJvZSwgcm9lVGFibGU7XG4gICAgcm9lVGFibGUgPSB0aGlzLl9nZXRST0Uoc3RvY2tDb2RlKTtcbiAgICBhdmVSb2UgPSB1dGlscy5nZXRBdmVyYWdlKHJvZVRhYmxlKTtcbiAgICBpZiAoYXZlUm9lID4gMTgpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG5cbiAgR2FtZUxvZ2ljLnByb3RvdHlwZS5fZmlsdGVyUHJvZml0QWRkUmF0aW8gPSBmdW5jdGlvbihzdG9ja0NvZGUpIHtcbiAgICB2YXIgcHJvZml0QWRkUmF0aW87XG4gICAgcHJvZml0QWRkUmF0aW8gPSB0aGlzLl9wcm9maXRPYmpbc3RvY2tDb2RlXS5nZXROZXRQcm9maXRBZGRSYXRpbygpO1xuICAgIGlmIChwcm9maXRBZGRSYXRpbyA+IDIwKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9O1xuXG4gIEdhbWVMb2dpYy5wcm90b3R5cGUuX2ZpbHRlclBFID0gZnVuY3Rpb24oc3RvY2tDb2RlKSB7XG4gICAgdmFyIHBlO1xuICAgIHBlID0gdGhpcy5fcHJvZml0T2JqW3N0b2NrQ29kZV0uZ2V0UEUoKTtcbiAgICBjb25zb2xlLmxvZyhwZSwgdHlwZW9mIHBlLCBwZSA+IDApO1xuICAgIGlmICgoMCA8IHBlICYmIHBlIDwgMzUpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9O1xuXG4gIEdhbWVMb2dpYy5wcm90b3R5cGUuX2dldFN0b2NrSW5mbyA9IGZ1bmN0aW9uKHN0b2NrQ29kZSkge1xuICAgIHZhciBQRSwgYXZlUm9lLCBiYXNlSW5mbywgcHJvZml0QWRkUmF0aW8sIHJvZVRhYmxlO1xuICAgIGJhc2VJbmZvID0gdGhpcy5fcHJvZml0T2JqW3N0b2NrQ29kZV0uZ2V0QmFzZUluZm8oKTtcbiAgICBwcm9maXRBZGRSYXRpbyA9IHRoaXMuX3Byb2ZpdE9ialtzdG9ja0NvZGVdLmdldE5ldFByb2ZpdEFkZFJhdGlvKCk7XG4gICAgcm9lVGFibGUgPSB0aGlzLl9nZXRST0Uoc3RvY2tDb2RlKTtcbiAgICBhdmVSb2UgPSB1dGlscy5nZXRBdmVyYWdlKHJvZVRhYmxlKTtcbiAgICBQRSA9IHRoaXMuX3Byb2ZpdE9ialtzdG9ja0NvZGVdLmdldFBFKCk7XG4gICAgcmV0dXJuIHV0aWxzLmFkZFRhYihzdG9ja0NvZGUpICsgdXRpbHMuYWRkVGFiKGJhc2VJbmZvKSArIHV0aWxzLmFkZFRhYihwcm9maXRBZGRSYXRpbykgKyB1dGlscy5hZGRUYWIoYXZlUm9lKSArIHV0aWxzLmFkZFRhYihcIlBFOlwiICsgUEUpICsgXCJcXG5cIjtcbiAgfTtcblxuICBHYW1lTG9naWMucHJvdG90eXBlLmZpbmRNYXRjaENvbmRpdGlvblN0b2NrID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGksIGosIGxlbiwgbGVuMSwgbWF0Y2hTdG9ja1RhYmxlLCByZWYsIHN0b2NrQ29kZSwgc3RvY2tJbmZvVGFibGU7XG4gICAgbWF0Y2hTdG9ja1RhYmxlID0gW107XG4gICAgcmVmID0gdXRpbHMuZ2V0U3RvY2tUYWJsZShnX2RpcmVjdG9yeSk7XG4gICAgZm9yIChpID0gMCwgbGVuID0gcmVmLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICBzdG9ja0NvZGUgPSByZWZbaV07XG4gICAgICBzdG9ja0NvZGUgPSBzdG9ja0NvZGUuc2xpY2UoMiwgOCk7XG4gICAgICBjb25zb2xlLmxvZyhzdG9ja0NvZGUpO1xuICAgICAgaWYgKHRoaXMuX2ZpbHRlclJPRShzdG9ja0NvZGUpICYmIHRoaXMuX2ZpbHRlclByb2ZpdEFkZFJhdGlvKHN0b2NrQ29kZSkgJiYgdGhpcy5fZmlsdGVyUEUoc3RvY2tDb2RlKSkge1xuICAgICAgICBtYXRjaFN0b2NrVGFibGUucHVzaChzdG9ja0NvZGUpO1xuICAgICAgfVxuICAgIH1cbiAgICBzdG9ja0luZm9UYWJsZSA9IFtcIuiCoeelqOS7o+eggSBcXHQg5Z+65pys5L+h5oGvIFxcdCDliKnmtqblpI3lkIjlop7plb/njocgXFx0IOW5s+Wdh1JPRSBcXHQgUEUgIOe7n+iuoeaXtumXtDpcIiArIGdsb2JhbC55ZWFyICsgXCIsIOaAu+aVsDpcIiArIG1hdGNoU3RvY2tUYWJsZS5sZW5ndGggKyBcIlxcblwiXTtcbiAgICBmb3IgKGogPSAwLCBsZW4xID0gbWF0Y2hTdG9ja1RhYmxlLmxlbmd0aDsgaiA8IGxlbjE7IGorKykge1xuICAgICAgc3RvY2tDb2RlID0gbWF0Y2hTdG9ja1RhYmxlW2pdO1xuICAgICAgc3RvY2tJbmZvVGFibGUucHVzaCh0aGlzLl9nZXRTdG9ja0luZm8oc3RvY2tDb2RlKSk7XG4gICAgfVxuICAgIHJldHVybiBzdG9ja0luZm9UYWJsZTtcbiAgfTtcblxuICBHYW1lTG9naWMucHJvdG90eXBlLl9nZXRST0UgPSBmdW5jdGlvbihzdG9ja0NvZGUpIHtcbiAgICB2YXIgaSwgaW5kZXgsIGxlbiwgbmV0QXNzZXRzLCBuZXRBc3NldHNUYWJsZSwgbmV0UHJvZml0c1RhYmxlLCByb2UsIHJvZVRhYmxlO1xuICAgIG5ldEFzc2V0c1RhYmxlID0gdGhpcy5fYmFsYW5jZU9ialtzdG9ja0NvZGVdLmdldE5ldEFzc2V0cygpO1xuICAgIG5ldFByb2ZpdHNUYWJsZSA9IHRoaXMuX3Byb2ZpdE9ialtzdG9ja0NvZGVdLmdldE5ldFByb2ZpdFRhYmxlKCk7XG4gICAgcm9lVGFibGUgPSBbXTtcbiAgICBmb3IgKGluZGV4ID0gaSA9IDAsIGxlbiA9IG5ldEFzc2V0c1RhYmxlLmxlbmd0aDsgaSA8IGxlbjsgaW5kZXggPSArK2kpIHtcbiAgICAgIG5ldEFzc2V0cyA9IG5ldEFzc2V0c1RhYmxlW2luZGV4XTtcbiAgICAgIGlmIChpbmRleCA+PSBuZXRBc3NldHNUYWJsZS5sZW5ndGggLSAxKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgcm9lID0gKChuZXRQcm9maXRzVGFibGVbaW5kZXhdIC8gKChuZXRBc3NldHMgKyBuZXRBc3NldHNUYWJsZVtpbmRleCArIDFdKSAvIDIpKSAqIDEwMCkudG9GaXhlZCgyKTtcbiAgICAgIHJvZVRhYmxlLnB1c2gocm9lICsgXCJcXHRcIik7XG4gICAgfVxuICAgIHJldHVybiByb2VUYWJsZTtcbiAgfTtcblxuICBHYW1lTG9naWMucHJvdG90eXBlLmdldFJlY2VpdmFibGVUdXJub3ZlckRheXMgPSBmdW5jdGlvbihzdG9ja0NvZGUpIHtcbiAgICB2YXIgZGF5cywgZGF5c1RhYmxlLCBpLCBpbkNvbWVWYWx1ZVRhYmxlLCBpbmRleCwgbGVuLCByZWNlaXZhYmxlVmFsdWUsIHJlY2VpdmFibGVWYWx1ZVRhYmxlO1xuICAgIHJlY2VpdmFibGVWYWx1ZVRhYmxlID0gdGhpcy5fYmFsYW5jZU9ialtzdG9ja0NvZGVdLmdldFJlY2VpdmFibGVWYWx1ZSgpO1xuICAgIGluQ29tZVZhbHVlVGFibGUgPSB0aGlzLl9wcm9maXRPYmpbc3RvY2tDb2RlXS5nZXRJbmNvbWVWYWx1ZSgpO1xuICAgIGRheXNUYWJsZSA9IFtcIuW6lOaUtui0puasvuWRqOi9rOWkqeaVsFwiICsgXCJcXHRcIl07XG4gICAgY29uc29sZS5sb2cocmVjZWl2YWJsZVZhbHVlVGFibGUsIGluQ29tZVZhbHVlVGFibGUpO1xuICAgIGZvciAoaW5kZXggPSBpID0gMCwgbGVuID0gcmVjZWl2YWJsZVZhbHVlVGFibGUubGVuZ3RoOyBpIDwgbGVuOyBpbmRleCA9ICsraSkge1xuICAgICAgcmVjZWl2YWJsZVZhbHVlID0gcmVjZWl2YWJsZVZhbHVlVGFibGVbaW5kZXhdO1xuICAgICAgaWYgKGluZGV4ID49IHJlY2VpdmFibGVWYWx1ZVRhYmxlLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBkYXlzID0gMzYwIC8gaW5Db21lVmFsdWVUYWJsZVtpbmRleF0gKiAocmVjZWl2YWJsZVZhbHVlICsgcmVjZWl2YWJsZVZhbHVlVGFibGVbaW5kZXggKyAxXSkgLyAyO1xuICAgICAgZGF5c1RhYmxlLnB1c2goZGF5cyArIFwiXFx0XCIpO1xuICAgIH1cbiAgICByZXR1cm4gZGF5c1RhYmxlO1xuICB9O1xuXG4gIEdhbWVMb2dpYy5wcm90b3R5cGUuX2luaXRUYWJsZSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBpLCBsZW4sIHJlZiwgc3RvY2tDb2RlO1xuICAgIHJlZiA9IHV0aWxzLmdldFN0b2NrVGFibGUoZ19kaXJlY3RvcnkpO1xuICAgIGZvciAoaSA9IDAsIGxlbiA9IHJlZi5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgc3RvY2tDb2RlID0gcmVmW2ldO1xuICAgICAgc3RvY2tDb2RlID0gc3RvY2tDb2RlLnNsaWNlKDIsIDgpO1xuICAgICAgdGhpcy5fYmFsYW5jZU9ialtzdG9ja0NvZGVdID0gbmV3IEJhbGFuY2VTaGVldChnX2RpcmVjdG9yeSwgc3RvY2tDb2RlKTtcbiAgICAgIHRoaXMuX3Byb2ZpdE9ialtzdG9ja0NvZGVdID0gbmV3IFByb2ZpdFN0YXRlbWVudChnX2RpcmVjdG9yeSwgc3RvY2tDb2RlKTtcbiAgICAgIHRoaXMuX2Nhc2hGbG93T2JqW3N0b2NrQ29kZV0gPSBuZXcgQ2FzaEZsb3dTdGF0ZW1lbnQoZ19kaXJlY3RvcnksIHN0b2NrQ29kZSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBHYW1lTG9naWM7XG5cbn0pKCk7XG5cbm1vZHVsZS5leHBvcnRzID0gR2FtZUxvZ2ljO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUwxVnpaWEp6TDNSaGIzZDFMM04wZFdSNUwwRnlhMkZrTDBGeWEyRmtSMkZ0WlM5emNtTXZZMjl1ZEhKdmJDOUJjbXRIWVcxbFRHOW5hV011WTI5bVptVmxJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTDFWelpYSnpMM1JoYjNkMUwzTjBkV1I1TDBGeWEyRmtMMEZ5YTJGa1IyRnRaUzl6Y21NdlkyOXVkSEp2YkM5QmNtdEhZVzFsVEc5bmFXTXVZMjltWm1WbElsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRWxCUVVFN08wRkJRVUVzV1VGQlFTeEhRVUZyUWl4UFFVRkJMRU5CUVZFc2FVTkJRVkk3TzBGQlEyeENMRmxCUVVFc1IwRkJhMElzVDBGQlFTeERRVUZSTEdsRFFVRlNPenRCUVVOc1FpeFZRVUZCTEVkQlFXdENMRTlCUVVFc1EwRkJVU3dyUWtGQlVqczdRVUZEYkVJc1VVRkJRU3hIUVVGclFpeFBRVUZCTEVOQlFWRXNOa0pCUVZJN08wRkJSV3hDTEZsQlFVRXNSMEZCYTBJc1QwRkJRU3hEUVVGUkxEaENRVUZTT3p0QlFVTnNRaXhsUVVGQkxFZEJRWEZDTEU5QlFVRXNRMEZCVVN4cFEwRkJVanM3UVVGRGNrSXNhVUpCUVVFc1IwRkJkVUlzVDBGQlFTeERRVUZSTEcxRFFVRlNPenRCUVVWMlFpeFBRVUZCTEVOQlFWRXNkVUpCUVZJN08wRkJRMEVzUzBGQlFTeEhRVUZSTEU5QlFVRXNRMEZCVVN4MVFrRkJVanM3UVVGRlVpeFhRVUZCTEVkQlFXTTdPMEZCUlZJN096dHpRa0ZEUml4SlFVRkJMRWRCUVUwc1UwRkJRVHRKUVVOR0xFbEJRVU1zUTBGQlFTeFhRVUZFTEVkQlFXVTdTVUZEWml4SlFVRkRMRU5CUVVFc1ZVRkJSQ3hIUVVGak8wbEJRMlFzU1VGQlF5eERRVUZCTEZsQlFVUXNSMEZCWjBJN1NVRkRhRUlzU1VGQlF5eERRVUZCTEdWQlFVUXNRMEZCUVR0WFFVTkJMRWxCUVVNc1EwRkJRU3hWUVVGRUxFTkJRVUU3UlVGTVJUczdjMEpCVDA0c1pVRkJRU3hIUVVGcFFpeFRRVUZCTzFkQlJXSXNXVUZCV1N4RFFVRkRMRTFCUVdJc1EwRkJiMElzVlVGQlZTeERRVUZETEdWQlFTOUNMRVZCUVdkRUxFTkJRVUVzVTBGQlFTeExRVUZCTzJGQlFVRXNVMEZCUXl4SFFVRkVPMjlFUVVNMVF5eEhRVUZITEVOQlFVTXNVMEZCVlN4TFFVRkRMRU5CUVVFc2RVSkJRVVFzUTBGQlFUdE5RVVE0UWp0SlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFbEJRVUVzUTBGQmFFUTdSVUZHWVRzN2MwSkJUV3BDTEZWQlFVRXNSMEZCV1N4VFFVRkRMRk5CUVVRN1FVRkRVaXhSUVVGQk8wbEJRVUVzVVVGQlFTeEhRVUZYTEVsQlFVTXNRMEZCUVN4UFFVRkVMRU5CUVZNc1UwRkJWRHRKUVVOWUxFMUJRVUVzUjBGQlV5eExRVUZMTEVOQlFVTXNWVUZCVGl4RFFVRnBRaXhSUVVGcVFqdEpRVU5VTEVsQlFVY3NUVUZCUVN4SFFVRlRMRVZCUVZvN1FVRkRTU3hoUVVGUExFdEJSRmc3TzBGQlJVRXNWMEZCVHp0RlFVeERPenR6UWtGUFdpeHhRa0ZCUVN4SFFVRjFRaXhUUVVGRExGTkJRVVE3UVVGRGJrSXNVVUZCUVR0SlFVRkJMR05CUVVFc1IwRkJhVUlzU1VGQlF5eERRVUZCTEZWQlFWY3NRMEZCUVN4VFFVRkJMRU5CUVZVc1EwRkJReXh2UWtGQmRrSXNRMEZCUVR0SlFVTnFRaXhKUVVGSExHTkJRVUVzUjBGQmFVSXNSVUZCY0VJN1FVRkRTU3hoUVVGUExFdEJSRmc3TzBGQlJVRXNWMEZCVHp0RlFVcFpPenR6UWtGTmRrSXNVMEZCUVN4SFFVRlhMRk5CUVVNc1UwRkJSRHRCUVVOUUxGRkJRVUU3U1VGQlFTeEZRVUZCTEVkQlFVc3NTVUZCUXl4RFFVRkJMRlZCUVZjc1EwRkJRU3hUUVVGQkxFTkJRVlVzUTBGQlF5eExRVUYyUWl4RFFVRkJPMGxCUTB3c1QwRkJUeXhEUVVGRExFZEJRVklzUTBGQldTeEZRVUZhTEVWQlFXZENMRTlCUVU4c1JVRkJka0lzUlVGQk5rSXNSVUZCUVN4SFFVRkxMRU5CUVd4RE8wbEJRMEVzU1VGQlJ5eERRVUZCTEVOQlFVRXNSMEZCU1N4RlFVRktMRWxCUVVrc1JVRkJTaXhIUVVGVExFVkJRVlFzUTBGQlNEdEJRVU5KTEdGQlFVOHNTMEZFV0RzN1FVRkZRU3hYUVVGUE8wVkJURUU3TzNOQ1FVOVlMR0ZCUVVFc1IwRkJaU3hUUVVGRExGTkJRVVE3UVVGRFdDeFJRVUZCTzBsQlFVRXNVVUZCUVN4SFFVRlhMRWxCUVVNc1EwRkJRU3hWUVVGWExFTkJRVUVzVTBGQlFTeERRVUZWTEVOQlFVTXNWMEZCZGtJc1EwRkJRVHRKUVVOWUxHTkJRVUVzUjBGQmFVSXNTVUZCUXl4RFFVRkJMRlZCUVZjc1EwRkJRU3hUUVVGQkxFTkJRVlVzUTBGQlF5eHZRa0ZCZGtJc1EwRkJRVHRKUVVWcVFpeFJRVUZCTEVkQlFWY3NTVUZCUXl4RFFVRkJMRTlCUVVRc1EwRkJVeXhUUVVGVU8wbEJRMWdzVFVGQlFTeEhRVUZUTEV0QlFVc3NRMEZCUXl4VlFVRk9MRU5CUVdsQ0xGRkJRV3BDTzBsQlJWUXNSVUZCUVN4SFFVRk5MRWxCUVVNc1EwRkJRU3hWUVVGWExFTkJRVUVzVTBGQlFTeERRVUZWTEVOQlFVTXNTMEZCZGtJc1EwRkJRVHRCUVVOT0xGZEJRVThzUzBGQlN5eERRVUZETEUxQlFVNHNRMEZCWVN4VFFVRmlMRU5CUVVFc1IwRkJNRUlzUzBGQlN5eERRVUZETEUxQlFVNHNRMEZCWVN4UlFVRmlMRU5CUVRGQ0xFZEJRMGdzUzBGQlN5eERRVUZETEUxQlFVNHNRMEZCWVN4alFVRmlMRU5CUkVjc1IwRkRORUlzUzBGQlN5eERRVUZETEUxQlFVNHNRMEZCWVN4TlFVRmlMRU5CUkRWQ0xFZEJRMjFFTEV0QlFVc3NRMEZCUXl4TlFVRk9MRU5CUVdFc1MwRkJRU3hIUVVGTkxFVkJRVzVDTEVOQlJHNUVMRWRCUXpoRk8wVkJWREZGT3p0elFrRlhaaXgxUWtGQlFTeEhRVUY1UWl4VFFVRkJPMEZCUTNKQ0xGRkJRVUU3U1VGQlFTeGxRVUZCTEVkQlFXdENPMEZCUTJ4Q08wRkJRVUVzVTBGQlFTeHhRMEZCUVRzN1RVRkRTU3hUUVVGQkxFZEJRVmtzVTBGQlV5eERRVUZETEV0QlFWWXNRMEZCWjBJc1EwRkJhRUlzUlVGQmJVSXNRMEZCYmtJN1RVRkRXaXhQUVVGUExFTkJRVU1zUjBGQlVpeERRVUZaTEZOQlFWbzdUVUZEUVN4SlFVRkhMRWxCUVVNc1EwRkJRU3hWUVVGRUxFTkJRVmtzVTBGQldpeERRVUZCTEVsQlFUSkNMRWxCUVVNc1EwRkJRU3h4UWtGQlJDeERRVUYxUWl4VFFVRjJRaXhEUVVFelFpeEpRVUZwUlN4SlFVRkRMRU5CUVVFc1UwRkJSQ3hEUVVGWExGTkJRVmdzUTBGQmNFVTdVVUZEU1N4bFFVRmxMRU5CUVVNc1NVRkJhRUlzUTBGQmNVSXNVMEZCY2tJc1JVRkVTanM3UVVGSVNqdEpRVTFCTEdOQlFVRXNSMEZCYVVJc1EwRkJReXdyUTBGQlFTeEhRVUZuUkN4TlFVRk5MRU5CUVVNc1NVRkJka1FzUjBGQk5FUXNUMEZCTlVRc1IwRkJiVVVzWlVGQlpTeERRVUZETEUxQlFXNUdMRWRCUVRCR0xFbEJRVE5HTzBGQlEycENMRk5CUVVFc2JVUkJRVUU3TzAxQlEwa3NZMEZCWXl4RFFVRkRMRWxCUVdZc1EwRkJiMElzU1VGQlF5eERRVUZCTEdGQlFVUXNRMEZCWlN4VFFVRm1MRU5CUVhCQ08wRkJSRW83UVVGRlFTeFhRVUZQTzBWQldHTTdPM05DUVdGNlFpeFBRVUZCTEVkQlFWTXNVMEZCUXl4VFFVRkVPMEZCUTB3c1VVRkJRVHRKUVVGQkxHTkJRVUVzUjBGQmFVSXNTVUZCUXl4RFFVRkJMRmRCUVZrc1EwRkJRU3hUUVVGQkxFTkJRVlVzUTBGQlF5eFpRVUY0UWl4RFFVRkJPMGxCUTJwQ0xHVkJRVUVzUjBGQmEwSXNTVUZCUXl4RFFVRkJMRlZCUVZjc1EwRkJRU3hUUVVGQkxFTkJRVlVzUTBGQlF5eHBRa0ZCZGtJc1EwRkJRVHRKUVVOc1FpeFJRVUZCTEVkQlFWYzdRVUZEV0N4VFFVRkJMR2RGUVVGQk96dE5RVU5KTEVsQlFWTXNTMEZCUVN4SlFVRlRMR05CUVdNc1EwRkJReXhOUVVGbUxFZEJRWGRDTEVOQlFURkRPMEZCUVVFc1kwRkJRVHM3VFVGRFFTeEhRVUZCTEVkQlFVMHNRMEZCUXl4RFFVRkRMR1ZCUVdkQ0xFTkJRVUVzUzBGQlFTeERRVUZvUWl4SFFVRjVRaXhEUVVGRExFTkJRVU1zVTBGQlFTeEhRVUZaTEdOQlFXVXNRMEZCUVN4TFFVRkJMRWRCUVZFc1EwRkJVaXhEUVVFMVFpeERRVUZCTEVkQlFUQkRMRU5CUVRORExFTkJRVEZDTEVOQlFVRXNSMEZCTWtVc1IwRkJOVVVzUTBGQlowWXNRMEZCUXl4UFFVRnFSaXhEUVVGNVJpeERRVUY2Ump0TlFVTk9MRkZCUVZFc1EwRkJReXhKUVVGVUxFTkJRV01zUjBGQlFTeEhRVUZOTEVsQlFYQkNPMEZCU0VvN1FVRkpRU3hYUVVGUE8wVkJVa1k3TzNOQ1FWVlVMSGxDUVVGQkxFZEJRVEpDTEZOQlFVTXNVMEZCUkR0QlFVTjJRaXhSUVVGQk8wbEJRVUVzYjBKQlFVRXNSMEZCZFVJc1NVRkJReXhEUVVGQkxGZEJRVmtzUTBGQlFTeFRRVUZCTEVOQlFWVXNRMEZCUXl4clFrRkJlRUlzUTBGQlFUdEpRVU4yUWl4blFrRkJRU3hIUVVGdFFpeEpRVUZETEVOQlFVRXNWVUZCVnl4RFFVRkJMRk5CUVVFc1EwRkJWU3hEUVVGRExHTkJRWFpDTEVOQlFVRTdTVUZEYmtJc1UwRkJRU3hIUVVGWkxFTkJRVU1zVlVGQlFTeEhRVUZoTEVsQlFXUTdTVUZEV2l4UFFVRlBMRU5CUVVNc1IwRkJVaXhEUVVGWkxHOUNRVUZhTEVWQlFXdERMR2RDUVVGc1F6dEJRVU5CTEZOQlFVRXNjMFZCUVVFN08wMUJRMGtzU1VGQlV5eExRVUZCTEVsQlFWTXNiMEpCUVc5Q0xFTkJRVU1zVFVGQmNrSXNSMEZCT0VJc1EwRkJhRVE3UVVGQlFTeGpRVUZCT3p0TlFVTkJMRWxCUVVFc1IwRkJUeXhIUVVGQkxFZEJRVTBzWjBKQlFXbENMRU5CUVVFc1MwRkJRU3hEUVVGMlFpeEhRVUZuUXl4RFFVRkRMR1ZCUVVFc1IwRkJhMElzYjBKQlFYRkNMRU5CUVVFc1MwRkJRU3hIUVVGUkxFTkJRVklzUTBGQmVFTXNRMEZCYUVNc1IwRkJjMFk3VFVGRE4wWXNVMEZCVXl4RFFVRkRMRWxCUVZZc1EwRkJaU3hKUVVGQkxFZEJRVThzU1VGQmRFSTdRVUZJU2p0QlFVbEJMRmRCUVU4N1JVRlVaMEk3TzNOQ1FWY3pRaXhWUVVGQkxFZEJRVmtzVTBGQlFUdEJRVU5TTEZGQlFVRTdRVUZCUVR0QlFVRkJMRk5CUVVFc2NVTkJRVUU3TzAxQlEwa3NVMEZCUVN4SFFVRlpMRk5CUVZNc1EwRkJReXhMUVVGV0xFTkJRV2RDTEVOQlFXaENMRVZCUVcxQ0xFTkJRVzVDTzAxQlExb3NTVUZCUXl4RFFVRkJMRmRCUVZrc1EwRkJRU3hUUVVGQkxFTkJRV0lzUjBGQk1FSXNTVUZCU1N4WlFVRktMRU5CUVdsQ0xGZEJRV3BDTEVWQlFUaENMRk5CUVRsQ08wMUJRekZDTEVsQlFVTXNRMEZCUVN4VlFVRlhMRU5CUVVFc1UwRkJRU3hEUVVGYUxFZEJRWGxDTEVsQlFVa3NaVUZCU2l4RFFVRnZRaXhYUVVGd1FpeEZRVUZwUXl4VFFVRnFRenROUVVONlFpeEpRVUZETEVOQlFVRXNXVUZCWVN4RFFVRkJMRk5CUVVFc1EwRkJaQ3hIUVVFeVFpeEpRVUZKTEdsQ1FVRktMRU5CUVhOQ0xGZEJRWFJDTEVWQlFXMURMRk5CUVc1RE8wRkJTaTlDTzBWQlJGRTdPenM3T3p0QlFWRm9RaXhOUVVGTkxFTkJRVU1zVDBGQlVDeEhRVUZwUWlKOVxuIiwidmFyIEV2ZW50TWFuYWdlcjtcblxuRXZlbnRNYW5hZ2VyID0ge1xuICBzZW5kOiBmdW5jdGlvbihldmVudE5hbWUsIGRhdGEpIHtcbiAgICB2YXIgZXZlbnQ7XG4gICAgZXZlbnQgPSBuZXcgY2MuRXZlbnRDdXN0b20oZXZlbnROYW1lKTtcbiAgICBpZiAoZGF0YSAhPT0gbnVsbCkge1xuICAgICAgZXZlbnQuc2V0VXNlckRhdGEoZGF0YSk7XG4gICAgfVxuICAgIHJldHVybiBjYy5ldmVudE1hbmFnZXIuZGlzcGF0Y2hFdmVudChldmVudCk7XG4gIH0sXG4gIGxpc3RlbjogZnVuY3Rpb24oZXZlbnROYW1lLCBsaXN0ZW5GdW5jLCBub2RlT3JQcmlvcml0eSkge1xuICAgIHZhciBjY0xpc3RlbmVyO1xuICAgIGlmIChub2RlT3JQcmlvcml0eSA9PSBudWxsKSB7XG4gICAgICBub2RlT3JQcmlvcml0eSA9IDE7XG4gICAgfVxuICAgIGNjTGlzdGVuZXIgPSBjYy5FdmVudExpc3RlbmVyLmNyZWF0ZSh7XG4gICAgICBldmVudDogY2MuRXZlbnRMaXN0ZW5lci5DVVNUT00sXG4gICAgICBldmVudE5hbWU6IGV2ZW50TmFtZSxcbiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbihldmVudCkge1xuICAgICAgICByZXR1cm4gbGlzdGVuRnVuYyhldmVudC5nZXRVc2VyRGF0YSgpLCBldmVudCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGNjLmV2ZW50TWFuYWdlci5hZGRMaXN0ZW5lcihjY0xpc3RlbmVyLCBub2RlT3JQcmlvcml0eSk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRXZlbnRNYW5hZ2VyO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUwxVnpaWEp6TDNSaGIzZDFMM04wZFdSNUwwRnlhMkZrTDBGeWEyRmtSMkZ0WlM5emNtTXZaWFpsYm5RdlFYSnJSWFpsYm5STllXNWhaMlZ5TG1OdlptWmxaU0lzSW5OdmRYSmpaVkp2YjNRaU9pSWlMQ0p6YjNWeVkyVnpJanBiSWk5VmMyVnljeTkwWVc5M2RTOXpkSFZrZVM5QmNtdGhaQzlCY210aFpFZGhiV1V2YzNKakwyVjJaVzUwTDBGeWEwVjJaVzUwVFdGdVlXZGxjaTVqYjJabVpXVWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzU1VGQlFUczdRVUZCUVN4WlFVRkJMRWRCUTBrN1JVRkJRU3hKUVVGQkxFVkJRVTBzVTBGQlF5eFRRVUZFTEVWQlFWa3NTVUZCV2p0QlFVTkdMRkZCUVVFN1NVRkJRU3hMUVVGQkxFZEJRVkVzU1VGQlNTeEZRVUZGTEVOQlFVTXNWMEZCVUN4RFFVRnRRaXhUUVVGdVFqdEpRVU5TTEVsQlFVa3NTVUZCUVN4TFFVRlJMRWxCUVZvN1RVRkRTU3hMUVVGTExFTkJRVU1zVjBGQlRpeERRVUZyUWl4SlFVRnNRaXhGUVVSS096dFhRVVZCTEVWQlFVVXNRMEZCUXl4WlFVRlpMRU5CUVVNc1lVRkJhRUlzUTBGQk9FSXNTMEZCT1VJN1JVRktSU3hEUVVGT08wVkJTMEVzVFVGQlFTeEZRVUZSTEZOQlFVTXNVMEZCUkN4RlFVRlpMRlZCUVZvc1JVRkJkMElzWTBGQmVFSTdRVUZEU2l4UlFVRkJPenROUVVGQkxHbENRVUZyUWpzN1NVRkRiRUlzVlVGQlFTeEhRVUZoTEVWQlFVVXNRMEZCUXl4aFFVRmhMRU5CUVVNc1RVRkJha0lzUTBGRFZEdE5RVUZCTEV0QlFVRXNSVUZCVHl4RlFVRkZMRU5CUVVNc1lVRkJZU3hEUVVGRExFMUJRWGhDTzAxQlEwRXNVMEZCUVN4RlFVRlhMRk5CUkZnN1RVRkZRU3hSUVVGQkxFVkJRVlVzVTBGQlF5eExRVUZFTzBGQlEwNHNaVUZCVHl4VlFVRkJMRU5CUVZjc1MwRkJTeXhEUVVGRExGZEJRVTRzUTBGQlFTeERRVUZZTEVWQlFXZERMRXRCUVdoRE8wMUJSRVFzUTBGR1ZqdExRVVJUTzFkQlRXSXNSVUZCUlN4RFFVRkRMRmxCUVZrc1EwRkJReXhYUVVGb1FpeERRVUUwUWl4VlFVRTFRaXhGUVVGM1F5eGpRVUY0UXp0RlFWSkpMRU5CVEZJN096dEJRV05LTEUxQlFVMHNRMEZCUXl4UFFVRlFMRWRCUVdsQ0luMD1cbiIsInZhciBFdmVudE5hbWVzO1xuXG5FdmVudE5hbWVzID0ge1xuICBHQU1FX1NUQVJUOiBcImdhbWUuc3RhcnRcIixcbiAgR0FNRV9FTkQ6IFwiZ2FtZS5lbmRcIixcbiAgR0FNRV9ORVhUX0xFVkVMOiBcImdhbWUubmV4dC5sZXZlbFwiLFxuICBHQU1FX0dFVF9SRVNVTFQ6IFwiZ2FtZS5nZXQucmVzdWx0XCIsXG4gIEdBTUVfSU5JVF9UQUJMRTogXCJnYW1lLmluaXQudGFibGVcIlxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBFdmVudE5hbWVzO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUwxVnpaWEp6TDNSaGIzZDFMM04wZFdSNUwwRnlhMkZrTDBGeWEyRmtSMkZ0WlM5emNtTXZaWFpsYm5RdlFYSnJSWFpsYm5ST1lXMWxjeTVqYjJabVpXVWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl2VlhObGNuTXZkR0Z2ZDNVdmMzUjFaSGt2UVhKcllXUXZRWEpyWVdSSFlXMWxMM055WXk5bGRtVnVkQzlCY210RmRtVnVkRTVoYldWekxtTnZabVpsWlNKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeEpRVUZCT3p0QlFVRkJMRlZCUVVFc1IwRkRTVHRGUVVGQkxGVkJRVUVzUlVGQmEwSXNXVUZCYkVJN1JVRkRRU3hSUVVGQkxFVkJRV3RDTEZWQlJHeENPMFZCUlVFc1pVRkJRU3hGUVVGclFpeHBRa0ZHYkVJN1JVRkpRU3hsUVVGQkxFVkJRV3RDTEdsQ1FVcHNRanRGUVV0QkxHVkJRVUVzUlVGQmEwSXNhVUpCVEd4Q096czdRVUZQU2l4TlFVRk5MRU5CUVVNc1QwRkJVQ3hIUVVGcFFpSjlcbiIsImdsb2JhbC55ZWFyID0gNjtcblxuZ2xvYmFsLmxvYWROdW0gPSAwO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUwxVnpaWEp6TDNSaGIzZDFMM04wZFdSNUwwRnlhMkZrTDBGeWEyRmtSMkZ0WlM5emNtTXZaMnh2WW1Gc1ZtRnNkV1V1WTI5bVptVmxJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTDFWelpYSnpMM1JoYjNkMUwzTjBkV1I1TDBGeWEyRmtMMEZ5YTJGa1IyRnRaUzl6Y21NdloyeHZZbUZzVm1Gc2RXVXVZMjltWm1WbElsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRTFCUVUwc1EwRkJReXhKUVVGUUxFZEJRV003TzBGQlEyUXNUVUZCVFN4RFFVRkRMRTlCUVZBc1IwRkJhVUlpZlE9PVxuIiwiY2MuZ2FtZS5vblN0YXJ0ID0gZnVuY3Rpb24oKSB7XG4gIHZhciBHYW1lTG9naWMsIGdhbWVEaWFsb2csIGdhbWVMb2dpY09iaiwgc2NlbmVNYW5hZ2VyO1xuICBjYy52aWV3LmFkanVzdFZpZXdQb3J0KHRydWUpO1xuICBjYy52aWV3LnNldERlc2lnblJlc29sdXRpb25TaXplKDExMzYsIDY0MCwgY2MuUmVzb2x1dGlvblBvbGljeS5TSE9XX0FMTCk7XG4gIGNjLnZpZXcuZW5hYmxlQXV0b0Z1bGxTY3JlZW4oZmFsc2UpO1xuICBjYy52aWV3LnJlc2l6ZVdpdGhCcm93c2VyU2l6ZSh0cnVlKTtcbiAgY2MuQnVpbGRlclJlYWRlci5zZXRSZXNvdXJjZVBhdGgoXCJyZXMvXCIpO1xuICBzY2VuZU1hbmFnZXIgPSByZXF1aXJlKFwiLi90b29scy9BcmtTY2VuZU1hbmFnZXIuY29mZmVlXCIpO1xuICBzY2VuZU1hbmFnZXIuaW5pdCgpO1xuICBnYW1lRGlhbG9nID0gcmVxdWlyZSgnLi9jY2JWaWV3L0Fya01haW5EaWFsb2cuY29mZmVlJyk7XG4gIHNjZW5lTWFuYWdlci5hZGRMYXllclRvU2NlbmUoZ2FtZURpYWxvZyk7XG4gIEdhbWVMb2dpYyA9IHJlcXVpcmUoJy4vY29udHJvbC9BcmtHYW1lTG9naWMuY29mZmVlJyk7XG4gIGdhbWVMb2dpY09iaiA9IG5ldyBHYW1lTG9naWMoKTtcbiAgcmV0dXJuIGdhbWVMb2dpY09iai5pbml0KCk7XG59O1xuXG5jYy5nYW1lLnJ1bigpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUwxVnpaWEp6TDNSaGIzZDFMM04wZFdSNUwwRnlhMkZrTDBGeWEyRmtSMkZ0WlM5emNtTXZiV0ZwYmk1amIyWm1aV1VpTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdlZYTmxjbk12ZEdGdmQzVXZjM1IxWkhrdlFYSnJZV1F2UVhKcllXUkhZVzFsTDNOeVl5OXRZV2x1TG1OdlptWmxaU0pkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4RlFVRkZMRU5CUVVNc1NVRkJTU3hEUVVGRExFOUJRVklzUjBGQmEwSXNVMEZCUVR0QlFVTmtMRTFCUVVFN1JVRkJRU3hGUVVGRkxFTkJRVU1zU1VGQlNTeERRVUZETEdOQlFWSXNRMEZCZFVJc1NVRkJka0k3UlVGRFFTeEZRVUZGTEVOQlFVTXNTVUZCU1N4RFFVRkRMSFZDUVVGU0xFTkJRV2RETEVsQlFXaERMRVZCUVhORExFZEJRWFJETEVWQlFUSkRMRVZCUVVVc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4UlFVRXZSRHRGUVVOQkxFVkJRVVVzUTBGQlF5eEpRVUZKTEVOQlFVTXNiMEpCUVZJc1EwRkJOa0lzUzBGQk4wSTdSVUZEUVN4RlFVRkZMRU5CUVVNc1NVRkJTU3hEUVVGRExIRkNRVUZTTEVOQlFUaENMRWxCUVRsQ08wVkJRMEVzUlVGQlJTeERRVUZETEdGQlFXRXNRMEZCUXl4bFFVRnFRaXhEUVVGcFF5eE5RVUZxUXp0RlFVVkJMRmxCUVVFc1IwRkJaU3hQUVVGQkxFTkJRVkVzWjBOQlFWSTdSVUZEWml4WlFVRlpMRU5CUVVNc1NVRkJZaXhEUVVGQk8wVkJSVUVzVlVGQlFTeEhRVUZoTEU5QlFVRXNRMEZCVVN4blEwRkJVanRGUVVOaUxGbEJRVmtzUTBGQlF5eGxRVUZpTEVOQlFUWkNMRlZCUVRkQ08wVkJSVUVzVTBGQlFTeEhRVUZaTEU5QlFVRXNRMEZCVVN3clFrRkJVanRGUVVOYUxGbEJRVUVzUjBGQlpTeEpRVUZKTEZOQlFVb3NRMEZCUVR0VFFVTm1MRmxCUVZrc1EwRkJReXhKUVVGaUxFTkJRVUU3UVVGbVl6czdRVUZyUW14Q0xFVkJRVVVzUTBGQlF5eEpRVUZKTEVOQlFVTXNSMEZCVWl4RFFVRkJJbjA9XG4iLCJ2YXIgVXNlckRhdGE7XG5cblVzZXJEYXRhID0gKGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBVc2VyRGF0YSgpIHtcbiAgICB0aGlzLl9zY29yZSA9IDA7XG4gICAgdGhpcy5fY291bnQgPSAwO1xuICB9XG5cbiAgVXNlckRhdGEucHJvdG90eXBlLnNldFNjb3JlID0gZnVuY3Rpb24oX3Njb3JlKSB7XG4gICAgdGhpcy5fc2NvcmUgPSBfc2NvcmU7XG4gIH07XG5cbiAgVXNlckRhdGEucHJvdG90eXBlLmdldFNjb3JlID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX3Njb3JlO1xuICB9O1xuXG4gIFVzZXJEYXRhLnByb3RvdHlwZS5zZXRDb3VudCA9IGZ1bmN0aW9uKF9jb3VudCkge1xuICAgIHRoaXMuX2NvdW50ID0gX2NvdW50O1xuICB9O1xuXG4gIFVzZXJEYXRhLnByb3RvdHlwZS5nZXRDb3VudCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLl9jb3VudDtcbiAgfTtcblxuICByZXR1cm4gVXNlckRhdGE7XG5cbn0pKCk7XG5cbm1vZHVsZS5leHBvcnRzID0gVXNlckRhdGE7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTDFWelpYSnpMM1JoYjNkMUwzTjBkV1I1TDBGeWEyRmtMMEZ5YTJGa1IyRnRaUzl6Y21NdmJXOWtaV3d2UVhKclZYTmxja1JoZEdFdVkyOW1abVZsSWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaUwxVnpaWEp6TDNSaGIzZDFMM04wZFdSNUwwRnlhMkZrTDBGeWEyRmtSMkZ0WlM5emNtTXZiVzlrWld3dlFYSnJWWE5sY2tSaGRHRXVZMjltWm1WbElsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRWxCUVVFN08wRkJRVTA3UlVGRFZ5eHJRa0ZCUVR0SlFVTlVMRWxCUVVNc1EwRkJRU3hOUVVGRUxFZEJRVlU3U1VGRFZpeEpRVUZETEVOQlFVRXNUVUZCUkN4SFFVRlZPMFZCUmtRN08zRkNRVWxpTEZGQlFVRXNSMEZCVlN4VFFVRkRMRTFCUVVRN1NVRkJReXhKUVVGRExFTkJRVUVzVTBGQlJEdEZRVUZFT3p0eFFrRkZWaXhSUVVGQkxFZEJRVlVzVTBGQlFUdFhRVUZITEVsQlFVTXNRMEZCUVR0RlFVRktPenR4UWtGRlZpeFJRVUZCTEVkQlFWVXNVMEZCUXl4TlFVRkVPMGxCUVVNc1NVRkJReXhEUVVGQkxGTkJRVVE3UlVGQlJEczdjVUpCUlZZc1VVRkJRU3hIUVVGVkxGTkJRVUU3VjBGQlJ5eEpRVUZETEVOQlFVRTdSVUZCU2pzN096czdPMEZCUldRc1RVRkJUU3hEUVVGRExFOUJRVkFzUjBGQmFVSWlmUT09XG4iLCJ2YXIgQmFsYW5jZVNoZWV0LCBUYWJsZUJhc2UsXG4gIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5LFxuICBpbmRleE9mID0gW10uaW5kZXhPZiB8fCBmdW5jdGlvbihpdGVtKSB7IGZvciAodmFyIGkgPSAwLCBsID0gdGhpcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsgaWYgKGkgaW4gdGhpcyAmJiB0aGlzW2ldID09PSBpdGVtKSByZXR1cm4gaTsgfSByZXR1cm4gLTE7IH07XG5cblRhYmxlQmFzZSA9IHJlcXVpcmUoXCIuL1RhYmxlQmFzZS5jb2ZmZWVcIik7XG5cbkJhbGFuY2VTaGVldCA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gIGV4dGVuZChCYWxhbmNlU2hlZXQsIHN1cGVyQ2xhc3MpO1xuXG4gIGZ1bmN0aW9uIEJhbGFuY2VTaGVldCgpIHtcbiAgICByZXR1cm4gQmFsYW5jZVNoZWV0Ll9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9XG5cbiAgQmFsYW5jZVNoZWV0LnByb3RvdHlwZS5nZXRGaWxlUGF0aCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBcInJlcy9cIiArIHRoaXMuX3N0b2NrVHlwZSArIFwiX2pzb24vemNmemJfXCIgKyB0aGlzLl9zdG9ja0NvZGUgKyBcIi5qc29uXCI7XG4gIH07XG5cbiAgQmFsYW5jZVNoZWV0LnByb3RvdHlwZS5nZXRDYXNoVmFsdWUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRWYWx1ZSh0aGlzLl9kYXRhW1wi6LSn5biB6LWE6YeRKOS4h+WFgylcIl0pO1xuICB9O1xuXG4gIEJhbGFuY2VTaGVldC5wcm90b3R5cGUuZ2V0VG90YWxBc3NldHMgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRWYWx1ZSh0aGlzLl9kYXRhW1wi6LWE5Lqn5oC76K6hKOS4h+WFgylcIl0pO1xuICB9O1xuXG4gIEJhbGFuY2VTaGVldC5wcm90b3R5cGUuZ2V0TmV0QXNzZXRzID0gZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkodGhpcy5fZGF0YSkpO1xuICAgIHJldHVybiB0aGlzLmdldFZhbHVlKHRoaXMuX2RhdGFbXCLlvZLlsZ7kuo7mr43lhazlj7jogqHkuJzmnYPnm4rlkIjorqEo5LiH5YWDKVwiXSk7XG4gIH07XG5cbiAgQmFsYW5jZVNoZWV0LnByb3RvdHlwZS5fZ2V0Tm9OZWVkQ2FsY0l0ZW1zID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIFtcIui1hOaWmVwiLCBcIuaKpeWRiuaXpeacn1wiXTtcbiAgfTtcblxuICBCYWxhbmNlU2hlZXQucHJvdG90eXBlLmdldFJlY2VpdmFibGVWYWx1ZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLmdldFZhbHVlKHRoaXMuX2RhdGFbXCLlupTmlLbotKbmrL4o5LiH5YWDKVwiXSk7XG4gIH07XG5cbiAgQmFsYW5jZVNoZWV0LnByb3RvdHlwZS5kdW1wUGVyY2VudFRhYmxlID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGFzc2V0c1BlcmNlbnRUYWJsZSwgY2VsVmFsdWUsIGksIGluZGV4LCBrZXksIGxlbiwgcGVyY2VudCwgcGVyY2VudFRhYmxlLCByZWYsIHJlZjEsIHRvdGFsQXNzZXRzLCB2YWx1ZTtcbiAgICB0b3RhbEFzc2V0cyA9IHRoaXMuZ2V0VG90YWxBc3NldHMoKTtcbiAgICBhc3NldHNQZXJjZW50VGFibGUgPSBbXTtcbiAgICByZWYgPSB0aGlzLl9kYXRhO1xuICAgIGZvciAoa2V5IGluIHJlZikge1xuICAgICAgdmFsdWUgPSByZWZba2V5XTtcbiAgICAgIHBlcmNlbnRUYWJsZSA9IFtrZXkgKyBcIlxcdFxcdFxcdFxcdFxcdFwiXTtcbiAgICAgIGlmICh2YWx1ZVswXSA9PT0gMCkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmIChpbmRleE9mLmNhbGwodGhpcy5fZ2V0Tm9OZWVkQ2FsY0l0ZW1zKCksIGtleSkgPj0gMCkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIHJlZjEgPSB0aGlzLmdldFZhbHVlKHZhbHVlKTtcbiAgICAgIGZvciAoaW5kZXggPSBpID0gMCwgbGVuID0gcmVmMS5sZW5ndGg7IGkgPCBsZW47IGluZGV4ID0gKytpKSB7XG4gICAgICAgIGNlbFZhbHVlID0gcmVmMVtpbmRleF07XG4gICAgICAgIHBlcmNlbnQgPSBjZWxWYWx1ZSAvIHRvdGFsQXNzZXRzW2luZGV4XSAqIDEwMDtcbiAgICAgICAgcGVyY2VudFRhYmxlLnB1c2gocGVyY2VudC50b0ZpeGVkKDIpKTtcbiAgICAgICAgcGVyY2VudFRhYmxlLnB1c2goXCJcXHRcXHRcXHRcXHRcIik7XG4gICAgICB9XG4gICAgICBwZXJjZW50VGFibGUucHVzaChcIlxcblwiKTtcbiAgICAgIGFzc2V0c1BlcmNlbnRUYWJsZS5wdXNoKHBlcmNlbnRUYWJsZSk7XG4gICAgfVxuICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KGFzc2V0c1BlcmNlbnRUYWJsZSwgbnVsbCwgXCJcXHRcIikpO1xuICAgIHJldHVybiBhc3NldHNQZXJjZW50VGFibGU7XG4gIH07XG5cbiAgQmFsYW5jZVNoZWV0LnByb3RvdHlwZS5nZXRDdXJyZW50UmF0aW8gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgY3VycmVudEFzc2V0cywgY3VycmVudEFzc2V0c1RhYmxlLCBjdXJyZW50RGVidHNUYWJsZSwgY3VycmVudFJhdGlvLCBpLCBpbmRleCwgbGVuO1xuICAgIGN1cnJlbnRBc3NldHNUYWJsZSA9IHRoaXMuZ2V0VmFsdWUodGhpcy5fZGF0YVtcIua1geWKqOi1hOS6p+WQiOiuoSjkuIflhYMpXCJdKTtcbiAgICBjdXJyZW50RGVidHNUYWJsZSA9IHRoaXMuZ2V0VmFsdWUodGhpcy5fZGF0YVtcIua1geWKqOi0n+WAuuWQiOiuoSjkuIflhYMpXCJdKTtcbiAgICBjdXJyZW50UmF0aW8gPSBbXTtcbiAgICBmb3IgKGluZGV4ID0gaSA9IDAsIGxlbiA9IGN1cnJlbnRBc3NldHNUYWJsZS5sZW5ndGg7IGkgPCBsZW47IGluZGV4ID0gKytpKSB7XG4gICAgICBjdXJyZW50QXNzZXRzID0gY3VycmVudEFzc2V0c1RhYmxlW2luZGV4XTtcbiAgICAgIGN1cnJlbnRSYXRpby5wdXNoKChjdXJyZW50QXNzZXRzIC8gY3VycmVudERlYnRzVGFibGVbaW5kZXhdKS50b0ZpeGVkKDIpKTtcbiAgICB9XG4gICAgcmV0dXJuIGN1cnJlbnRSYXRpbztcbiAgfTtcblxuICBCYWxhbmNlU2hlZXQucHJvdG90eXBlLmdldFF1aWNrUmF0aW8gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgY3VycmVudEFzc2V0cywgY3VycmVudEFzc2V0c1RhYmxlLCBjdXJyZW50RGVidHNUYWJsZSwgaSwgaW5kZXgsIGludmVudG9yeVRhYmxlLCBsZW4sIHF1aWNrUmF0aW87XG4gICAgY3VycmVudEFzc2V0c1RhYmxlID0gdGhpcy5nZXRWYWx1ZSh0aGlzLl9kYXRhW1wi5rWB5Yqo6LWE5Lqn5ZCI6K6hKOS4h+WFgylcIl0pO1xuICAgIGN1cnJlbnREZWJ0c1RhYmxlID0gdGhpcy5nZXRWYWx1ZSh0aGlzLl9kYXRhW1wi5rWB5Yqo6LSf5YC65ZCI6K6hKOS4h+WFgylcIl0pO1xuICAgIGludmVudG9yeVRhYmxlID0gdGhpcy5nZXRWYWx1ZSh0aGlzLl9kYXRhW1wi5a2Y6LSnKOS4h+WFgylcIl0pO1xuICAgIHF1aWNrUmF0aW8gPSBbXTtcbiAgICBmb3IgKGluZGV4ID0gaSA9IDAsIGxlbiA9IGN1cnJlbnRBc3NldHNUYWJsZS5sZW5ndGg7IGkgPCBsZW47IGluZGV4ID0gKytpKSB7XG4gICAgICBjdXJyZW50QXNzZXRzID0gY3VycmVudEFzc2V0c1RhYmxlW2luZGV4XTtcbiAgICAgIHF1aWNrUmF0aW8ucHVzaCgoKGN1cnJlbnRBc3NldHMgLSBpbnZlbnRvcnlUYWJsZVtpbmRleF0pIC8gY3VycmVudERlYnRzVGFibGVbaW5kZXhdKS50b0ZpeGVkKDIpKTtcbiAgICB9XG4gICAgcmV0dXJuIHF1aWNrUmF0aW87XG4gIH07XG5cbiAgcmV0dXJuIEJhbGFuY2VTaGVldDtcblxufSkoVGFibGVCYXNlKTtcblxubW9kdWxlLmV4cG9ydHMgPSBCYWxhbmNlU2hlZXQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTDFWelpYSnpMM1JoYjNkMUwzTjBkV1I1TDBGeWEyRmtMMEZ5YTJGa1IyRnRaUzl6Y21NdmJXOWtaV3d2UW1Gc1lXNWpaVk5vWldWMExtTnZabVpsWlNJc0luTnZkWEpqWlZKdmIzUWlPaUlpTENKemIzVnlZMlZ6SWpwYklpOVZjMlZ5Y3k5MFlXOTNkUzl6ZEhWa2VTOUJjbXRoWkM5QmNtdGhaRWRoYldVdmMzSmpMMjF2WkdWc0wwSmhiR0Z1WTJWVGFHVmxkQzVqYjJabVpXVWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzU1VGQlFTeDFRa0ZCUVR0RlFVRkJPenM3TzBGQlFVRXNVMEZCUVN4SFFVRmhMRTlCUVVFc1EwRkJVU3h2UWtGQlVqczdRVUZIVURzN096czdPenQ1UWtGRFRDeFhRVUZCTEVkQlFWa3NVMEZCUVR0WFFVTllMRTFCUVVFc1IwRkJUeXhKUVVGRExFTkJRVUVzVlVGQlVpeEhRVUZ0UWl4alFVRnVRaXhIUVVGcFF5eEpRVUZETEVOQlFVRXNWVUZCYkVNc1IwRkJOa003UlVGRWJFTTdPM2xDUVVkYUxGbEJRVUVzUjBGQll5eFRRVUZCTzFkQlFVY3NTVUZCUXl4RFFVRkJMRkZCUVVRc1EwRkJWU3hKUVVGRExFTkJRVUVzUzBGQlRTeERRVUZCTEZWQlFVRXNRMEZCYWtJN1JVRkJTRHM3ZVVKQlJXUXNZMEZCUVN4SFFVRm5RaXhUUVVGQk8xZEJRVWNzU1VGQlF5eERRVUZCTEZGQlFVUXNRMEZCVlN4SlFVRkRMRU5CUVVFc1MwRkJUU3hEUVVGQkxGVkJRVUVzUTBGQmFrSTdSVUZCU0RzN2VVSkJSV2hDTEZsQlFVRXNSMEZCWXl4VFFVRkJPMGxCUTJJc1QwRkJUeXhEUVVGRExFZEJRVklzUTBGQldTeEpRVUZKTEVOQlFVTXNVMEZCVEN4RFFVRmxMRWxCUVVNc1EwRkJRU3hMUVVGb1FpeERRVUZhTzFkQlEwRXNTVUZCUXl4RFFVRkJMRkZCUVVRc1EwRkJWU3hKUVVGRExFTkJRVUVzUzBGQlRTeERRVUZCTEd0Q1FVRkJMRU5CUVdwQ08wVkJSbUU3TzNsQ1FVbGtMRzFDUVVGQkxFZEJRWEZDTEZOQlFVRTdWMEZCUnl4RFFVRkRMRWxCUVVRc1JVRkJUeXhOUVVGUU8wVkJRVWc3TzNsQ1FVVnlRaXhyUWtGQlFTeEhRVUZ2UWl4VFFVRkJPMWRCUVVjc1NVRkJReXhEUVVGQkxGRkJRVVFzUTBGQlZTeEpRVUZETEVOQlFVRXNTMEZCVFN4RFFVRkJMRlZCUVVFc1EwRkJha0k3UlVGQlNEczdlVUpCUlhCQ0xHZENRVUZCTEVkQlFXdENMRk5CUVVFN1FVRkRha0lzVVVGQlFUdEpRVUZCTEZkQlFVRXNSMEZCWXl4SlFVRkRMRU5CUVVFc1kwRkJSQ3hEUVVGQk8wbEJRMlFzYTBKQlFVRXNSMEZCY1VJN1FVRkRja0k3UVVGQlFTeFRRVUZCTEZWQlFVRTdPMDFCUTBNc1dVRkJRU3hIUVVGbExFTkJRVU1zUjBGQlFTeEhRVUZOTEZsQlFWQTdUVUZEWml4SlFVRlpMRXRCUVUwc1EwRkJRU3hEUVVGQkxFTkJRVTRzUzBGQldTeERRVUY0UWp0QlFVRkJMR2xDUVVGQk96dE5RVU5CTEVsQlFWa3NZVUZCVHl4SlFVRkRMRU5CUVVFc2JVSkJRVVFzUTBGQlFTeERRVUZRTEVWQlFVRXNSMEZCUVN4TlFVRmFPMEZCUVVFc2FVSkJRVUU3TzBGQlEwRTdRVUZCUVN4WFFVRkJMSE5FUVVGQk96dFJRVU5ETEU5QlFVRXNSMEZCVlN4UlFVRkJMRWRCUVZjc1YwRkJXU3hEUVVGQkxFdEJRVUVzUTBGQmRrSXNSMEZCWjBNN1VVRkRNVU1zV1VGQldTeERRVUZETEVsQlFXSXNRMEZCYTBJc1QwRkJUeXhEUVVGRExFOUJRVklzUTBGQlowSXNRMEZCYUVJc1EwRkJiRUk3VVVGRFFTeFpRVUZaTEVOQlFVTXNTVUZCWWl4RFFVRnJRaXhWUVVGc1FqdEJRVWhFTzAxQlNVRXNXVUZCV1N4RFFVRkRMRWxCUVdJc1EwRkJhMElzU1VGQmJFSTdUVUZEUVN4clFrRkJhMElzUTBGQlF5eEpRVUZ1UWl4RFFVRjNRaXhaUVVGNFFqdEJRVlJFTzBsQlZVRXNUMEZCVHl4RFFVRkRMRWRCUVZJc1EwRkJXU3hKUVVGSkxFTkJRVU1zVTBGQlRDeERRVUZsTEd0Q1FVRm1MRVZCUVcxRExFbEJRVzVETEVWQlFYbERMRWxCUVhwRExFTkJRVm83UVVGRFFTeFhRVUZQTzBWQlpGVTdPM2xDUVdkQ2JFSXNaVUZCUVN4SFFVRnBRaXhUUVVGQk8wRkJRMmhDTEZGQlFVRTdTVUZCUVN4clFrRkJRU3hIUVVGeFFpeEpRVUZETEVOQlFVRXNVVUZCUkN4RFFVRlZMRWxCUVVNc1EwRkJRU3hMUVVGTkxFTkJRVUVzV1VGQlFTeERRVUZxUWp0SlFVTnlRaXhwUWtGQlFTeEhRVUZ2UWl4SlFVRkRMRU5CUVVFc1VVRkJSQ3hEUVVGVkxFbEJRVU1zUTBGQlFTeExRVUZOTEVOQlFVRXNXVUZCUVN4RFFVRnFRanRKUVVOd1FpeFpRVUZCTEVkQlFXVTdRVUZEWml4VFFVRkJMRzlGUVVGQk96dE5RVU5ETEZsQlFWa3NRMEZCUXl4SlFVRmlMRU5CUVd0Q0xFTkJRVU1zWVVGQlFTeEhRVUZuUWl4cFFrRkJhMElzUTBGQlFTeExRVUZCTEVOQlFXNURMRU5CUVRCRExFTkJRVU1zVDBGQk0wTXNRMEZCYlVRc1EwRkJia1FzUTBGQmJFSTdRVUZFUkR0WFFVVkJPMFZCVG1kQ096dDVRa0ZSYWtJc1lVRkJRU3hIUVVGbExGTkJRVUU3UVVGRFpDeFJRVUZCTzBsQlFVRXNhMEpCUVVFc1IwRkJjVUlzU1VGQlF5eERRVUZCTEZGQlFVUXNRMEZCVlN4SlFVRkRMRU5CUVVFc1MwRkJUU3hEUVVGQkxGbEJRVUVzUTBGQmFrSTdTVUZEY2tJc2FVSkJRVUVzUjBGQmIwSXNTVUZCUXl4RFFVRkJMRkZCUVVRc1EwRkJWU3hKUVVGRExFTkJRVUVzUzBGQlRTeERRVUZCTEZsQlFVRXNRMEZCYWtJN1NVRkRjRUlzWTBGQlFTeEhRVUZwUWl4SlFVRkRMRU5CUVVFc1VVRkJSQ3hEUVVGVkxFbEJRVU1zUTBGQlFTeExRVUZOTEVOQlFVRXNVVUZCUVN4RFFVRnFRanRKUVVOcVFpeFZRVUZCTEVkQlFXRTdRVUZEWWl4VFFVRkJMRzlGUVVGQk96dE5RVU5ETEZWQlFWVXNRMEZCUXl4SlFVRllMRU5CUVdkQ0xFTkJRVU1zUTBGQlF5eGhRVUZCTEVkQlFXZENMR05CUVdVc1EwRkJRU3hMUVVGQkxFTkJRV2hETEVOQlFVRXNSMEZCTUVNc2FVSkJRV3RDTEVOQlFVRXNTMEZCUVN4RFFVRTNSQ3hEUVVGdlJTeERRVUZETEU5QlFYSkZMRU5CUVRaRkxFTkJRVGRGTEVOQlFXaENPMEZCUkVRN1YwRkZRVHRGUVZCak96czdPMGRCZUVOWE96dEJRV2xFTTBJc1RVRkJUU3hEUVVGRExFOUJRVkFzUjBGQmFVSWlmUT09XG4iLCJ2YXIgQ2FzaEZsb3dTdGF0ZW1lbnQsIFRhYmxlQmFzZSxcbiAgZXh0ZW5kID0gZnVuY3Rpb24oY2hpbGQsIHBhcmVudCkgeyBmb3IgKHZhciBrZXkgaW4gcGFyZW50KSB7IGlmIChoYXNQcm9wLmNhbGwocGFyZW50LCBrZXkpKSBjaGlsZFtrZXldID0gcGFyZW50W2tleV07IH0gZnVuY3Rpb24gY3RvcigpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGNoaWxkOyB9IGN0b3IucHJvdG90eXBlID0gcGFyZW50LnByb3RvdHlwZTsgY2hpbGQucHJvdG90eXBlID0gbmV3IGN0b3IoKTsgY2hpbGQuX19zdXBlcl9fID0gcGFyZW50LnByb3RvdHlwZTsgcmV0dXJuIGNoaWxkOyB9LFxuICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cblRhYmxlQmFzZSA9IHJlcXVpcmUoXCIuL1RhYmxlQmFzZS5jb2ZmZWVcIik7XG5cbkNhc2hGbG93U3RhdGVtZW50ID0gKGZ1bmN0aW9uKHN1cGVyQ2xhc3MpIHtcbiAgZXh0ZW5kKENhc2hGbG93U3RhdGVtZW50LCBzdXBlckNsYXNzKTtcblxuICBmdW5jdGlvbiBDYXNoRmxvd1N0YXRlbWVudCgpIHtcbiAgICByZXR1cm4gQ2FzaEZsb3dTdGF0ZW1lbnQuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH1cblxuICBDYXNoRmxvd1N0YXRlbWVudC5wcm90b3R5cGUuZ2V0RmlsZVBhdGggPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCJyZXMvXCIgKyB0aGlzLl9zdG9ja1R5cGUgKyBcIl9qc29uL3hqbGxiX1wiICsgdGhpcy5fc3RvY2tDb2RlICsgXCIuanNvblwiO1xuICB9O1xuXG4gIHJldHVybiBDYXNoRmxvd1N0YXRlbWVudDtcblxufSkoVGFibGVCYXNlKTtcblxubW9kdWxlLmV4cG9ydHMgPSBDYXNoRmxvd1N0YXRlbWVudDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMMVZ6WlhKekwzUmhiM2QxTDNOMGRXUjVMMEZ5YTJGa0wwRnlhMkZrUjJGdFpTOXpjbU12Ylc5a1pXd3ZRMkZ6YUVac2IzZFRkR0YwWlcxbGJuUXVZMjltWm1WbElpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMMVZ6WlhKekwzUmhiM2QxTDNOMGRXUjVMMEZ5YTJGa0wwRnlhMkZrUjJGdFpTOXpjbU12Ylc5a1pXd3ZRMkZ6YUVac2IzZFRkR0YwWlcxbGJuUXVZMjltWm1WbElsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRWxCUVVFc05FSkJRVUU3UlVGQlFUczdPMEZCUVVFc1UwRkJRU3hIUVVGaExFOUJRVUVzUTBGQlVTeHZRa0ZCVWpzN1FVRkZVRHM3T3pzN096czRRa0ZGVEN4WFFVRkJMRWRCUVdFc1UwRkJRVHRYUVVOYUxFMUJRVUVzUjBGQlR5eEpRVUZETEVOQlFVRXNWVUZCVWl4SFFVRnRRaXhqUVVGdVFpeEhRVUZwUXl4SlFVRkRMRU5CUVVFc1ZVRkJiRU1zUjBGQk5rTTdSVUZFYWtNN096czdSMEZHYTBJN08wRkJTMmhETEUxQlFVMHNRMEZCUXl4UFFVRlFMRWRCUVdsQ0luMD1cbiIsInZhciBQcm9maXRTdGF0ZW1lbnQsIFRhYmxlQmFzZSwgdXRpbHMsXG4gIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG5UYWJsZUJhc2UgPSByZXF1aXJlKFwiLi9UYWJsZUJhc2UuY29mZmVlXCIpO1xuXG51dGlscyA9IHJlcXVpcmUoJy4uL3Rvb2xzL3V0aWxzLmNvZmZlZScpO1xuXG5Qcm9maXRTdGF0ZW1lbnQgPSAoZnVuY3Rpb24oc3VwZXJDbGFzcykge1xuICBleHRlbmQoUHJvZml0U3RhdGVtZW50LCBzdXBlckNsYXNzKTtcblxuICBmdW5jdGlvbiBQcm9maXRTdGF0ZW1lbnQoKSB7XG4gICAgcmV0dXJuIFByb2ZpdFN0YXRlbWVudC5fX3N1cGVyX18uY29uc3RydWN0b3IuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIFByb2ZpdFN0YXRlbWVudC5wcm90b3R5cGUuZ2V0RmlsZVBhdGggPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCJyZXMvXCIgKyB0aGlzLl9zdG9ja1R5cGUgKyBcIl9qc29uL2xyYl9cIiArIHRoaXMuX3N0b2NrQ29kZSArIFwiLmpzb25cIjtcbiAgfTtcblxuICBQcm9maXRTdGF0ZW1lbnQucHJvdG90eXBlLmdldEluY29tZVZhbHVlID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0VmFsdWUodGhpcy5fZGF0YVtcIuiQpeS4muaUtuWFpSjkuIflhYMpXCJdKTtcbiAgfTtcblxuICBQcm9maXRTdGF0ZW1lbnQucHJvdG90eXBlLmdldE5ldFByb2ZpdEFkZFJhdGlvID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGFkZFJhdGlvLCBhZGRUaW1lcywgbmV0UHJvZml0VGFibGU7XG4gICAgbmV0UHJvZml0VGFibGUgPSB0aGlzLmdldFZhbHVlKHRoaXMuX2RhdGFbXCLlh4DliKnmtqYo5LiH5YWDKVwiXSk7XG4gICAgYWRkVGltZXMgPSBuZXRQcm9maXRUYWJsZVswXSAvIG5ldFByb2ZpdFRhYmxlW25ldFByb2ZpdFRhYmxlLmxlbmd0aCAtIDFdO1xuICAgIGFkZFJhdGlvID0gdXRpbHMuZ2V0Q29tcG91bmRSYXRlKGFkZFRpbWVzLCBnbG9iYWwueWVhcik7XG4gICAgYWRkUmF0aW8gPSAoKGFkZFJhdGlvIC0gMSkgKiAxMDApLnRvRml4ZWQoMik7XG4gICAgcmV0dXJuIGFkZFJhdGlvO1xuICB9O1xuXG4gIFByb2ZpdFN0YXRlbWVudC5wcm90b3R5cGUuZ2V0TmV0UHJvZml0VGFibGUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRWYWx1ZSh0aGlzLl9kYXRhW1wi5YeA5Yip5ramKOS4h+WFgylcIl0pO1xuICB9O1xuXG4gIFByb2ZpdFN0YXRlbWVudC5wcm90b3R5cGUuZ2V0UEUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgUEUsIGVhcm5QZXJTaGFyZSwgcHJpY2U7XG4gICAgZWFyblBlclNoYXJlID0gdGhpcy5nZXRWYWx1ZSh0aGlzLl9kYXRhW1wi5Z+65pys5q+P6IKh5pS255uKXCJdLCB0cnVlKVswXTtcbiAgICBwcmljZSA9IHRoaXMuZ2V0U2hhcmVQcmljZSgpO1xuICAgIFBFID0gKHByaWNlIC8gZWFyblBlclNoYXJlKS50b0ZpeGVkKDIpO1xuICAgIHJldHVybiBQRTtcbiAgfTtcblxuICByZXR1cm4gUHJvZml0U3RhdGVtZW50O1xuXG59KShUYWJsZUJhc2UpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFByb2ZpdFN0YXRlbWVudDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMMVZ6WlhKekwzUmhiM2QxTDNOMGRXUjVMMEZ5YTJGa0wwRnlhMkZrUjJGdFpTOXpjbU12Ylc5a1pXd3ZVSEp2Wm1sMFUzUmhkR1Z0Wlc1MExtTnZabVpsWlNJc0luTnZkWEpqWlZKdmIzUWlPaUlpTENKemIzVnlZMlZ6SWpwYklpOVZjMlZ5Y3k5MFlXOTNkUzl6ZEhWa2VTOUJjbXRoWkM5QmNtdGhaRWRoYldVdmMzSmpMMjF2WkdWc0wxQnliMlpwZEZOMFlYUmxiV1Z1ZEM1amIyWm1aV1VpWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1NVRkJRU3hwUTBGQlFUdEZRVUZCT3pzN1FVRkJRU3hUUVVGQkxFZEJRV0VzVDBGQlFTeERRVUZSTEc5Q1FVRlNPenRCUVVOaUxFdEJRVUVzUjBGQlZTeFBRVUZCTEVOQlFWRXNkVUpCUVZJN08wRkJSVW83T3pzN096czdORUpCUTB3c1YwRkJRU3hIUVVGaExGTkJRVUU3VjBGRFdpeE5RVUZCTEVkQlFVOHNTVUZCUXl4RFFVRkJMRlZCUVZJc1IwRkJiVUlzV1VGQmJrSXNSMEZCSzBJc1NVRkJReXhEUVVGQkxGVkJRV2hETEVkQlFUSkRPMFZCUkM5Q096czBRa0ZIWWl4alFVRkJMRWRCUVdkQ0xGTkJRVUU3VjBGQlJ5eEpRVUZETEVOQlFVRXNVVUZCUkN4RFFVRlZMRWxCUVVNc1EwRkJRU3hMUVVGTkxFTkJRVUVzVlVGQlFTeERRVUZxUWp0RlFVRklPenMwUWtGRmFFSXNiMEpCUVVFc1IwRkJjMElzVTBGQlFUdEJRVU55UWl4UlFVRkJPMGxCUVVFc1kwRkJRU3hIUVVGcFFpeEpRVUZETEVOQlFVRXNVVUZCUkN4RFFVRlZMRWxCUVVNc1EwRkJRU3hMUVVGTkxFTkJRVUVzVTBGQlFTeERRVUZxUWp0SlFVTnFRaXhSUVVGQkxFZEJRVmNzWTBGQlpTeERRVUZCTEVOQlFVRXNRMEZCWml4SFFVRnZRaXhqUVVGbExFTkJRVUVzWTBGQll5eERRVUZETEUxQlFXWXNSMEZCZDBJc1EwRkJlRUk3U1VGRE9VTXNVVUZCUVN4SFFVRlhMRXRCUVVzc1EwRkJReXhsUVVGT0xFTkJRWE5DTEZGQlFYUkNMRVZCUVdkRExFMUJRVTBzUTBGQlF5eEpRVUYyUXp0SlFVTllMRkZCUVVFc1IwRkJWeXhEUVVGRExFTkJRVU1zVVVGQlFTeEhRVUZYTEVOQlFWb3NRMEZCUVN4SFFVRnBRaXhIUVVGc1FpeERRVUZ6UWl4RFFVRkRMRTlCUVhaQ0xFTkJRU3RDTEVOQlFTOUNPMWRCUTFnN1JVRk1jVUk3T3pSQ1FVOTBRaXhwUWtGQlFTeEhRVUZ2UWl4VFFVRkJPMWRCUTI1Q0xFbEJRVU1zUTBGQlFTeFJRVUZFTEVOQlFWVXNTVUZCUXl4RFFVRkJMRXRCUVUwc1EwRkJRU3hUUVVGQkxFTkJRV3BDTzBWQlJHMUNPenMwUWtGSGNFSXNTMEZCUVN4SFFVRlBMRk5CUVVFN1FVRkRUaXhSUVVGQk8wbEJRVUVzV1VGQlFTeEhRVUZsTEVsQlFVTXNRMEZCUVN4UlFVRkVMRU5CUVZVc1NVRkJReXhEUVVGQkxFdEJRVTBzUTBGQlFTeFJRVUZCTEVOQlFXcENMRVZCUVRSQ0xFbEJRVFZDTEVOQlFXdERMRU5CUVVFc1EwRkJRVHRKUVVOcVJDeExRVUZCTEVkQlFWRXNTVUZCUXl4RFFVRkJMR0ZCUVVRc1EwRkJRVHRKUVVOU0xFVkJRVUVzUjBGQlN5eERRVUZETEV0QlFVRXNSMEZCVVN4WlFVRlVMRU5CUVhOQ0xFTkJRVU1zVDBGQmRrSXNRMEZCSzBJc1EwRkJMMEk3VjBGRFREdEZRVXBOT3pzN08wZEJhRUp6UWpzN1FVRjFRamxDTEUxQlFVMHNRMEZCUXl4UFFVRlFMRWRCUVdsQ0luMD1cbiIsInZhciBUYWJsZUJhc2U7XG5cblRhYmxlQmFzZSA9IChmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gVGFibGVCYXNlKF9zdG9ja1R5cGUsIF9zdG9ja0NvZGUpIHtcbiAgICB0aGlzLl9zdG9ja1R5cGUgPSBfc3RvY2tUeXBlO1xuICAgIHRoaXMuX3N0b2NrQ29kZSA9IF9zdG9ja0NvZGU7XG4gICAgdGhpcy5fZGF0YSA9IFtdO1xuICAgIHRoaXMuX2xvYWRKc29uKCk7XG4gIH1cblxuICBUYWJsZUJhc2UucHJvdG90eXBlLmdldEZpbGVQYXRoID0gZnVuY3Rpb24oKSB7fTtcblxuICBUYWJsZUJhc2UucHJvdG90eXBlLmdldFN0b2NrQ29kZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLl9zdG9ja0NvZGU7XG4gIH07XG5cbiAgVGFibGVCYXNlLnByb3RvdHlwZS5fbG9hZEpzb24gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgZmlsZVBhdGg7XG4gICAgZmlsZVBhdGggPSB0aGlzLmdldEZpbGVQYXRoKCk7XG4gICAgcmV0dXJuIGNjLmxvYWRlci5sb2FkSnNvbihmaWxlUGF0aCwgKGZ1bmN0aW9uKF90aGlzKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oZXJyb3IsIGRhdGEpIHtcbiAgICAgICAgZ2xvYmFsLmxvYWROdW0rKztcbiAgICAgICAgY29uc29sZS5sb2coXCJsb2FkIG51bTpcIiArIGdsb2JhbC5sb2FkTnVtKTtcbiAgICAgICAgcmV0dXJuIF90aGlzLl9kYXRhID0gZGF0YTtcbiAgICAgIH07XG4gICAgfSkodGhpcykpO1xuICB9O1xuXG4gIFRhYmxlQmFzZS5wcm90b3R5cGUuZ2V0QmFzZUluZm8gPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fZGF0YVtcIui1hOaWmVwiXVswXSArIFwiLS0tLS0tXCIgKyB0aGlzLl9kYXRhW1wi6LWE5paZXCJdWzJdO1xuICB9O1xuXG4gIFRhYmxlQmFzZS5wcm90b3R5cGUuZ2V0U2hhcmVQcmljZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLl9kYXRhW1wi6LWE5paZXCJdWzFdO1xuICB9O1xuXG4gIFRhYmxlQmFzZS5wcm90b3R5cGUuX2dldFNob3dOdW1iZXIgPSBmdW5jdGlvbihudW1iZXIpIHtcbiAgICByZXR1cm4gKChudW1iZXIgLyAxMDAwMDApLnRvRml4ZWQoMikpICsgXCIg5Lq/XCI7XG4gIH07XG5cbiAgVGFibGVCYXNlLnByb3RvdHlwZS5nZXRGb3JtYXROdW1iZXJUYWJsZSA9IGZ1bmN0aW9uKG51bWJlclRhYmxlKSB7XG4gICAgdmFyIGZvcm1hdFRhYmxlLCBpLCBsZW4sIG51bWJlcjtcbiAgICBmb3JtYXRUYWJsZSA9IFtdO1xuICAgIGZvciAoaSA9IDAsIGxlbiA9IG51bWJlclRhYmxlLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICBudW1iZXIgPSBudW1iZXJUYWJsZVtpXTtcbiAgICAgIGZvcm1hdFRhYmxlLnB1c2godGhpcy5fZ2V0U2hvd051bWJlcihudW1iZXIpKTtcbiAgICB9XG4gICAgcmV0dXJuIGZvcm1hdFRhYmxlO1xuICB9O1xuXG4gIFRhYmxlQmFzZS5wcm90b3R5cGUuX2dldFllYXJWYWx1ZUluZGV4ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGksIGluZGV4LCBpbmRleFRhYmxlLCBsZW4sIHJlZiwgdGltZVN0cjtcbiAgICBpbmRleFRhYmxlID0gW107XG4gICAgcmVmID0gdGhpcy5fZGF0YVtcIuaKpeWRiuaXpeacn1wiXTtcbiAgICBmb3IgKGluZGV4ID0gaSA9IDAsIGxlbiA9IHJlZi5sZW5ndGg7IGkgPCBsZW47IGluZGV4ID0gKytpKSB7XG4gICAgICB0aW1lU3RyID0gcmVmW2luZGV4XTtcbiAgICAgIGlmICh0aW1lU3RyLmluZGV4T2YoXCIxMi0zMVwiKSAhPT0gLTEpIHtcbiAgICAgICAgaW5kZXhUYWJsZS5wdXNoKGluZGV4KTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGluZGV4VGFibGU7XG4gIH07XG5cbiAgVGFibGVCYXNlLnByb3RvdHlwZS5fZ2V0VmFsdWVMZW5ndGggPSBmdW5jdGlvbih2YWx1ZUxlbmd0aCkge1xuICAgIHZhciBsZW5ndGg7XG4gICAgaWYgKHZhbHVlTGVuZ3RoIDwgZ2xvYmFsLnllYXIpIHtcbiAgICAgIGxlbmd0aCA9IHZhbHVlTGVuZ3RoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsZW5ndGggPSBnbG9iYWwueWVhcjtcbiAgICB9XG4gICAgcmV0dXJuIGxlbmd0aDtcbiAgfTtcblxuICBUYWJsZUJhc2UucHJvdG90eXBlLl9mb3JtYXRUb0ludCA9IGZ1bmN0aW9uKHZhbHVlVGFibGUpIHtcbiAgICB2YXIgaSwgaW50VGFibGUsIGxlbiwgdmFsdWU7XG4gICAgaW50VGFibGUgPSBbXTtcbiAgICBmb3IgKGkgPSAwLCBsZW4gPSB2YWx1ZVRhYmxlLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICB2YWx1ZSA9IHZhbHVlVGFibGVbaV07XG4gICAgICBpbnRUYWJsZS5wdXNoKHBhcnNlSW50KHZhbHVlKSk7XG4gICAgfVxuICAgIHJldHVybiBpbnRUYWJsZTtcbiAgfTtcblxuICBUYWJsZUJhc2UucHJvdG90eXBlLmdldFZhbHVlID0gZnVuY3Rpb24oZGF0YSwgZG9Ob3RUb0ludCkge1xuICAgIHZhciBpLCBpbmRleCwgbGVuLCB2YWx1ZVRhYmxlLCB5ZWFySW5kZXhUYWJsZTtcbiAgICB5ZWFySW5kZXhUYWJsZSA9IHRoaXMuX2dldFllYXJWYWx1ZUluZGV4KCk7XG4gICAgdmFsdWVUYWJsZSA9IFtdO1xuICAgIGZvciAoaSA9IDAsIGxlbiA9IHllYXJJbmRleFRhYmxlLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICBpbmRleCA9IHllYXJJbmRleFRhYmxlW2ldO1xuICAgICAgdmFsdWVUYWJsZS5wdXNoKGRhdGFbaW5kZXhdKTtcbiAgICB9XG4gICAgdmFsdWVUYWJsZSA9IHZhbHVlVGFibGUuc2xpY2UoMCwgdGhpcy5fZ2V0VmFsdWVMZW5ndGgodmFsdWVUYWJsZS5sZW5ndGgpKTtcbiAgICBpZiAoZG9Ob3RUb0ludCkge1xuICAgICAgcmV0dXJuIHZhbHVlVGFibGU7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLl9mb3JtYXRUb0ludCh2YWx1ZVRhYmxlKTtcbiAgfTtcblxuICByZXR1cm4gVGFibGVCYXNlO1xuXG59KSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFRhYmxlQmFzZTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMMVZ6WlhKekwzUmhiM2QxTDNOMGRXUjVMMEZ5YTJGa0wwRnlhMkZrUjJGdFpTOXpjbU12Ylc5a1pXd3ZWR0ZpYkdWQ1lYTmxMbU52Wm1abFpTSXNJbk52ZFhKalpWSnZiM1FpT2lJaUxDSnpiM1Z5WTJWeklqcGJJaTlWYzJWeWN5OTBZVzkzZFM5emRIVmtlUzlCY210aFpDOUJjbXRoWkVkaGJXVXZjM0pqTDIxdlpHVnNMMVJoWW14bFFtRnpaUzVqYjJabVpXVWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRMEVzU1VGQlFUczdRVUZCVFR0RlFVTlJMRzFDUVVGRExGVkJRVVFzUlVGQll5eFZRVUZrTzBsQlFVTXNTVUZCUXl4RFFVRkJMR0ZCUVVRN1NVRkJZU3hKUVVGRExFTkJRVUVzWVVGQlJEdEpRVU14UWl4SlFVRkRMRU5CUVVFc1MwRkJSQ3hIUVVGVE8wbEJRMVFzU1VGQlF5eERRVUZCTEZOQlFVUXNRMEZCUVR0RlFVWlpPenR6UWtGSllpeFhRVUZCTEVkQlFXRXNVMEZCUVN4SFFVRkJPenR6UWtGRllpeFpRVUZCTEVkQlFXTXNVMEZCUVR0WFFVRkhMRWxCUVVNc1EwRkJRVHRGUVVGS096dHpRa0ZGWkN4VFFVRkJMRWRCUVZjc1UwRkJRVHRCUVVOV0xGRkJRVUU3U1VGQlFTeFJRVUZCTEVkQlFWY3NTVUZCUXl4RFFVRkJMRmRCUVVRc1EwRkJRVHRYUVVOWUxFVkJRVVVzUTBGQlF5eE5RVUZOTEVOQlFVTXNVVUZCVml4RFFVRnRRaXhSUVVGdVFpeEZRVUUyUWl4RFFVRkJMRk5CUVVFc1MwRkJRVHRoUVVGQkxGTkJRVU1zUzBGQlJDeEZRVUZSTEVsQlFWSTdVVUZETlVJc1RVRkJUU3hEUVVGRExFOUJRVkE3VVVGRFFTeFBRVUZQTEVOQlFVTXNSMEZCVWl4RFFVRlpMRmRCUVVFc1IwRkJXU3hOUVVGTkxFTkJRVU1zVDBGQkwwSTdaVUZEUVN4TFFVRkRMRU5CUVVFc1MwRkJSQ3hIUVVGVE8wMUJTRzFDTzBsQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1NVRkJRU3hEUVVFM1FqdEZRVVpWT3p0elFrRlBXQ3hYUVVGQkxFZEJRV0VzVTBGQlFUdFhRVUZITEVsQlFVTXNRMEZCUVN4TFFVRk5MRU5CUVVFc1NVRkJRU3hEUVVGTkxFTkJRVUVzUTBGQlFTeERRVUZpTEVkQlFXdENMRkZCUVd4Q0xFZEJRVFpDTEVsQlFVTXNRMEZCUVN4TFFVRk5MRU5CUVVFc1NVRkJRU3hEUVVGTkxFTkJRVUVzUTBGQlFUdEZRVUUzUXpzN2MwSkJSV0lzWVVGQlFTeEhRVUZsTEZOQlFVRTdWMEZCUnl4SlFVRkRMRU5CUVVFc1MwRkJUU3hEUVVGQkxFbEJRVUVzUTBGQlRTeERRVUZCTEVOQlFVRTdSVUZCYUVJN08zTkNRVVZtTEdOQlFVRXNSMEZCYVVJc1UwRkJReXhOUVVGRU8wRkJRMmhDTEZkQlFWTXNRMEZCUXl4RFFVRkRMRTFCUVVFc1IwRkJVeXhOUVVGV0xFTkJRV2xDTEVOQlFVTXNUMEZCYkVJc1EwRkJNRUlzUTBGQk1VSXNRMEZCUkN4RFFVRkJMRWRCUVRoQ08wVkJSSFpDT3p0elFrRkhha0lzYjBKQlFVRXNSMEZCYzBJc1UwRkJReXhYUVVGRU8wRkJRM0pDTEZGQlFVRTdTVUZCUVN4WFFVRkJMRWRCUVdNN1FVRkRaQ3hUUVVGQkxEWkRRVUZCT3p0TlFVTkRMRmRCUVZjc1EwRkJReXhKUVVGYUxFTkJRV2xDTEVsQlFVTXNRMEZCUVN4alFVRkVMRU5CUVdkQ0xFMUJRV2hDTEVOQlFXcENPMEZCUkVRN1FVRkZRU3hYUVVGUE8wVkJTbU03TzNOQ1FVMTBRaXhyUWtGQlFTeEhRVUZ2UWl4VFFVRkJPMEZCUTI1Q0xGRkJRVUU3U1VGQlFTeFZRVUZCTEVkQlFXRTdRVUZEWWp0QlFVRkJMRk5CUVVFc2NVUkJRVUU3TzAxQlEwTXNTVUZCUnl4UFFVRlBMRU5CUVVNc1QwRkJVaXhEUVVGblFpeFBRVUZvUWl4RFFVRkJMRXRCUVRoQ0xFTkJRVU1zUTBGQmJFTTdVVUZEUXl4VlFVRlZMRU5CUVVNc1NVRkJXQ3hEUVVGblFpeExRVUZvUWl4RlFVUkVPenRCUVVSRU8wRkJSMEVzVjBGQlR6dEZRVXhaT3p0elFrRlBjRUlzWlVGQlFTeEhRVUZwUWl4VFFVRkRMRmRCUVVRN1FVRkRhRUlzVVVGQlFUdEpRVUZCTEVsQlFVY3NWMEZCUVN4SFFVRmpMRTFCUVUwc1EwRkJReXhKUVVGNFFqdE5RVU5ETEUxQlFVRXNSMEZCVXl4WlFVUldPMHRCUVVFc1RVRkJRVHROUVVkRExFMUJRVUVzUjBGQlV5eE5RVUZOTEVOQlFVTXNTMEZJYWtJN08xZEJTVUU3UlVGTVowSTdPM05DUVU5cVFpeFpRVUZCTEVkQlFXTXNVMEZCUXl4VlFVRkVPMEZCUTJJc1VVRkJRVHRKUVVGQkxGRkJRVUVzUjBGQlZ6dEJRVU5ZTEZOQlFVRXNORU5CUVVFN08wMUJRME1zVVVGQlVTeERRVUZETEVsQlFWUXNRMEZCWXl4UlFVRkJMRU5CUVZNc1MwRkJWQ3hEUVVGa08wRkJSRVE3UVVGRlFTeFhRVUZQTzBWQlNrMDdPM05DUVUxa0xGRkJRVUVzUjBGQlZTeFRRVUZETEVsQlFVUXNSVUZCVHl4VlFVRlFPMEZCUTFRc1VVRkJRVHRKUVVGQkxHTkJRVUVzUjBGQmFVSXNTVUZCUXl4RFFVRkJMR3RDUVVGRUxFTkJRVUU3U1VGRGFrSXNWVUZCUVN4SFFVRmhPMEZCUTJJc1UwRkJRU3huUkVGQlFUczdUVUZEUXl4VlFVRlZMRU5CUVVNc1NVRkJXQ3hEUVVGblFpeEpRVUZMTEVOQlFVRXNTMEZCUVN4RFFVRnlRanRCUVVSRU8wbEJSMEVzVlVGQlFTeEhRVUZoTEZWQlFWVXNRMEZCUXl4TFFVRllMRU5CUVdsQ0xFTkJRV3BDTEVWQlFXOUNMRWxCUVVNc1EwRkJRU3hsUVVGRUxFTkJRV2xDTEZWQlFWVXNRMEZCUXl4TlFVRTFRaXhEUVVGd1FqdEpRVU5pTEVsQlFVY3NWVUZCU0R0QlFVTkRMR0ZCUVU4c1YwRkVVanM3UVVGRlFTeFhRVUZQTEVsQlFVTXNRMEZCUVN4WlFVRkVMRU5CUVdNc1ZVRkJaRHRGUVZSRk96czdPenM3UVVGWFdDeE5RVUZOTEVOQlFVTXNUMEZCVUN4SFFVRnBRaUo5XG4iLCJ2YXIgTGF5ZXJNYW5hZ2VyLCBMb2FkZXI7XG5cbkxheWVyTWFuYWdlciA9IHtcbiAgaW5pdDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5sYXllclN0YWNrID0gW107XG4gICAgdGhpcy5zY2VuZSA9IG5ldyBjYy5TY2VuZSgpO1xuICAgIHJldHVybiBjYy5kaXJlY3Rvci5ydW5TY2VuZSh0aGlzLnNjZW5lKTtcbiAgfSxcbiAgY2xlYXJMYXllcjogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5zY2VuZS5yZW1vdmVBbGxDaGlsZHJlbigpO1xuICAgIHJldHVybiB0aGlzLmxheWVyU3RhY2subGVuZ3RoID0gMDtcbiAgfSxcbiAgYWRkTGF5ZXJUb1NjZW5lOiBmdW5jdGlvbihjY2JMYXllciwgek9yZGVyKSB7XG4gICAgdmFyIGxheW91dCwgbm9kZTtcbiAgICBpZiAoek9yZGVyID09IG51bGwpIHtcbiAgICAgIHpPcmRlciA9IDA7XG4gICAgfVxuICAgIGxheW91dCA9IG5ldyBjY3VpLkxheW91dCgpO1xuICAgIGxheW91dC5zZXRDb250ZW50U2l6ZShjYy5zaXplKDExMzYsIDY0MCkpO1xuICAgIGxheW91dC5zZXRUb3VjaEVuYWJsZWQodHJ1ZSk7XG4gICAgbm9kZSA9IG5ldyBjYy5Ob2RlKCk7XG4gICAgbm9kZS5hZGRDaGlsZChsYXlvdXQpO1xuICAgIG5vZGUuYWRkQ2hpbGQoY2NiTGF5ZXIpO1xuICAgIHRoaXMuc2NlbmUuYWRkQ2hpbGQobm9kZSwgek9yZGVyKTtcbiAgICByZXR1cm4gdGhpcy5sYXllclN0YWNrLnB1c2gobm9kZSk7XG4gIH0sXG4gIHJlbW92ZVRvcExheWVyOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdG9wTGF5ZXI7XG4gICAgdG9wTGF5ZXIgPSB0aGlzLmxheWVyU3RhY2sucG9wKCk7XG4gICAgcmV0dXJuIHRoaXMuc2NlbmUucmVtb3ZlQ2hpbGQodG9wTGF5ZXIsIHRydWUpO1xuICB9XG59O1xuXG5Mb2FkZXIgPSAoZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIExvYWRlcihjY2JGaWxlMSwgY29udHJvbGxlck5hbWUxKSB7XG4gICAgdGhpcy5jY2JGaWxlID0gY2NiRmlsZTE7XG4gICAgdGhpcy5jb250cm9sbGVyTmFtZSA9IGNvbnRyb2xsZXJOYW1lMTtcbiAgfVxuXG4gIExvYWRlci5wcm90b3R5cGUuc2hvd0RpYWxvZyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjYy5CdWlsZGVyUmVhZGVyLmxvYWQodGhpcy5jY2JGaWxlKTtcbiAgfTtcblxuICByZXR1cm4gTG9hZGVyO1xuXG59KSgpO1xuXG5MYXllck1hbmFnZXIuZGVmaW5lRGlhbG9nID0gZnVuY3Rpb24oY2NiRmlsZSwgY29udHJvbGxlck5hbWUsIGNvbnRyb2xsZXJDbGFzcykge1xuICBjYy5CdWlsZGVyUmVhZGVyLnJlZ2lzdGVyQ29udHJvbGxlcihjb250cm9sbGVyTmFtZSwgbmV3IGNvbnRyb2xsZXJDbGFzcygpKTtcbiAgcmV0dXJuIG5ldyBMb2FkZXIoY2NiRmlsZSwgY29udHJvbGxlck5hbWUpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBMYXllck1hbmFnZXI7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTDFWelpYSnpMM1JoYjNkMUwzTjBkV1I1TDBGeWEyRmtMMEZ5YTJGa1IyRnRaUzl6Y21NdmRHOXZiSE12UVhKclUyTmxibVZOWVc1aFoyVnlMbU52Wm1abFpTSXNJbk52ZFhKalpWSnZiM1FpT2lJaUxDSnpiM1Z5WTJWeklqcGJJaTlWYzJWeWN5OTBZVzkzZFM5emRIVmtlUzlCY210aFpDOUJjbXRoWkVkaGJXVXZjM0pqTDNSdmIyeHpMMEZ5YTFOalpXNWxUV0Z1WVdkbGNpNWpiMlptWldVaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlEwRXNTVUZCUVRzN1FVRkJRU3haUVVGQkxFZEJRMGs3UlVGQlFTeEpRVUZCTEVWQlFVMHNVMEZCUVR0SlFVTkdMRWxCUVVNc1EwRkJRU3hWUVVGRUxFZEJRV003U1VGRFpDeEpRVUZETEVOQlFVRXNTMEZCUkN4SFFVRlRMRWxCUVVrc1JVRkJSU3hEUVVGRExFdEJRVkFzUTBGQlFUdFhRVU5VTEVWQlFVVXNRMEZCUXl4UlFVRlJMRU5CUVVNc1VVRkJXaXhEUVVGeFFpeEpRVUZETEVOQlFVRXNTMEZCZEVJN1JVRklSU3hEUVVGT08wVkJTMEVzVlVGQlFTeEZRVUZaTEZOQlFVRTdTVUZEVWl4SlFVRkRMRU5CUVVFc1MwRkJTeXhEUVVGRExHbENRVUZRTEVOQlFVRTdWMEZEUVN4SlFVRkRMRU5CUVVFc1ZVRkJWU3hEUVVGRExFMUJRVm9zUjBGQmNVSTdSVUZHWWl4RFFVeGFPMFZCVTBFc1pVRkJRU3hGUVVGclFpeFRRVUZETEZGQlFVUXNSVUZCVnl4TlFVRllPMEZCUTJRc1VVRkJRVHM3VFVGRWVVSXNVMEZCVXpzN1NVRkRiRU1zVFVGQlFTeEhRVUZUTEVsQlFVa3NTVUZCU1N4RFFVRkRMRTFCUVZRc1EwRkJRVHRKUVVOVUxFMUJRVTBzUTBGQlF5eGpRVUZRTEVOQlFYTkNMRVZCUVVVc1EwRkJReXhKUVVGSUxFTkJRVkVzU1VGQlVpeEZRVUZqTEVkQlFXUXNRMEZCZEVJN1NVRkRRU3hOUVVGTkxFTkJRVU1zWlVGQlVDeERRVUYxUWl4SlFVRjJRanRKUVVWQkxFbEJRVUVzUjBGQlRTeEpRVUZKTEVWQlFVVXNRMEZCUXl4SlFVRlFMRU5CUVVFN1NVRkRUaXhKUVVGSkxFTkJRVU1zVVVGQlRDeERRVUZqTEUxQlFXUTdTVUZEUVN4SlFVRkpMRU5CUVVNc1VVRkJUQ3hEUVVGakxGRkJRV1E3U1VGRlFTeEpRVUZETEVOQlFVRXNTMEZCU3l4RFFVRkRMRkZCUVZBc1EwRkJaMElzU1VGQmFFSXNSVUZCYzBJc1RVRkJkRUk3VjBGRFFTeEpRVUZETEVOQlFVRXNWVUZCVlN4RFFVRkRMRWxCUVZvc1EwRkJhVUlzU1VGQmFrSTdSVUZXWXl4RFFWUnNRanRGUVhGQ1FTeGpRVUZCTEVWQlFXZENMRk5CUVVFN1FVRkRXaXhSUVVGQk8wbEJRVUVzVVVGQlFTeEhRVUZYTEVsQlFVTXNRMEZCUVN4VlFVRlZMRU5CUVVNc1IwRkJXaXhEUVVGQk8xZEJRMWdzU1VGQlF5eERRVUZCTEV0QlFVc3NRMEZCUXl4WFFVRlFMRU5CUVcxQ0xGRkJRVzVDTEVWQlFUWkNMRWxCUVRkQ08wVkJSbGtzUTBGeVFtaENPenM3UVVGNVFrVTdSVUZEVnl4blFrRkJReXhSUVVGRUxFVkJRVmNzWlVGQldEdEpRVUZETEVsQlFVTXNRMEZCUVN4VlFVRkVPMGxCUVZVc1NVRkJReXhEUVVGQkxHbENRVUZFTzBWQlFWZzdPMjFDUVVOaUxGVkJRVUVzUjBGQllTeFRRVUZCTzFkQlExUXNSVUZCUlN4RFFVRkRMR0ZCUVdFc1EwRkJReXhKUVVGcVFpeERRVUZ6UWl4SlFVRkRMRU5CUVVFc1QwRkJka0k3UlVGRVV6czdPenM3TzBGQlIycENMRmxCUVZrc1EwRkJReXhaUVVGaUxFZEJRVFJDTEZOQlFVTXNUMEZCUkN4RlFVRlZMR05CUVZZc1JVRkJNRUlzWlVGQk1VSTdSVUZEZUVJc1JVRkJSU3hEUVVGRExHRkJRV0VzUTBGQlF5eHJRa0ZCYWtJc1EwRkRTU3hqUVVSS0xFVkJSVWtzU1VGQlNTeGxRVUZLTEVOQlFVRXNRMEZHU2p0VFFVdEJMRWxCUVVrc1RVRkJTaXhEUVVGWExFOUJRVmdzUlVGQmIwSXNZMEZCY0VJN1FVRk9kMEk3TzBGQlVUVkNMRTFCUVUwc1EwRkJReXhQUVVGUUxFZEJRV2xDSW4wPVxuIiwidmFyIFNjcm9sbFZpZXc7XG5cblNjcm9sbFZpZXcgPSB7XG4gIGNyZWF0ZVNjcm9sbFZpZXc6IGZ1bmN0aW9uKHRhcmdldE5vZGUpIHtcbiAgICB2YXIgY29udGFpbmVyLCBzY3JvbGxWaWV3LCBzaXplO1xuICAgIHNpemUgPSB0YXJnZXROb2RlLmdldENvbnRlbnRTaXplKCk7XG4gICAgY29udGFpbmVyID0gbmV3IGNjLk5vZGUoKTtcbiAgICBzY3JvbGxWaWV3ID0gbmV3IGNjLlNjcm9sbFZpZXcoc2l6ZSwgY29udGFpbmVyKTtcbiAgICBzY3JvbGxWaWV3LnNldFBvc2l0aW9uKHRhcmdldE5vZGUuZ2V0UG9zaXRpb24oKSk7XG4gICAgc2Nyb2xsVmlldy5zZXREaXJlY3Rpb24oY2MuU0NST0xMVklFV19ESVJFQ1RJT05fVkVSVElDQUwpO1xuICAgIHNjcm9sbFZpZXcuc2V0VG91Y2hFbmFibGVkKHRydWUpO1xuICAgIHJldHVybiBzY3JvbGxWaWV3O1xuICB9LFxuICBpbml0RnJvbUNvbnRhaW5lcjogZnVuY3Rpb24oc2Nyb2xsVmlldywgaW5uZXIpIHtcbiAgICB2YXIgY29udGFpbmVyO1xuICAgIGlubmVyLnNldFBvc2l0aW9uKHtcbiAgICAgIHg6IDAsXG4gICAgICB5OiAwXG4gICAgfSk7XG4gICAgaW5uZXIuc2V0QW5jaG9yUG9pbnQoe1xuICAgICAgeDogMCxcbiAgICAgIHk6IDBcbiAgICB9KTtcbiAgICBpbm5lci5yZW1vdmVGcm9tUGFyZW50KCk7XG4gICAgY29udGFpbmVyID0gc2Nyb2xsVmlldy5nZXRDb250YWluZXIoKTtcbiAgICBjb250YWluZXIucmVtb3ZlQWxsQ2hpbGRyZW4odHJ1ZSk7XG4gICAgY29udGFpbmVyLnNldENvbnRlbnRTaXplKGlubmVyLmdldENvbnRlbnRTaXplKCkpO1xuICAgIHJldHVybiBjb250YWluZXIuYWRkQ2hpbGQoaW5uZXIpO1xuICB9LFxuICBzY3JvbGxKdW1wVG9Ub3A6IGZ1bmN0aW9uKHNjcm9sbFZpZXcpIHtcbiAgICB2YXIgY29udGFpbmVyLCBvZmZzZXQ7XG4gICAgY29udGFpbmVyID0gc2Nyb2xsVmlldy5nZXRDb250YWluZXIoKTtcbiAgICBvZmZzZXQgPSBzY3JvbGxWaWV3LmdldFZpZXdTaXplKCkuaGVpZ2h0IC0gY29udGFpbmVyLmdldENvbnRlbnRTaXplKCkuaGVpZ2h0O1xuICAgIGlmIChvZmZzZXQgPCAwKSB7XG4gICAgICByZXR1cm4gc2Nyb2xsVmlldy5zZXRDb250ZW50T2Zmc2V0KHtcbiAgICAgICAgeDogMCxcbiAgICAgICAgeTogb2Zmc2V0XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHNjcm9sbFZpZXcuc2V0Q29udGVudE9mZnNldCh7XG4gICAgICAgIHg6IDAsXG4gICAgICAgIHk6IDBcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBTY3JvbGxWaWV3O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUwxVnpaWEp6TDNSaGIzZDFMM04wZFdSNUwwRnlhMkZrTDBGeWEyRmtSMkZ0WlM5emNtTXZkRzl2YkhNdlUyTnliMnhzVm1sbGR5NWpiMlptWldVaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXZWWE5sY25NdmRHRnZkM1V2YzNSMVpIa3ZRWEpyWVdRdlFYSnJZV1JIWVcxbEwzTnlZeTkwYjI5c2N5OVRZM0p2Ykd4V2FXVjNMbU52Wm1abFpTSmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hKUVVGQk96dEJRVUZCTEZWQlFVRXNSMEZEU1R0RlFVRkJMR2RDUVVGQkxFVkJRV3RDTEZOQlFVTXNWVUZCUkR0QlFVTmtMRkZCUVVFN1NVRkJRU3hKUVVGQkxFZEJRVThzVlVGQlZTeERRVUZETEdOQlFWZ3NRMEZCUVR0SlFVTlFMRk5CUVVFc1IwRkJXU3hKUVVGSkxFVkJRVVVzUTBGQlF5eEpRVUZRTEVOQlFVRTdTVUZEV2l4VlFVRkJMRWRCUVdFc1NVRkJTU3hGUVVGRkxFTkJRVU1zVlVGQlVDeERRVUZyUWl4SlFVRnNRaXhGUVVGM1FpeFRRVUY0UWp0SlFVTmlMRlZCUVZVc1EwRkJReXhYUVVGWUxFTkJRWFZDTEZWQlFWVXNRMEZCUXl4WFFVRllMRU5CUVVFc1EwRkJka0k3U1VGRFFTeFZRVUZWTEVOQlFVTXNXVUZCV0N4RFFVRjNRaXhGUVVGRkxFTkJRVU1zTmtKQlFUTkNPMGxCUTBFc1ZVRkJWU3hEUVVGRExHVkJRVmdzUTBGQk1rSXNTVUZCTTBJN1YwRkRRVHRGUVZCakxFTkJRV3hDTzBWQlUwRXNhVUpCUVVFc1JVRkJiVUlzVTBGQlF5eFZRVUZFTEVWQlFXRXNTMEZCWWp0QlFVTm1MRkZCUVVFN1NVRkJRU3hMUVVGTExFTkJRVU1zVjBGQlRpeERRVUZyUWp0TlFVRkRMRU5CUVVFc1JVRkJSeXhEUVVGS08wMUJRVThzUTBGQlFTeEZRVUZITEVOQlFWWTdTMEZCYkVJN1NVRkRRU3hMUVVGTExFTkJRVU1zWTBGQlRpeERRVUZ4UWp0TlFVRkRMRU5CUVVFc1JVRkJSeXhEUVVGS08wMUJRVThzUTBGQlFTeEZRVUZITEVOQlFWWTdTMEZCY2tJN1NVRkRRU3hMUVVGTExFTkJRVU1zWjBKQlFVNHNRMEZCUVR0SlFVTkJMRk5CUVVFc1IwRkJXU3hWUVVGVkxFTkJRVU1zV1VGQldDeERRVUZCTzBsQlExb3NVMEZCVXl4RFFVRkRMR2xDUVVGV0xFTkJRVFJDTEVsQlFUVkNPMGxCUTBFc1UwRkJVeXhEUVVGRExHTkJRVllzUTBGQmVVSXNTMEZCU3l4RFFVRkRMR05CUVU0c1EwRkJRU3hEUVVGNlFqdFhRVU5CTEZOQlFWTXNRMEZCUXl4UlFVRldMRU5CUVcxQ0xFdEJRVzVDTzBWQlVHVXNRMEZVYmtJN1JVRnJRa0VzWlVGQlFTeEZRVUZwUWl4VFFVRkRMRlZCUVVRN1FVRkRZaXhSUVVGQk8wbEJRVUVzVTBGQlFTeEhRVUZaTEZWQlFWVXNRMEZCUXl4WlFVRllMRU5CUVVFN1NVRkRXaXhOUVVGQkxFZEJRVk1zVlVGQlZTeERRVUZETEZkQlFWZ3NRMEZCUVN4RFFVRjNRaXhEUVVGRExFMUJRWHBDTEVkQlFXdERMRk5CUVZNc1EwRkJReXhqUVVGV0xFTkJRVUVzUTBGQk1FSXNRMEZCUXp0SlFVTjBSU3hKUVVGSExFMUJRVUVzUjBGQlV5eERRVUZhTzJGQlEwa3NWVUZCVlN4RFFVRkRMR2RDUVVGWUxFTkJRVFJDTzFGQlFVTXNRMEZCUVN4RlFVRkhMRU5CUVVvN1VVRkJUeXhEUVVGQkxFVkJRVWNzVFVGQlZqdFBRVUUxUWl4RlFVUktPMHRCUVVFc1RVRkJRVHRoUVVkSkxGVkJRVlVzUTBGQlF5eG5Ra0ZCV0N4RFFVRTBRanRSUVVGRExFTkJRVUVzUlVGQlJ5eERRVUZLTzFGQlFVOHNRMEZCUVN4RlFVRkhMRU5CUVZZN1QwRkJOVUlzUlVGSVNqczdSVUZJWVN4RFFXeENha0k3T3p0QlFUQkNTaXhOUVVGTkxFTkJRVU1zVDBGQlVDeEhRVUZwUWlKOVxuIiwidmFyIHV0aWxzO1xuXG51dGlscyA9IHtcbiAgZ2V0Q29tcG91bmRSYXRlOiBmdW5jdGlvbihhZGRSYXRlLCB0aW1lKSB7XG4gICAgcmV0dXJuIE1hdGguZXhwKDEgLyB0aW1lICogTWF0aC5sb2coYWRkUmF0ZSkpO1xuICB9LFxuICBnZXRBdmVyYWdlOiBmdW5jdGlvbih0YWJsZSkge1xuICAgIHZhciBhdmUsIGksIGxlbiwgdG90YWwsIHZhbHVlO1xuICAgIHRvdGFsID0gMDtcbiAgICBmb3IgKGkgPSAwLCBsZW4gPSB0YWJsZS5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgdmFsdWUgPSB0YWJsZVtpXTtcbiAgICAgIHRvdGFsICs9IHBhcnNlSW50KHZhbHVlKTtcbiAgICB9XG4gICAgYXZlID0gKHRvdGFsIC8gdGFibGUubGVuZ3RoKS50b0ZpeGVkKDIpO1xuICAgIHJldHVybiBhdmU7XG4gIH0sXG4gIGFkZFRhYjogZnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgKyBcIlxcdFxcdFwiO1xuICB9LFxuICBnZXRTdG9ja1RhYmxlOiBmdW5jdGlvbihkaXIpIHtcbiAgICB2YXIgc3RvY2tUYWJsZSwgc3RvY2tUYWJsZUhzMzAwLCBzdG9ja1RhYmxlWnoxMDAwO1xuICAgIHN0b2NrVGFibGVIczMwMCA9IFtcIlNaMDAwMDAxXCIsIFwiU1owMDAwMDJcIiwgXCJTWjAwMDAwOFwiLCBcIlNaMDAwMDYwXCIsIFwiU1owMDAwNjNcIiwgXCJTWjAwMDA2OVwiLCBcIlNaMDAwMTAwXCIsIFwiU1owMDAxNTdcIiwgXCJTWjAwMDE2NlwiLCBcIlNaMDAwMzMzXCIsIFwiU1owMDAzMzhcIiwgXCJTWjAwMDQwMlwiLCBcIlNaMDAwNDEzXCIsIFwiU1owMDA0MTVcIiwgXCJTWjAwMDQyM1wiLCBcIlNaMDAwNDI1XCIsIFwiU1owMDA1MDNcIiwgXCJTWjAwMDUzOFwiLCBcIlNaMDAwNTQwXCIsIFwiU1owMDA1NTlcIiwgXCJTWjAwMDU2OFwiLCBcIlNaMDAwNjIzXCIsIFwiU1owMDA2MjVcIiwgXCJTWjAwMDYyN1wiLCBcIlNaMDAwNjMwXCIsIFwiU1owMDA2NTFcIiwgXCJTWjAwMDY3MVwiLCBcIlNaMDAwNjg2XCIsIFwiU1owMDA3MDlcIiwgXCJTWjAwMDcyM1wiLCBcIlNaMDAwNzI1XCIsIFwiU1owMDA3MjhcIiwgXCJTWjAwMDczOFwiLCBcIlNaMDAwNzUwXCIsIFwiU1owMDA3NjhcIiwgXCJTWjAwMDc3NlwiLCBcIlNaMDAwNzgzXCIsIFwiU1owMDA3OTJcIiwgXCJTWjAwMDgyNlwiLCBcIlNaMDAwODM5XCIsIFwiU1owMDA4NThcIiwgXCJTWjAwMDg3NlwiLCBcIlNaMDAwODk1XCIsIFwiU1owMDA4OThcIiwgXCJTWjAwMDkzOFwiLCBcIlNaMDAwOTU5XCIsIFwiU1owMDA5NjFcIiwgXCJTWjAwMDk2M1wiLCBcIlNaMDAwOTgzXCIsIFwiU1owMDE5NzlcIiwgXCJTWjAwMjAwN1wiLCBcIlNaMDAyMDA4XCIsIFwiU1owMDIwMjRcIiwgXCJTWjAwMjAyN1wiLCBcIlNaMDAyMDQ0XCIsIFwiU1owMDIwNjVcIiwgXCJTWjAwMjA3NFwiLCBcIlNaMDAyMDgxXCIsIFwiU1owMDIxNDJcIiwgXCJTWjAwMjE0NlwiLCBcIlNaMDAyMTUzXCIsIFwiU1owMDIxNzRcIiwgXCJTWjAwMjIwMlwiLCBcIlNaMDAyMjMwXCIsIFwiU1owMDIyMzZcIiwgXCJTWjAwMjI0MVwiLCBcIlNaMDAyMjUyXCIsIFwiU1owMDIyOTJcIiwgXCJTWjAwMjI5NFwiLCBcIlNaMDAyMzA0XCIsIFwiU1owMDIzMTBcIiwgXCJTWjAwMjM1MlwiLCBcIlNaMDAyMzg1XCIsIFwiU1owMDI0MTFcIiwgXCJTWjAwMjQxNVwiLCBcIlNaMDAyNDI0XCIsIFwiU1owMDI0MjZcIiwgXCJTWjAwMjQ1MFwiLCBcIlNaMDAyNDU2XCIsIFwiU1owMDI0NjBcIiwgXCJTWjAwMjQ2NVwiLCBcIlNaMDAyNDY2XCIsIFwiU1owMDI0NjhcIiwgXCJTWjAwMjQ3MFwiLCBcIlNaMDAyNDc1XCIsIFwiU1owMDI1MDBcIiwgXCJTWjAwMjUwOFwiLCBcIlNaMDAyNTU1XCIsIFwiU1owMDI1NThcIiwgXCJTWjAwMjU3MlwiLCBcIlNaMDAyNTk0XCIsIFwiU1owMDI2MDFcIiwgXCJTWjAwMjYwMlwiLCBcIlNaMDAyNjA4XCIsIFwiU1owMDI2MjRcIiwgXCJTWjAwMjY3M1wiLCBcIlNaMDAyNzE0XCIsIFwiU1owMDI3MzZcIiwgXCJTWjAwMjczOVwiLCBcIlNaMDAyNzk3XCIsIFwiU1owMDI4MzFcIiwgXCJTWjAwMjgzOVwiLCBcIlNaMDAyODQxXCIsIFwiU1ozMDAwMDNcIiwgXCJTWjMwMDAxNVwiLCBcIlNaMzAwMDE3XCIsIFwiU1ozMDAwMjRcIiwgXCJTWjMwMDAyN1wiLCBcIlNaMzAwMDMzXCIsIFwiU1ozMDAwNTlcIiwgXCJTWjMwMDA3MFwiLCBcIlNaMzAwMDcyXCIsIFwiU1ozMDAxMjJcIiwgXCJTWjMwMDEyNFwiLCBcIlNaMzAwMTM2XCIsIFwiU1ozMDAxNDRcIiwgXCJTWjMwMDI1MVwiLCBcIlNaMzAwMzE1XCIsIFwiU0g2MDAwMDBcIiwgXCJTSDYwMDAwOFwiLCBcIlNINjAwMDA5XCIsIFwiU0g2MDAwMTBcIiwgXCJTSDYwMDAxMVwiLCBcIlNINjAwMDE1XCIsIFwiU0g2MDAwMTZcIiwgXCJTSDYwMDAxOFwiLCBcIlNINjAwMDE5XCIsIFwiU0g2MDAwMjFcIiwgXCJTSDYwMDAyM1wiLCBcIlNINjAwMDI4XCIsIFwiU0g2MDAwMjlcIiwgXCJTSDYwMDAzMFwiLCBcIlNINjAwMDMxXCIsIFwiU0g2MDAwMzZcIiwgXCJTSDYwMDAzOFwiLCBcIlNINjAwMDQ4XCIsIFwiU0g2MDAwNTBcIiwgXCJTSDYwMDA2MVwiLCBcIlNINjAwMDY2XCIsIFwiU0g2MDAwNjhcIiwgXCJTSDYwMDA3NFwiLCBcIlNINjAwMDg1XCIsIFwiU0g2MDAwODlcIiwgXCJTSDYwMDEwMFwiLCBcIlNINjAwMTA0XCIsIFwiU0g2MDAxMDlcIiwgXCJTSDYwMDExMVwiLCBcIlNINjAwMTE1XCIsIFwiU0g2MDAxMThcIiwgXCJTSDYwMDE1M1wiLCBcIlNINjAwMTU3XCIsIFwiU0g2MDAxNzBcIiwgXCJTSDYwMDE3N1wiLCBcIlNINjAwMTg4XCIsIFwiU0g2MDAxOTZcIiwgXCJTSDYwMDIwOFwiLCBcIlNINjAwMjE5XCIsIFwiU0g2MDAyMjFcIiwgXCJTSDYwMDIzM1wiLCBcIlNINjAwMjcxXCIsIFwiU0g2MDAyNzZcIiwgXCJTSDYwMDI5N1wiLCBcIlNINjAwMzA5XCIsIFwiU0g2MDAzMzJcIiwgXCJTSDYwMDM0MFwiLCBcIlNINjAwMzUyXCIsIFwiU0g2MDAzNjJcIiwgXCJTSDYwMDM2OVwiLCBcIlNINjAwMzcyXCIsIFwiU0g2MDAzNzNcIiwgXCJTSDYwMDM3NlwiLCBcIlNINjAwMzgzXCIsIFwiU0g2MDAzOTBcIiwgXCJTSDYwMDQwNlwiLCBcIlNINjAwNDE1XCIsIFwiU0g2MDA0MzZcIiwgXCJTSDYwMDQ4MlwiLCBcIlNINjAwNDg1XCIsIFwiU0g2MDA0ODlcIiwgXCJTSDYwMDQ5OFwiLCBcIlNINjAwNTE4XCIsIFwiU0g2MDA1MTlcIiwgXCJTSDYwMDUyMlwiLCBcIlNINjAwNTM1XCIsIFwiU0g2MDA1NDdcIiwgXCJTSDYwMDU0OVwiLCBcIlNINjAwNTcwXCIsIFwiU0g2MDA1ODNcIiwgXCJTSDYwMDU4NVwiLCBcIlNINjAwNTg4XCIsIFwiU0g2MDA2MDZcIiwgXCJTSDYwMDYzN1wiLCBcIlNINjAwNjQ5XCIsIFwiU0g2MDA2NjBcIiwgXCJTSDYwMDY2M1wiLCBcIlNINjAwNjc0XCIsIFwiU0g2MDA2ODJcIiwgXCJTSDYwMDY4NVwiLCBcIlNINjAwNjg4XCIsIFwiU0g2MDA2OTBcIiwgXCJTSDYwMDcwM1wiLCBcIlNINjAwNzA0XCIsIFwiU0g2MDA3MDVcIiwgXCJTSDYwMDczOVwiLCBcIlNINjAwNzQxXCIsIFwiU0g2MDA3OTVcIiwgXCJTSDYwMDgwNFwiLCBcIlNINjAwODE2XCIsIFwiU0g2MDA4MjBcIiwgXCJTSDYwMDgyN1wiLCBcIlNINjAwODM3XCIsIFwiU0g2MDA4NzFcIiwgXCJTSDYwMDg4NlwiLCBcIlNINjAwODg3XCIsIFwiU0g2MDA4OTNcIiwgXCJTSDYwMDg5NVwiLCBcIlNINjAwOTAwXCIsIFwiU0g2MDA5MDlcIiwgXCJTSDYwMDkxOVwiLCBcIlNINjAwOTI2XCIsIFwiU0g2MDA5NThcIiwgXCJTSDYwMDk1OVwiLCBcIlNINjAwOTc3XCIsIFwiU0g2MDA5OTlcIiwgXCJTSDYwMTAwNlwiLCBcIlNINjAxMDA5XCIsIFwiU0g2MDEwMTJcIiwgXCJTSDYwMTAxOFwiLCBcIlNINjAxMDIxXCIsIFwiU0g2MDEwODhcIiwgXCJTSDYwMTA5OVwiLCBcIlNINjAxMTExXCIsIFwiU0g2MDExMTdcIiwgXCJTSDYwMTExOFwiLCBcIlNINjAxMTU1XCIsIFwiU0g2MDExNjNcIiwgXCJTSDYwMTE2NlwiLCBcIlNINjAxMTY5XCIsIFwiU0g2MDExODZcIiwgXCJTSDYwMTE5OFwiLCBcIlNINjAxMjExXCIsIFwiU0g2MDEyMTJcIiwgXCJTSDYwMTIxNlwiLCBcIlNINjAxMjI1XCIsIFwiU0g2MDEyMjhcIiwgXCJTSDYwMTIyOVwiLCBcIlNINjAxMjg4XCIsIFwiU0g2MDEzMThcIiwgXCJTSDYwMTMyOFwiLCBcIlNINjAxMzMzXCIsIFwiU0g2MDEzMzZcIiwgXCJTSDYwMTM3NVwiLCBcIlNINjAxMzc3XCIsIFwiU0g2MDEzOTBcIiwgXCJTSDYwMTM5OFwiLCBcIlNINjAxNTU1XCIsIFwiU0g2MDE2MDBcIiwgXCJTSDYwMTYwMVwiLCBcIlNINjAxNjA3XCIsIFwiU0g2MDE2MDhcIiwgXCJTSDYwMTYxMVwiLCBcIlNINjAxNjE4XCIsIFwiU0g2MDE2MjhcIiwgXCJTSDYwMTYzM1wiLCBcIlNINjAxNjY4XCIsIFwiU0g2MDE2NjlcIiwgXCJTSDYwMTY4OFwiLCBcIlNINjAxNzE4XCIsIFwiU0g2MDE3MjdcIiwgXCJTSDYwMTc2NlwiLCBcIlNINjAxNzg4XCIsIFwiU0g2MDE4MDBcIiwgXCJTSDYwMTgxOFwiLCBcIlNINjAxODU3XCIsIFwiU0g2MDE4NjZcIiwgXCJTSDYwMTg3MlwiLCBcIlNINjAxODc3XCIsIFwiU0g2MDE4NzhcIiwgXCJTSDYwMTg4MVwiLCBcIlNINjAxODg4XCIsIFwiU0g2MDE4OThcIiwgXCJTSDYwMTg5OVwiLCBcIlNINjAxOTAxXCIsIFwiU0g2MDE5MTlcIiwgXCJTSDYwMTkzM1wiLCBcIlNINjAxOTM5XCIsIFwiU0g2MDE5NThcIiwgXCJTSDYwMTk2NlwiLCBcIlNINjAxOTg1XCIsIFwiU0g2MDE5ODhcIiwgXCJTSDYwMTk4OVwiLCBcIlNINjAxOTkxXCIsIFwiU0g2MDE5OTJcIiwgXCJTSDYwMTk5N1wiLCBcIlNINjAxOTk4XCIsIFwiU0g2MDMxNjBcIiwgXCJTSDYwMzc5OVwiLCBcIlNINjAzODMzXCIsIFwiU0g2MDM4NThcIiwgXCJTSDYwMzk5M1wiXTtcbiAgICBzdG9ja1RhYmxlWnoxMDAwID0gW1wiU1owMDAwMTBcIiwgXCJTWjAwMDAxMVwiLCBcIlNaMDAwMDE2XCIsIFwiU1owMDAwMThcIiwgXCJTWjAwMDAyMlwiLCBcIlNaMDAwMDI5XCIsIFwiU1owMDAwMzRcIiwgXCJTWjAwMDAzNVwiLCBcIlNaMDAwMDM2XCIsIFwiU1owMDAwMzhcIiwgXCJTWjAwMDA0MFwiLCBcIlNaMDAwMDQyXCIsIFwiU1owMDAwNDNcIiwgXCJTWjAwMDA0OFwiLCBcIlNaMDAwMDU1XCIsIFwiU1owMDAwNThcIiwgXCJTWjAwMDA1OVwiLCBcIlNaMDAwMDY1XCIsIFwiU1owMDAwNzBcIiwgXCJTWjAwMDA4OFwiLCBcIlNaMDAwMTUwXCIsIFwiU1owMDAxNTFcIiwgXCJTWjAwMDE1OVwiLCBcIlNaMDAwNDA0XCIsIFwiU1owMDA0MDdcIiwgXCJTWjAwMDQwOVwiLCBcIlNaMDAwNDE2XCIsIFwiU1owMDA0MjlcIiwgXCJTWjAwMDQ5OFwiLCBcIlNaMDAwNTA2XCIsIFwiU1owMDA1MTRcIiwgXCJTWjAwMDUxNlwiLCBcIlNaMDAwNTE4XCIsIFwiU1owMDA1MjBcIiwgXCJTWjAwMDUyNVwiLCBcIlNaMDAwNTMyXCIsIFwiU1owMDA1MzNcIiwgXCJTWjAwMDUzN1wiLCBcIlNaMDAwNTQ0XCIsIFwiU1owMDA1NDVcIiwgXCJTWjAwMDU0NlwiLCBcIlNaMDAwNTQ4XCIsIFwiU1owMDA1NTBcIiwgXCJTWjAwMDU1MVwiLCBcIlNaMDAwNTUzXCIsIFwiU1owMDA1NTRcIiwgXCJTWjAwMDU1OFwiLCBcIlNaMDAwNTYwXCIsIFwiU1owMDA1NjFcIiwgXCJTWjAwMDU3MVwiLCBcIlNaMDAwNTczXCIsIFwiU1owMDA1NzZcIiwgXCJTWjAwMDU4MlwiLCBcIlNaMDAwNTg0XCIsIFwiU1owMDA1OTFcIiwgXCJTWjAwMDYwMVwiLCBcIlNaMDAwNjAzXCIsIFwiU1owMDA2MDdcIiwgXCJTWjAwMDYxNVwiLCBcIlNaMDAwNjI2XCIsIFwiU1owMDA2MzdcIiwgXCJTWjAwMDYzOVwiLCBcIlNaMDAwNjUwXCIsIFwiU1owMDA2NTdcIiwgXCJTWjAwMDY2NVwiLCBcIlNaMDAwNjY2XCIsIFwiU1owMDA2NzJcIiwgXCJTWjAwMDY3M1wiLCBcIlNaMDAwNjc2XCIsIFwiU1owMDA2ODNcIiwgXCJTWjAwMDY4N1wiLCBcIlNaMDAwNjg4XCIsIFwiU1owMDA3MDBcIiwgXCJTWjAwMDcwMVwiLCBcIlNaMDAwNzExXCIsIFwiU1owMDA3MTdcIiwgXCJTWjAwMDcxOVwiLCBcIlNaMDAwNzIyXCIsIFwiU1owMDA3MzFcIiwgXCJTWjAwMDczM1wiLCBcIlNaMDAwNzM1XCIsIFwiU1owMDA3MzlcIiwgXCJTWjAwMDc1MVwiLCBcIlNaMDAwNzUyXCIsIFwiU1owMDA3NTdcIiwgXCJTWjAwMDc2MFwiLCBcIlNaMDAwNzY3XCIsIFwiU1owMDA3ODJcIiwgXCJTWjAwMDc4OVwiLCBcIlNaMDAwNzk1XCIsIFwiU1owMDA3OTZcIiwgXCJTWjAwMDc5N1wiLCBcIlNaMDAwODAwXCIsIFwiU1owMDA4MDFcIiwgXCJTWjAwMDgwMlwiLCBcIlNaMDAwODExXCIsIFwiU1owMDA4MThcIiwgXCJTWjAwMDgxOVwiLCBcIlNaMDAwODIwXCIsIFwiU1owMDA4MjFcIiwgXCJTWjAwMDgyOFwiLCBcIlNaMDAwODMxXCIsIFwiU1owMDA4MzZcIiwgXCJTWjAwMDgzN1wiLCBcIlNaMDAwODM4XCIsIFwiU1owMDA4NTFcIiwgXCJTWjAwMDg2M1wiLCBcIlNaMDAwODY5XCIsIFwiU1owMDA4NzVcIiwgXCJTWjAwMDg4MVwiLCBcIlNaMDAwODgyXCIsIFwiU1owMDA4ODVcIiwgXCJTWjAwMDg4OVwiLCBcIlNaMDAwODkyXCIsIFwiU1owMDA4OTNcIiwgXCJTWjAwMDg5OVwiLCBcIlNaMDAwOTAxXCIsIFwiU1owMDA5MDJcIiwgXCJTWjAwMDkwNVwiLCBcIlNaMDAwOTEwXCIsIFwiU1owMDA5MTVcIiwgXCJTWjAwMDkxN1wiLCBcIlNaMDAwOTE4XCIsIFwiU1owMDA5MjBcIiwgXCJTWjAwMDkyMVwiLCBcIlNaMDAwOTI1XCIsIFwiU1owMDA5MjdcIiwgXCJTWjAwMDkyOFwiLCBcIlNaMDAwOTMzXCIsIFwiU1owMDA5MzZcIiwgXCJTWjAwMDk1MVwiLCBcIlNaMDAwOTUyXCIsIFwiU1owMDA5NTdcIiwgXCJTWjAwMDk1OFwiLCBcIlNaMDAwOTY1XCIsIFwiU1owMDA5NjdcIiwgXCJTWjAwMDk2OFwiLCBcIlNaMDAwOTcxXCIsIFwiU1owMDA5NzNcIiwgXCJTWjAwMDk3NlwiLCBcIlNaMDAwOTgwXCIsIFwiU1owMDA5ODlcIiwgXCJTWjAwMDk5NlwiLCBcIlNaMDAxODk2XCIsIFwiU1owMDIwMDlcIiwgXCJTWjAwMjAxNlwiLCBcIlNaMDAyMDE3XCIsIFwiU1owMDIwMjNcIiwgXCJTWjAwMjAyNVwiLCBcIlNaMDAyMDMxXCIsIFwiU1owMDIwMzNcIiwgXCJTWjAwMjAzNVwiLCBcIlNaMDAyMDM2XCIsIFwiU1owMDIwNDJcIiwgXCJTWjAwMjA0M1wiLCBcIlNaMDAyMDQ3XCIsIFwiU1owMDIwNTNcIiwgXCJTWjAwMjA1NVwiLCBcIlNaMDAyMDU5XCIsIFwiU1owMDIwNjBcIiwgXCJTWjAwMjA2N1wiLCBcIlNaMDAyMDcxXCIsIFwiU1owMDIwNzlcIiwgXCJTWjAwMjA4MFwiLCBcIlNaMDAyMDg2XCIsIFwiU1owMDIwODlcIiwgXCJTWjAwMjA5MVwiLCBcIlNaMDAyMDk0XCIsIFwiU1owMDIwOTVcIiwgXCJTWjAwMjA5N1wiLCBcIlNaMDAyMDk5XCIsIFwiU1owMDIxMDBcIiwgXCJTWjAwMjEwMlwiLCBcIlNaMDAyMTA0XCIsIFwiU1owMDIxMDhcIiwgXCJTWjAwMjExMFwiLCBcIlNaMDAyMTEzXCIsIFwiU1owMDIxMTRcIiwgXCJTWjAwMjExNVwiLCBcIlNaMDAyMTE3XCIsIFwiU1owMDIxMjFcIiwgXCJTWjAwMjEyNFwiLCBcIlNaMDAyMTI2XCIsIFwiU1owMDIxMzBcIiwgXCJTWjAwMjEzNVwiLCBcIlNaMDAyMTM3XCIsIFwiU1owMDIxMzhcIiwgXCJTWjAwMjEzOVwiLCBcIlNaMDAyMTQxXCIsIFwiU1owMDIxNDVcIiwgXCJTWjAwMjE0OFwiLCBcIlNaMDAyMTUxXCIsIFwiU1owMDIxNTRcIiwgXCJTWjAwMjE1NlwiLCBcIlNaMDAyMTU3XCIsIFwiU1owMDIxNjZcIiwgXCJTWjAwMjE2N1wiLCBcIlNaMDAyMTcxXCIsIFwiU1owMDIxNzVcIiwgXCJTWjAwMjE3N1wiLCBcIlNaMDAyMTc4XCIsIFwiU1owMDIxODJcIiwgXCJTWjAwMjE4NVwiLCBcIlNaMDAyMTkyXCIsIFwiU1owMDIxOTZcIiwgXCJTWjAwMjE5N1wiLCBcIlNaMDAyMTk4XCIsIFwiU1owMDIyMDNcIiwgXCJTWjAwMjIwNFwiLCBcIlNaMDAyMjA2XCIsIFwiU1owMDIyMTBcIiwgXCJTWjAwMjIxMlwiLCBcIlNaMDAyMjE1XCIsIFwiU1owMDIyMThcIiwgXCJTWjAwMjIyMlwiLCBcIlNaMDAyMjI0XCIsIFwiU1owMDIyMjZcIiwgXCJTWjAwMjIyOVwiLCBcIlNaMDAyMjMxXCIsIFwiU1owMDIyMzJcIiwgXCJTWjAwMjIzNFwiLCBcIlNaMDAyMjM1XCIsIFwiU1owMDIyMzdcIiwgXCJTWjAwMjIzOVwiLCBcIlNaMDAyMjQ1XCIsIFwiU1owMDIyNDZcIiwgXCJTWjAwMjI0N1wiLCBcIlNaMDAyMjUzXCIsIFwiU1owMDIyNTVcIiwgXCJTWjAwMjI1NlwiLCBcIlNaMDAyMjU5XCIsIFwiU1owMDIyNjBcIiwgXCJTWjAwMjI2MlwiLCBcIlNaMDAyMjYzXCIsIFwiU1owMDIyNzRcIiwgXCJTWjAwMjI3OVwiLCBcIlNaMDAyMjgzXCIsIFwiU1owMDIyODRcIiwgXCJTWjAwMjI4N1wiLCBcIlNaMDAyMjg4XCIsIFwiU1owMDIyOTZcIiwgXCJTWjAwMjI5OFwiLCBcIlNaMDAyMzAxXCIsIFwiU1owMDIzMDJcIiwgXCJTWjAwMjMwM1wiLCBcIlNaMDAyMzA1XCIsIFwiU1owMDIzMDdcIiwgXCJTWjAwMjMxM1wiLCBcIlNaMDAyMzE0XCIsIFwiU1owMDIzMThcIiwgXCJTWjAwMjMyMFwiLCBcIlNaMDAyMzIxXCIsIFwiU1owMDIzMjJcIiwgXCJTWjAwMjMyM1wiLCBcIlNaMDAyMzI2XCIsIFwiU1owMDIzMjlcIiwgXCJTWjAwMjMzMVwiLCBcIlNaMDAyMzM1XCIsIFwiU1owMDIzMzlcIiwgXCJTWjAwMjM0MVwiLCBcIlNaMDAyMzQzXCIsIFwiU1owMDIzNDZcIiwgXCJTWjAwMjM0OVwiLCBcIlNaMDAyMzUxXCIsIFwiU1owMDIzNTVcIiwgXCJTWjAwMjM2MlwiLCBcIlNaMDAyMzYzXCIsIFwiU1owMDIzNjRcIiwgXCJTWjAwMjM2N1wiLCBcIlNaMDAyMzcyXCIsIFwiU1owMDIzNzZcIiwgXCJTWjAwMjM3OFwiLCBcIlNaMDAyMzgzXCIsIFwiU1owMDIzODdcIiwgXCJTWjAwMjM4OFwiLCBcIlNaMDAyMzg5XCIsIFwiU1owMDIzOTNcIiwgXCJTWjAwMjQwMVwiLCBcIlNaMDAyNDAyXCIsIFwiU1owMDI0MDZcIiwgXCJTWjAwMjQxM1wiLCBcIlNaMDAyNDE4XCIsIFwiU1owMDI0MTlcIiwgXCJTWjAwMjQyMVwiLCBcIlNaMDAyNDI1XCIsIFwiU1owMDI0MjdcIiwgXCJTWjAwMjQyOVwiLCBcIlNaMDAyNDMwXCIsIFwiU1owMDI0MzJcIiwgXCJTWjAwMjQzM1wiLCBcIlNaMDAyNDM2XCIsIFwiU1owMDI0NDNcIiwgXCJTWjAwMjQ0NVwiLCBcIlNaMDAyNDQ2XCIsIFwiU1owMDI0NDdcIiwgXCJTWjAwMjQ0OFwiLCBcIlNaMDAyNDQ5XCIsIFwiU1owMDI0NTFcIiwgXCJTWjAwMjQ1MlwiLCBcIlNaMDAyNDUzXCIsIFwiU1owMDI0NTdcIiwgXCJTWjAwMjQ1OFwiLCBcIlNaMDAyNDYxXCIsIFwiU1owMDI0NjJcIiwgXCJTWjAwMjQ2NFwiLCBcIlNaMDAyNDY3XCIsIFwiU1owMDI0NzRcIiwgXCJTWjAwMjQ3NlwiLCBcIlNaMDAyNDgxXCIsIFwiU1owMDI0ODNcIiwgXCJTWjAwMjQ4NFwiLCBcIlNaMDAyNDg4XCIsIFwiU1owMDI0OTRcIiwgXCJTWjAwMjQ5NlwiLCBcIlNaMDAyNDk3XCIsIFwiU1owMDI0OTlcIiwgXCJTWjAwMjUwMVwiLCBcIlNaMDAyNTAyXCIsIFwiU1owMDI1MDdcIiwgXCJTWjAwMjUwOVwiLCBcIlNaMDAyNTEwXCIsIFwiU1owMDI1MTFcIiwgXCJTWjAwMjUxNVwiLCBcIlNaMDAyNTE2XCIsIFwiU1owMDI1MThcIiwgXCJTWjAwMjUxOVwiLCBcIlNaMDAyNTIxXCIsIFwiU1owMDI1MjJcIiwgXCJTWjAwMjUyNFwiLCBcIlNaMDAyNTMxXCIsIFwiU1owMDI1MzRcIiwgXCJTWjAwMjUzNVwiLCBcIlNaMDAyNTM3XCIsIFwiU1owMDI1MzhcIiwgXCJTWjAwMjUzOVwiLCBcIlNaMDAyNTQyXCIsIFwiU1owMDI1NDNcIiwgXCJTWjAwMjU0NVwiLCBcIlNaMDAyNTQ3XCIsIFwiU1owMDI1NTBcIiwgXCJTWjAwMjU1NFwiLCBcIlNaMDAyNTU2XCIsIFwiU1owMDI1NTlcIiwgXCJTWjAwMjU2MlwiLCBcIlNaMDAyNTY0XCIsIFwiU1owMDI1NjdcIiwgXCJTWjAwMjU3NFwiLCBcIlNaMDAyNTc1XCIsIFwiU1owMDI1NzdcIiwgXCJTWjAwMjU3OVwiLCBcIlNaMDAyNTgxXCIsIFwiU1owMDI1ODJcIiwgXCJTWjAwMjU4NFwiLCBcIlNaMDAyNTg1XCIsIFwiU1owMDI1ODZcIiwgXCJTWjAwMjU5MFwiLCBcIlNaMDAyNTk2XCIsIFwiU1owMDI1OTdcIiwgXCJTWjAwMjYwMFwiLCBcIlNaMDAyNjA0XCIsIFwiU1owMDI2MDVcIiwgXCJTWjAwMjYwNlwiLCBcIlNaMDAyNjA5XCIsIFwiU1owMDI2MTBcIiwgXCJTWjAwMjYxMVwiLCBcIlNaMDAyNjE0XCIsIFwiU1owMDI2MTZcIiwgXCJTWjAwMjYxN1wiLCBcIlNaMDAyNjE4XCIsIFwiU1owMDI2MTlcIiwgXCJTWjAwMjYyMlwiLCBcIlNaMDAyNjI1XCIsIFwiU1owMDI2MjZcIiwgXCJTWjAwMjYzMFwiLCBcIlNaMDAyNjMxXCIsIFwiU1owMDI2MzZcIiwgXCJTWjAwMjYzOFwiLCBcIlNaMDAyNjQzXCIsIFwiU1owMDI2NDdcIiwgXCJTWjAwMjY0OFwiLCBcIlNaMDAyNjQ5XCIsIFwiU1owMDI2NTBcIiwgXCJTWjAwMjY1MVwiLCBcIlNaMDAyNjU1XCIsIFwiU1owMDI2NTZcIiwgXCJTWjAwMjY1OFwiLCBcIlNaMDAyNjYwXCIsIFwiU1owMDI2NjJcIiwgXCJTWjAwMjY2NFwiLCBcIlNaMDAyNjY3XCIsIFwiU1owMDI2NjhcIiwgXCJTWjAwMjY3NVwiLCBcIlNaMDAyNjc3XCIsIFwiU1owMDI2NzhcIiwgXCJTWjAwMjY4MFwiLCBcIlNaMDAyNjg0XCIsIFwiU1owMDI2OTVcIiwgXCJTWjAwMjY5N1wiLCBcIlNaMDAyNzAzXCIsIFwiU1owMDI3MTFcIiwgXCJTWjAwMjcxMlwiLCBcIlNaMDAyNzE2XCIsIFwiU1owMDI3MTdcIiwgXCJTWjAwMjcyMVwiLCBcIlNaMDAyNzI0XCIsIFwiU1owMDI3MjZcIiwgXCJTWjAwMjczM1wiLCBcIlNaMDAyNzM3XCIsIFwiU1owMDI3NDZcIiwgXCJTWjAwMjc0N1wiLCBcIlNaMDAyNzUxXCIsIFwiU1owMDI3NTJcIiwgXCJTWjAwMjc1NlwiLCBcIlNaMDAyNzU5XCIsIFwiU1owMDI3NjJcIiwgXCJTWjAwMjc2NlwiLCBcIlNaMDAyNzY5XCIsIFwiU1owMDI3NzJcIiwgXCJTWjAwMjc4MVwiLCBcIlNaMDAyNzgyXCIsIFwiU1owMDI3ODNcIiwgXCJTWjAwMjc4NlwiLCBcIlNaMDAyNzg4XCIsIFwiU1owMDI3OTBcIiwgXCJTWjAwMjc5MVwiLCBcIlNaMDAyNzkyXCIsIFwiU1owMDI4MDFcIiwgXCJTWjAwMjgwMlwiLCBcIlNaMDAyODEyXCIsIFwiU1owMDI4MjFcIiwgXCJTWjAwMjgyMlwiLCBcIlNaMDAyODUwXCIsIFwiU1owMDI4NTJcIiwgXCJTWjAwMjg1OVwiLCBcIlNaMDAyODY3XCIsIFwiU1owMDI4NzJcIiwgXCJTWjMwMDAwNVwiLCBcIlNaMzAwMDA2XCIsIFwiU1ozMDAwMDdcIiwgXCJTWjMwMDAwOFwiLCBcIlNaMzAwMDA5XCIsIFwiU1ozMDAwMTFcIiwgXCJTWjMwMDAxMlwiLCBcIlNaMzAwMDE0XCIsIFwiU1ozMDAwMTZcIiwgXCJTWjMwMDAyMFwiLCBcIlNaMzAwMDIxXCIsIFwiU1ozMDAwMjhcIiwgXCJTWjMwMDAzMFwiLCBcIlNaMzAwMDMxXCIsIFwiU1ozMDAwMzRcIiwgXCJTWjMwMDAzNlwiLCBcIlNaMzAwMDM3XCIsIFwiU1ozMDAwMzhcIiwgXCJTWjMwMDA0NFwiLCBcIlNaMzAwMDQ1XCIsIFwiU1ozMDAwNDdcIiwgXCJTWjMwMDA0OFwiLCBcIlNaMzAwMDUwXCIsIFwiU1ozMDAwNTFcIiwgXCJTWjMwMDA1MlwiLCBcIlNaMzAwMDUzXCIsIFwiU1ozMDAwNTRcIiwgXCJTWjMwMDA1NlwiLCBcIlNaMzAwMDYzXCIsIFwiU1ozMDAwNjRcIiwgXCJTWjMwMDA2NVwiLCBcIlNaMzAwMDY2XCIsIFwiU1ozMDAwNjhcIiwgXCJTWjMwMDA3MVwiLCBcIlNaMzAwMDczXCIsIFwiU1ozMDAwNzRcIiwgXCJTWjMwMDA3NVwiLCBcIlNaMzAwMDc2XCIsIFwiU1ozMDAwNzdcIiwgXCJTWjMwMDA3OFwiLCBcIlNaMzAwMDc5XCIsIFwiU1ozMDAwODNcIiwgXCJTWjMwMDA4NFwiLCBcIlNaMzAwMDg1XCIsIFwiU1ozMDAwODZcIiwgXCJTWjMwMDA5MFwiLCBcIlNaMzAwMDk2XCIsIFwiU1ozMDAwOTdcIiwgXCJTWjMwMDA5OFwiLCBcIlNaMzAwMTAwXCIsIFwiU1ozMDAxMDFcIiwgXCJTWjMwMDEwMlwiLCBcIlNaMzAwMTA5XCIsIFwiU1ozMDAxMTBcIiwgXCJTWjMwMDExNFwiLCBcIlNaMzAwMTE4XCIsIFwiU1ozMDAxMjhcIiwgXCJTWjMwMDEzMFwiLCBcIlNaMzAwMTMxXCIsIFwiU1ozMDAxMzVcIiwgXCJTWjMwMDEzN1wiLCBcIlNaMzAwMTQwXCIsIFwiU1ozMDAxNDJcIiwgXCJTWjMwMDE0NVwiLCBcIlNaMzAwMTQ4XCIsIFwiU1ozMDAxNDlcIiwgXCJTWjMwMDE1MlwiLCBcIlNaMzAwMTU3XCIsIFwiU1ozMDAxNjBcIiwgXCJTWjMwMDE2NVwiLCBcIlNaMzAwMTY4XCIsIFwiU1ozMDAxNzBcIiwgXCJTWjMwMDE3MVwiLCBcIlNaMzAwMTcyXCIsIFwiU1ozMDAxNzNcIiwgXCJTWjMwMDE3NVwiLCBcIlNaMzAwMTc3XCIsIFwiU1ozMDAxNzhcIiwgXCJTWjMwMDE4MFwiLCBcIlNaMzAwMTgzXCIsIFwiU1ozMDAxODRcIiwgXCJTWjMwMDE4NVwiLCBcIlNaMzAwMTg4XCIsIFwiU1ozMDAxOTFcIiwgXCJTWjMwMDE5NFwiLCBcIlNaMzAwMTk4XCIsIFwiU1ozMDAyMDNcIiwgXCJTWjMwMDIwNVwiLCBcIlNaMzAwMjA3XCIsIFwiU1ozMDAyMDhcIiwgXCJTWjMwMDIwOVwiLCBcIlNaMzAwMjEyXCIsIFwiU1ozMDAyMTNcIiwgXCJTWjMwMDIxNVwiLCBcIlNaMzAwMjE2XCIsIFwiU1ozMDAyMTlcIiwgXCJTWjMwMDIyMVwiLCBcIlNaMzAwMjIyXCIsIFwiU1ozMDAyMjNcIiwgXCJTWjMwMDIyNFwiLCBcIlNaMzAwMjI2XCIsIFwiU1ozMDAyMjdcIiwgXCJTWjMwMDIyOFwiLCBcIlNaMzAwMjI5XCIsIFwiU1ozMDAyMzFcIiwgXCJTWjMwMDIzMlwiLCBcIlNaMzAwMjM2XCIsIFwiU1ozMDAyMzdcIiwgXCJTWjMwMDIzOFwiLCBcIlNaMzAwMjQyXCIsIFwiU1ozMDAyNDVcIiwgXCJTWjMwMDI0OFwiLCBcIlNaMzAwMjUyXCIsIFwiU1ozMDAyNTVcIiwgXCJTWjMwMDI1NlwiLCBcIlNaMzAwMjYyXCIsIFwiU1ozMDAyNjNcIiwgXCJTWjMwMDI2OVwiLCBcIlNaMzAwMjcxXCIsIFwiU1ozMDAyNzZcIiwgXCJTWjMwMDI3OFwiLCBcIlNaMzAwMjg0XCIsIFwiU1ozMDAyODVcIiwgXCJTWjMwMDI4OFwiLCBcIlNaMzAwMjkyXCIsIFwiU1ozMDAyOTRcIiwgXCJTWjMwMDI5NVwiLCBcIlNaMzAwMjk5XCIsIFwiU1ozMDAzMDBcIiwgXCJTWjMwMDMwMlwiLCBcIlNaMzAwMzAzXCIsIFwiU1ozMDAzMDRcIiwgXCJTWjMwMDMwN1wiLCBcIlNaMzAwMzA4XCIsIFwiU1ozMDAzMDlcIiwgXCJTWjMwMDMxMFwiLCBcIlNaMzAwMzExXCIsIFwiU1ozMDAzMTJcIiwgXCJTWjMwMDMxNlwiLCBcIlNaMzAwMzE3XCIsIFwiU1ozMDAzMjJcIiwgXCJTWjMwMDMyM1wiLCBcIlNaMzAwMzI4XCIsIFwiU1ozMDAzMzJcIiwgXCJTWjMwMDMzM1wiLCBcIlNaMzAwMzM2XCIsIFwiU1ozMDAzMzlcIiwgXCJTWjMwMDM0M1wiLCBcIlNaMzAwMzQ3XCIsIFwiU1ozMDAzNDhcIiwgXCJTWjMwMDM0OVwiLCBcIlNaMzAwMzUwXCIsIFwiU1ozMDAzNTJcIiwgXCJTWjMwMDM1M1wiLCBcIlNaMzAwMzU1XCIsIFwiU1ozMDAzNTZcIiwgXCJTWjMwMDM1OVwiLCBcIlNaMzAwMzYyXCIsIFwiU1ozMDAzNjNcIiwgXCJTWjMwMDM2NFwiLCBcIlNaMzAwMzY2XCIsIFwiU1ozMDAzNjdcIiwgXCJTWjMwMDM2OFwiLCBcIlNaMzAwMzY5XCIsIFwiU1ozMDAzNzNcIiwgXCJTWjMwMDM3N1wiLCBcIlNaMzAwMzc4XCIsIFwiU1ozMDAzNzlcIiwgXCJTWjMwMDM4MFwiLCBcIlNaMzAwMzgxXCIsIFwiU1ozMDAzODZcIiwgXCJTWjMwMDM4OFwiLCBcIlNaMzAwMzkyXCIsIFwiU1ozMDA0MDNcIiwgXCJTWjMwMDQwNlwiLCBcIlNaMzAwNDA5XCIsIFwiU1ozMDA0MTBcIiwgXCJTWjMwMDQxM1wiLCBcIlNaMzAwNDE4XCIsIFwiU1ozMDA0MTlcIiwgXCJTWjMwMDQyNFwiLCBcIlNaMzAwNDI2XCIsIFwiU1ozMDA0MjlcIiwgXCJTWjMwMDQzMVwiLCBcIlNaMzAwNDMyXCIsIFwiU1ozMDA0MzhcIiwgXCJTWjMwMDQzOVwiLCBcIlNaMzAwNDQwXCIsIFwiU1ozMDA0NDFcIiwgXCJTWjMwMDQ0M1wiLCBcIlNaMzAwNDQ3XCIsIFwiU1ozMDA0NDlcIiwgXCJTWjMwMDQ1MFwiLCBcIlNaMzAwNDU2XCIsIFwiU1ozMDA0NTdcIiwgXCJTWjMwMDQ1OFwiLCBcIlNaMzAwNDU5XCIsIFwiU1ozMDA0NjNcIiwgXCJTWjMwMDQ2NVwiLCBcIlNaMzAwNDY3XCIsIFwiU1ozMDA0NjhcIiwgXCJTWjMwMDQ3MVwiLCBcIlNaMzAwNDc0XCIsIFwiU1ozMDA0NzZcIiwgXCJTWjMwMDQ4MlwiLCBcIlNaMzAwNDg0XCIsIFwiU1ozMDA0ODVcIiwgXCJTWjMwMDQ5NFwiLCBcIlNaMzAwNDk1XCIsIFwiU1ozMDA0OTZcIiwgXCJTWjMwMDQ5N1wiLCBcIlNaMzAwNTAyXCIsIFwiU1ozMDA1MDZcIiwgXCJTWjMwMDUwN1wiLCBcIlNaMzAwNTA4XCIsIFwiU1ozMDA1MTFcIiwgXCJTWjMwMDUxMlwiLCBcIlNaMzAwNTE2XCIsIFwiU1ozMDA1MThcIiwgXCJTWjMwMDUyMFwiLCBcIlNaMzAwNTIyXCIsIFwiU1ozMDA1MjNcIiwgXCJTWjMwMDUyN1wiLCBcIlNaMzAwNTI4XCIsIFwiU1ozMDA1MjlcIiwgXCJTWjMwMDUzMVwiLCBcIlNaMzAwNTMzXCIsIFwiU1ozMDA1NThcIiwgXCJTWjMwMDU2OFwiLCBcIlNaMzAwNjAxXCIsIFwiU1ozMDA2MTNcIiwgXCJTWjMwMDYxNlwiLCBcIlNaMzAwNjE4XCIsIFwiU1ozMDA2MjVcIiwgXCJTWjMwMDYyOFwiLCBcIlNaMzAwNjMzXCIsIFwiU1ozMDA2NjBcIiwgXCJTWjMwMDY3OVwiLCBcIlNINjAwMDA3XCIsIFwiU0g2MDAwMTJcIiwgXCJTSDYwMDAyMFwiLCBcIlNINjAwMDMzXCIsIFwiU0g2MDAwMzVcIiwgXCJTSDYwMDA1NFwiLCBcIlNINjAwMDU3XCIsIFwiU0g2MDAwNjNcIiwgXCJTSDYwMDA2N1wiLCBcIlNINjAwMDcyXCIsIFwiU0g2MDAwNzVcIiwgXCJTSDYwMDA3NlwiLCBcIlNINjAwMDgyXCIsIFwiU0g2MDAwODRcIiwgXCJTSDYwMDA5MFwiLCBcIlNINjAwMDkzXCIsIFwiU0g2MDAwOTZcIiwgXCJTSDYwMDEwMVwiLCBcIlNINjAwMTAzXCIsIFwiU0g2MDAxMDVcIiwgXCJTSDYwMDEwNlwiLCBcIlNINjAwMTA3XCIsIFwiU0g2MDAxMTBcIiwgXCJTSDYwMDExM1wiLCBcIlNINjAwMTE0XCIsIFwiU0g2MDAxMTZcIiwgXCJTSDYwMDExOVwiLCBcIlNINjAwMTIzXCIsIFwiU0g2MDAxMjlcIiwgXCJTSDYwMDEzMFwiLCBcIlNINjAwMTMyXCIsIFwiU0g2MDAxMzNcIiwgXCJTSDYwMDEzNVwiLCBcIlNINjAwMTM2XCIsIFwiU0g2MDAxNjJcIiwgXCJTSDYwMDE2NVwiLCBcIlNINjAwMTcyXCIsIFwiU0g2MDAxNzNcIiwgXCJTSDYwMDE3NVwiLCBcIlNINjAwMTg1XCIsIFwiU0g2MDAxOTBcIiwgXCJTSDYwMDE5MlwiLCBcIlNINjAwMTkzXCIsIFwiU0g2MDAxOTdcIiwgXCJTSDYwMDIwNlwiLCBcIlNINjAwMjA3XCIsIFwiU0g2MDAyMDlcIiwgXCJTSDYwMDIxMFwiLCBcIlNINjAwMjE3XCIsIFwiU0g2MDAyMjZcIiwgXCJTSDYwMDIyN1wiLCBcIlNINjAwMjMwXCIsIFwiU0g2MDAyMzFcIiwgXCJTSDYwMDIzN1wiLCBcIlNINjAwMjM5XCIsIFwiU0g2MDAyNDZcIiwgXCJTSDYwMDI1MlwiLCBcIlNINjAwMjU1XCIsIFwiU0g2MDAyNThcIiwgXCJTSDYwMDI2MVwiLCBcIlNINjAwMjY5XCIsIFwiU0g2MDAyNzNcIiwgXCJTSDYwMDI3OFwiLCBcIlNINjAwMjc5XCIsIFwiU0g2MDAyODNcIiwgXCJTSDYwMDI4NVwiLCBcIlNINjAwMjg4XCIsIFwiU0g2MDAyOTBcIiwgXCJTSDYwMDMwM1wiLCBcIlNINjAwMzEwXCIsIFwiU0g2MDAzMTNcIiwgXCJTSDYwMDMxOFwiLCBcIlNINjAwMzIwXCIsIFwiU0g2MDAzMjFcIiwgXCJTSDYwMDMyMlwiLCBcIlNINjAwMzIzXCIsIFwiU0g2MDAzMjZcIiwgXCJTSDYwMDMzMFwiLCBcIlNINjAwMzMxXCIsIFwiU0g2MDAzMzZcIiwgXCJTSDYwMDMzN1wiLCBcIlNINjAwMzQzXCIsIFwiU0g2MDAzNTRcIiwgXCJTSDYwMDM1OVwiLCBcIlNINjAwMzYwXCIsIFwiU0g2MDAzNjNcIiwgXCJTSDYwMDM4MVwiLCBcIlNINjAwMzgyXCIsIFwiU0g2MDAzODZcIiwgXCJTSDYwMDM5MVwiLCBcIlNINjAwMzk5XCIsIFwiU0g2MDA0MDBcIiwgXCJTSDYwMDQwNVwiLCBcIlNINjAwNDIwXCIsIFwiU0g2MDA0NDZcIiwgXCJTSDYwMDQ0OVwiLCBcIlNINjAwNDU2XCIsIFwiU0g2MDA0NTlcIiwgXCJTSDYwMDQ2N1wiLCBcIlNINjAwNDcwXCIsIFwiU0g2MDA0NzdcIiwgXCJTSDYwMDQ4MFwiLCBcIlNINjAwNDg2XCIsIFwiU0g2MDA0OTBcIiwgXCJTSDYwMDQ5MVwiLCBcIlNINjAwNDk1XCIsIFwiU0g2MDA1MDFcIiwgXCJTSDYwMDUwMlwiLCBcIlNINjAwNTA3XCIsIFwiU0g2MDA1MDhcIiwgXCJTSDYwMDUxMlwiLCBcIlNINjAwNTIzXCIsIFwiU0g2MDA1MjZcIiwgXCJTSDYwMDUzMVwiLCBcIlNINjAwNTMzXCIsIFwiU0g2MDA1NDZcIiwgXCJTSDYwMDU0OFwiLCBcIlNINjAwNTUwXCIsIFwiU0g2MDA1NTJcIiwgXCJTSDYwMDU1OVwiLCBcIlNINjAwNTYyXCIsIFwiU0g2MDA1NjdcIiwgXCJTSDYwMDU2OFwiLCBcIlNINjAwNTY5XCIsIFwiU0g2MDA1NzFcIiwgXCJTSDYwMDU3N1wiLCBcIlNINjAwNTkwXCIsIFwiU0g2MDA1OTJcIiwgXCJTSDYwMDU5NVwiLCBcIlNINjAwNjAyXCIsIFwiU0g2MDA2MDRcIiwgXCJTSDYwMDYxMlwiLCBcIlNINjAwNjE2XCIsIFwiU0g2MDA2MjBcIiwgXCJTSDYwMDYyMVwiLCBcIlNINjAwNjIyXCIsIFwiU0g2MDA2MjRcIiwgXCJTSDYwMDYyNlwiLCBcIlNINjAwNjI5XCIsIFwiU0g2MDA2MzBcIiwgXCJTSDYwMDYzNFwiLCBcIlNINjAwNjM4XCIsIFwiU0g2MDA2NDFcIiwgXCJTSDYwMDY1MFwiLCBcIlNINjAwNjUyXCIsIFwiU0g2MDA2NThcIiwgXCJTSDYwMDY2MlwiLCBcIlNINjAwNjY3XCIsIFwiU0g2MDA2NjhcIiwgXCJTSDYwMDY3NVwiLCBcIlNINjAwNjc2XCIsIFwiU0g2MDA2NzdcIiwgXCJTSDYwMDY4MVwiLCBcIlNINjAwNjg0XCIsIFwiU0g2MDA2ODZcIiwgXCJTSDYwMDY5MlwiLCBcIlNINjAwNjkzXCIsIFwiU0g2MDA3MDJcIiwgXCJTSDYwMDcwN1wiLCBcIlNINjAwNzA4XCIsIFwiU0g2MDA3MTFcIiwgXCJTSDYwMDcyOFwiLCBcIlNINjAwNzMwXCIsIFwiU0g2MDA3MzRcIiwgXCJTSDYwMDczNVwiLCBcIlNINjAwNzQwXCIsIFwiU0g2MDA3NDJcIiwgXCJTSDYwMDc0NFwiLCBcIlNINjAwNzQ1XCIsIFwiU0g2MDA3NTZcIiwgXCJTSDYwMDc1OFwiLCBcIlNINjAwNzYzXCIsIFwiU0g2MDA3NjRcIiwgXCJTSDYwMDc3MVwiLCBcIlNINjAwNzc1XCIsIFwiU0g2MDA3NzdcIiwgXCJTSDYwMDc3OVwiLCBcIlNINjAwNzgyXCIsIFwiU0g2MDA3ODNcIiwgXCJTSDYwMDc4NFwiLCBcIlNINjAwNzg5XCIsIFwiU0g2MDA3OTdcIiwgXCJTSDYwMDc5OFwiLCBcIlNINjAwODAwXCIsIFwiU0g2MDA4MDNcIiwgXCJTSDYwMDgwN1wiLCBcIlNINjAwODEyXCIsIFwiU0g2MDA4MTRcIiwgXCJTSDYwMDgxOFwiLCBcIlNINjAwODI0XCIsIFwiU0g2MDA4MjhcIiwgXCJTSDYwMDgzMFwiLCBcIlNINjAwODM2XCIsIFwiU0g2MDA4MzhcIiwgXCJTSDYwMDg0M1wiLCBcIlNINjAwODQ1XCIsIFwiU0g2MDA4NDZcIiwgXCJTSDYwMDg1NVwiLCBcIlNINjAwODU2XCIsIFwiU0g2MDA4NjVcIiwgXCJTSDYwMDg2OFwiLCBcIlNINjAwODc2XCIsIFwiU0g2MDA5NjNcIiwgXCJTSDYwMDk2NVwiLCBcIlNINjAwOTczXCIsIFwiU0g2MDA5ODZcIiwgXCJTSDYwMDk4N1wiLCBcIlNINjAwOTg4XCIsIFwiU0g2MDA5OTBcIiwgXCJTSDYwMDk5NVwiLCBcIlNINjAwOTk3XCIsIFwiU0g2MDEwMDNcIiwgXCJTSDYwMTAwN1wiLCBcIlNINjAxMDExXCIsIFwiU0g2MDEwMTVcIiwgXCJTSDYwMTAzOFwiLCBcIlNINjAxMDU4XCIsIFwiU0g2MDEwNjlcIiwgXCJTSDYwMTEwMVwiLCBcIlNINjAxMTA3XCIsIFwiU0g2MDExMTZcIiwgXCJTSDYwMTEyNlwiLCBcIlNINjAxMTM3XCIsIFwiU0g2MDEyMjJcIiwgXCJTSDYwMTMzOVwiLCBcIlNINjAxMzY2XCIsIFwiU0g2MDEzODhcIiwgXCJTSDYwMTUwMFwiLCBcIlNINjAxNTY2XCIsIFwiU0g2MDE1ODhcIiwgXCJTSDYwMTU5NVwiLCBcIlNINjAxNTk5XCIsIFwiU0g2MDE2MzZcIiwgXCJTSDYwMTY2NlwiLCBcIlNINjAxNzAwXCIsIFwiU0g2MDE3ODlcIiwgXCJTSDYwMTc5OVwiLCBcIlNINjAxODU4XCIsIFwiU0g2MDE4ODJcIiwgXCJTSDYwMTg5MFwiLCBcIlNINjAxOTAwXCIsIFwiU0g2MDE5MThcIiwgXCJTSDYwMTk1MlwiLCBcIlNINjAxOTY4XCIsIFwiU0g2MDMwMDNcIiwgXCJTSDYwMzAwOFwiLCBcIlNINjAzMDEwXCIsIFwiU0g2MDMwMjZcIiwgXCJTSDYwMzA0M1wiLCBcIlNINjAzMDU4XCIsIFwiU0g2MDMwNjNcIiwgXCJTSDYwMzA4MVwiLCBcIlNINjAzMDk4XCIsIFwiU0g2MDMxMDhcIiwgXCJTSDYwMzExMVwiLCBcIlNINjAzMTEzXCIsIFwiU0g2MDMxMTZcIiwgXCJTSDYwMzExOFwiLCBcIlNINjAzMTI2XCIsIFwiU0g2MDMxMjhcIiwgXCJTSDYwMzE2NlwiLCBcIlNINjAzMjE4XCIsIFwiU0g2MDMyMjdcIiwgXCJTSDYwMzIzM1wiLCBcIlNINjAzMjU4XCIsIFwiU0g2MDMyOThcIiwgXCJTSDYwMzI5OVwiLCBcIlNINjAzMzAzXCIsIFwiU0g2MDMzMDVcIiwgXCJTSDYwMzMwOFwiLCBcIlNINjAzMzEzXCIsIFwiU0g2MDMzMjNcIiwgXCJTSDYwMzMzN1wiLCBcIlNINjAzMzM4XCIsIFwiU0g2MDMzMzlcIiwgXCJTSDYwMzM1OFwiLCBcIlNINjAzMzY4XCIsIFwiU0g2MDMzODVcIiwgXCJTSDYwMzM5M1wiLCBcIlNINjAzMzk4XCIsIFwiU0g2MDM0MjFcIiwgXCJTSDYwMzUwOFwiLCBcIlNINjAzNTE3XCIsIFwiU0g2MDM1NTVcIiwgXCJTSDYwMzU3OVwiLCBcIlNINjAzNTg4XCIsIFwiU0g2MDM2MDBcIiwgXCJTSDYwMzYwM1wiLCBcIlNINjAzNjA5XCIsIFwiU0g2MDM2MTJcIiwgXCJTSDYwMzYxOFwiLCBcIlNINjAzNjI2XCIsIFwiU0g2MDM2MzZcIiwgXCJTSDYwMzY2MFwiLCBcIlNINjAzNjY5XCIsIFwiU0g2MDM2NzhcIiwgXCJTSDYwMzY4NlwiLCBcIlNINjAzNzA3XCIsIFwiU0g2MDM3MDhcIiwgXCJTSDYwMzcxOFwiLCBcIlNINjAzNzI3XCIsIFwiU0g2MDM3MzBcIiwgXCJTSDYwMzc1OFwiLCBcIlNINjAzNzc3XCIsIFwiU0g2MDM3NzlcIiwgXCJTSDYwMzgwMFwiLCBcIlNINjAzODAzXCIsIFwiU0g2MDM4MTdcIiwgXCJTSDYwMzgzOVwiLCBcIlNINjAzODQzXCIsIFwiU0g2MDM4NjFcIiwgXCJTSDYwMzg4MVwiLCBcIlNINjAzODg1XCIsIFwiU0g2MDM4OThcIiwgXCJTSDYwMzkwMFwiLCBcIlNINjAzOTE5XCIsIFwiU0g2MDM5MjBcIiwgXCJTSDYwMzkzOVwiLCBcIlNINjAzOTU4XCIsIFwiU0g2MDM5NTlcIiwgXCJTSDYwMzk3OVwiLCBcIlNINjAzOTgwXCIsIFwiU0g2MDM5ODlcIiwgXCJTSDYwMzk5NlwiLCBcIlNINjAzOTk3XCIsIFwiU0g2MDM5OTlcIl07XG4gICAgc3RvY2tUYWJsZSA9IFtdO1xuICAgIHN3aXRjaCAoZGlyKSB7XG4gICAgICBjYXNlIFwiaHMzMDBcIjpcbiAgICAgICAgc3RvY2tUYWJsZSA9IHN0b2NrVGFibGVIczMwMDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwienoxMDAwXCI6XG4gICAgICAgIHN0b2NrVGFibGUgPSBzdG9ja1RhYmxlWnoxMDAwO1xuICAgIH1cbiAgICByZXR1cm4gc3RvY2tUYWJsZTtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSB1dGlscztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMMVZ6WlhKekwzUmhiM2QxTDNOMGRXUjVMMEZ5YTJGa0wwRnlhMkZrUjJGdFpTOXpjbU12ZEc5dmJITXZkWFJwYkhNdVkyOW1abVZsSWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaUwxVnpaWEp6TDNSaGIzZDFMM04wZFdSNUwwRnlhMkZrTDBGeWEyRmtSMkZ0WlM5emNtTXZkRzl2YkhNdmRYUnBiSE11WTI5bVptVmxJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEVsQlFVRTdPMEZCUVVFc1MwRkJRU3hIUVVOSk8wVkJRVUVzWlVGQlFTeEZRVUZwUWl4VFFVRkRMRTlCUVVRc1JVRkJWU3hKUVVGV08wRkJRMklzVjBGQlR5eEpRVUZKTEVOQlFVTXNSMEZCVEN4RFFVRlRMRU5CUVVFc1IwRkJTU3hKUVVGS0xFZEJRVmNzU1VGQlNTeERRVUZETEVkQlFVd3NRMEZCVXl4UFFVRlVMRU5CUVhCQ08wVkJSRTBzUTBGQmFrSTdSVUZIUVN4VlFVRkJMRVZCUVZrc1UwRkJReXhMUVVGRU8wRkJRMUlzVVVGQlFUdEpRVUZCTEV0QlFVRXNSMEZCVVR0QlFVTlNMRk5CUVVFc2RVTkJRVUU3TzAxQlEwa3NTMEZCUVN4SlFVRlRMRkZCUVVFc1EwRkJVeXhMUVVGVU8wRkJSR0k3U1VGRlFTeEhRVUZCTEVkQlFVMHNRMEZCUXl4TFFVRkJMRWRCUVZFc1MwRkJTeXhEUVVGRExFMUJRV1lzUTBGQmMwSXNRMEZCUXl4UFFVRjJRaXhEUVVFclFpeERRVUV2UWp0WFFVTk9PMFZCVEZFc1EwRklXanRGUVZWQkxFMUJRVUVzUlVGQlVTeFRRVUZETEV0QlFVUTdWMEZEU2l4TFFVRkJMRWRCUVZFN1JVRkVTaXhEUVZaU08wVkJZVUVzWVVGQlFTeEZRVUZsTEZOQlFVTXNSMEZCUkR0QlFVTllMRkZCUVVFN1NVRkJRU3hsUVVGQkxFZEJRV3RDTEVOQlFVTXNWVUZCUkN4RlFVRlpMRlZCUVZvc1JVRkJkVUlzVlVGQmRrSXNSVUZCYTBNc1ZVRkJiRU1zUlVGQk5rTXNWVUZCTjBNc1JVRkJkMFFzVlVGQmVFUXNSVUZCYlVVc1ZVRkJia1VzUlVGQk9FVXNWVUZCT1VVc1JVRkJlVVlzVlVGQmVrWXNSVUZCYjBjc1ZVRkJjRWNzUlVGQkswY3NWVUZCTDBjc1JVRkJNRWdzVlVGQk1VZ3NSVUZCY1Vrc1ZVRkJja2tzUlVGQlowb3NWVUZCYUVvc1JVRkJNa29zVlVGQk0wb3NSVUZCYzBzc1ZVRkJkRXNzUlVGQmFVd3NWVUZCYWt3c1JVRkJORXdzVlVGQk5Vd3NSVUZCZFUwc1ZVRkJkazBzUlVGQmEwNHNWVUZCYkU0c1JVRkJOazRzVlVGQk4wNHNSVUZCZDA4c1ZVRkJlRThzUlVGQmJWQXNWVUZCYmxBc1JVRkJPRkFzVlVGQk9WQXNSVUZCZVZFc1ZVRkJlbEVzUlVGQmIxSXNWVUZCY0ZJc1JVRkJLMUlzVlVGQkwxSXNSVUZCTUZNc1ZVRkJNVk1zUlVGQmNWUXNWVUZCY2xRc1JVRkJaMVVzVlVGQmFGVXNSVUZCTWxVc1ZVRkJNMVVzUlVGQmMxWXNWVUZCZEZZc1JVRkJhVmNzVlVGQmFsY3NSVUZCTkZjc1ZVRkJOVmNzUlVGQmRWZ3NWVUZCZGxnc1JVRkJhMWtzVlVGQmJGa3NSVUZCTmxrc1ZVRkJOMWtzUlVGQmQxb3NWVUZCZUZvc1JVRkJiV0VzVlVGQmJtRXNSVUZCT0dFc1ZVRkJPV0VzUlVGQmVXSXNWVUZCZW1Jc1JVRkJiMk1zVlVGQmNHTXNSVUZCSzJNc1ZVRkJMMk1zUlVGQk1HUXNWVUZCTVdRc1JVRkJjV1VzVlVGQmNtVXNSVUZCWjJZc1ZVRkJhR1lzUlVGQk1tWXNWVUZCTTJZc1JVRkJjMmRDTEZWQlFYUm5RaXhGUVVGcGFFSXNWVUZCYW1oQ0xFVkJRVFJvUWl4VlFVRTFhRUlzUlVGQmRXbENMRlZCUVhacFFpeEZRVUZyYWtJc1ZVRkJiR3BDTEVWQlFUWnFRaXhWUVVFM2FrSXNSVUZCZDJ0Q0xGVkJRWGhyUWl4RlFVRnRiRUlzVlVGQmJteENMRVZCUVRoc1FpeFZRVUU1YkVJc1JVRkJlVzFDTEZWQlFYcHRRaXhGUVVGdmJrSXNWVUZCY0c1Q0xFVkJRU3R1UWl4VlFVRXZia0lzUlVGQk1HOUNMRlZCUVRGdlFpeEZRVUZ4Y0VJc1ZVRkJjbkJDTEVWQlFXZHhRaXhWUVVGb2NVSXNSVUZCTW5GQ0xGVkJRVE54UWl4RlFVRnpja0lzVlVGQmRISkNMRVZCUVdselFpeFZRVUZxYzBJc1JVRkJOSE5DTEZWQlFUVnpRaXhGUVVGMWRFSXNWVUZCZG5SQ0xFVkJRV3QxUWl4VlFVRnNkVUlzUlVGQk5uVkNMRlZCUVRkMVFpeEZRVUYzZGtJc1ZVRkJlSFpDTEVWQlFXMTNRaXhWUVVGdWQwSXNSVUZCT0hkQ0xGVkJRVGwzUWl4RlFVRjVlRUlzVlVGQmVuaENMRVZCUVc5NVFpeFZRVUZ3ZVVJc1JVRkJLM2xDTEZWQlFTOTVRaXhGUVVFd2VrSXNWVUZCTVhwQ0xFVkJRWEV3UWl4VlFVRnlNRUlzUlVGQlp6RkNMRlZCUVdneFFpeEZRVUV5TVVJc1ZVRkJNekZDTEVWQlFYTXlRaXhWUVVGME1rSXNSVUZCYVROQ0xGVkJRV296UWl4RlFVRTBNMElzVlVGQk5UTkNMRVZCUVhVMFFpeFZRVUYyTkVJc1JVRkJhelZDTEZWQlFXdzFRaXhGUVVFMk5VSXNWVUZCTnpWQ0xFVkJRWGMyUWl4VlFVRjROa0lzUlVGQmJUZENMRlZCUVc0M1FpeEZRVUU0TjBJc1ZVRkJPVGRDTEVWQlFYazRRaXhWUVVGNk9FSXNSVUZCYnpsQ0xGVkJRWEE1UWl4RlFVRXJPVUlzVlVGQkx6bENMRVZCUVRBclFpeFZRVUV4SzBJc1JVRkJjUzlDTEZWQlFYSXZRaXhGUVVGblowTXNWVUZCYUdkRExFVkJRVEpuUXl4VlFVRXpaME1zUlVGQmMyaERMRlZCUVhSb1F5eEZRVUZwYVVNc1ZVRkJhbWxETEVWQlFUUnBReXhWUVVFMWFVTXNSVUZCZFdwRExGVkJRWFpxUXl4RlFVRnJhME1zVlVGQmJHdERMRVZCUVRaclF5eFZRVUUzYTBNc1JVRkJkMnhETEZWQlFYaHNReXhGUVVGdGJVTXNWVUZCYm0xRExFVkJRVGh0UXl4VlFVRTViVU1zUlVGQmVXNURMRlZCUVhwdVF5eEZRVUZ2YjBNc1ZVRkJjRzlETEVWQlFTdHZReXhWUVVFdmIwTXNSVUZCTUhCRExGVkJRVEZ3UXl4RlFVRnhjVU1zVlVGQmNuRkRMRVZCUVdkeVF5eFZRVUZvY2tNc1JVRkJNbkpETEZWQlFUTnlReXhGUVVGemMwTXNWVUZCZEhORExFVkJRV2wwUXl4VlFVRnFkRU1zUlVGQk5IUkRMRlZCUVRWMFF5eEZRVUYxZFVNc1ZVRkJkblZETEVWQlFXdDJReXhWUVVGc2RrTXNSVUZCTm5aRExGVkJRVGQyUXl4RlFVRjNkME1zVlVGQmVIZERMRVZCUVcxNFF5eFZRVUZ1ZUVNc1JVRkJPSGhETEZWQlFUbDRReXhGUVVGNWVVTXNWVUZCZW5sRExFVkJRVzk2UXl4VlFVRndla01zUlVGQkszcERMRlZCUVM5NlF5eEZRVUV3TUVNc1ZVRkJNVEJETEVWQlFYRXhReXhWUVVGeU1VTXNSVUZCWnpKRExGVkJRV2d5UXl4RlFVRXlNa01zVlVGQk16SkRMRVZCUVhNelF5eFZRVUYwTTBNc1JVRkJhVFJETEZWQlFXbzBReXhGUVVFME5FTXNWVUZCTlRSRExFVkJRWFUxUXl4VlFVRjJOVU1zUlVGQmF6WkRMRlZCUVd3MlF5eEZRVUUyTmtNc1ZVRkJOelpETEVWQlFYYzNReXhWUVVGNE4wTXNSVUZCYlRoRExGVkJRVzQ0UXl4RlFVRTRPRU1zVlVGQk9UaERMRVZCUVhrNVF5eFZRVUY2T1VNc1JVRkJieXRETEZWQlFYQXJReXhGUVVFckswTXNWVUZCTHl0RExFVkJRVEF2UXl4VlFVRXhMME1zUlVGQmNXZEVMRlZCUVhKblJDeEZRVUZuYUVRc1ZVRkJhR2hFTEVWQlFUSm9SQ3hWUVVFemFFUXNSVUZCYzJsRUxGVkJRWFJwUkN4RlFVRnBha1FzVlVGQmFtcEVMRVZCUVRScVJDeFZRVUUxYWtRc1JVRkJkV3RFTEZWQlFYWnJSQ3hGUVVGcmJFUXNWVUZCYkd4RUxFVkJRVFpzUkN4VlFVRTNiRVFzUlVGQmQyMUVMRlZCUVhodFJDeEZRVUZ0YmtRc1ZVRkJibTVFTEVWQlFUaHVSQ3hWUVVFNWJrUXNSVUZCZVc5RUxGVkJRWHB2UkN4RlFVRnZjRVFzVlVGQmNIQkVMRVZCUVN0d1JDeFZRVUV2Y0VRc1JVRkJNSEZFTEZWQlFURnhSQ3hGUVVGeGNrUXNWVUZCY25KRUxFVkJRV2R6UkN4VlFVRm9jMFFzUlVGQk1uTkVMRlZCUVROelJDeEZRVUZ6ZEVRc1ZVRkJkSFJFTEVWQlFXbDFSQ3hWUVVGcWRVUXNSVUZCTkhWRUxGVkJRVFYxUkN4RlFVRjFka1FzVlVGQmRuWkVMRVZCUVd0M1JDeFZRVUZzZDBRc1JVRkJObmRFTEZWQlFUZDNSQ3hGUVVGM2VFUXNWVUZCZUhoRUxFVkJRVzE1UkN4VlFVRnVlVVFzUlVGQk9IbEVMRlZCUVRsNVJDeEZRVUY1ZWtRc1ZVRkJlbnBFTEVWQlFXOHdSQ3hWUVVGd01FUXNSVUZCS3pCRUxGVkJRUzh3UkN4RlFVRXdNVVFzVlVGQk1URkVMRVZCUVhFeVJDeFZRVUZ5TWtRc1JVRkJaek5FTEZWQlFXZ3pSQ3hGUVVFeU0wUXNWVUZCTXpORUxFVkJRWE0wUkN4VlFVRjBORVFzUlVGQmFUVkVMRlZCUVdvMVJDeEZRVUUwTlVRc1ZVRkJOVFZFTEVWQlFYVTJSQ3hWUVVGMk5rUXNSVUZCYXpkRUxGVkJRV3czUkN4RlFVRTJOMFFzVlVGQk56ZEVMRVZCUVhjNFJDeFZRVUY0T0VRc1JVRkJiVGxFTEZWQlFXNDVSQ3hGUVVFNE9VUXNWVUZCT1RsRUxFVkJRWGtyUkN4VlFVRjZLMFFzUlVGQmJ5OUVMRlZCUVhBdlJDeEZRVUVyTDBRc1ZVRkJMeTlFTEVWQlFUQm5SU3hWUVVFeFowVXNSVUZCY1doRkxGVkJRWEpvUlN4RlFVRm5hVVVzVlVGQmFHbEZMRVZCUVRKcFJTeFZRVUV6YVVVc1JVRkJjMnBGTEZWQlFYUnFSU3hGUVVGcGEwVXNWVUZCYW10RkxFVkJRVFJyUlN4VlFVRTFhMFVzUlVGQmRXeEZMRlZCUVhac1JTeEZRVUZyYlVVc1ZVRkJiRzFGTEVWQlFUWnRSU3hWUVVFM2JVVXNSVUZCZDI1RkxGVkJRWGh1UlN4RlFVRnRiMFVzVlVGQmJtOUZMRVZCUVRodlJTeFZRVUU1YjBVc1JVRkJlWEJGTEZWQlFYcHdSU3hGUVVGdmNVVXNWVUZCY0hGRkxFVkJRU3R4UlN4VlFVRXZjVVVzUlVGQk1ISkZMRlZCUVRGeVJTeEZRVUZ4YzBVc1ZVRkJjbk5GTEVWQlFXZDBSU3hWUVVGb2RFVXNSVUZCTW5SRkxGVkJRVE4wUlN4RlFVRnpkVVVzVlVGQmRIVkZMRVZCUVdsMlJTeFZRVUZxZGtVc1JVRkJOSFpGTEZWQlFUVjJSU3hGUVVGMWQwVXNWVUZCZG5kRkxFVkJRV3Q0UlN4VlFVRnNlRVVzUlVGQk5uaEZMRlZCUVRkNFJTeEZRVUYzZVVVc1ZVRkJlSGxGTEVWQlFXMTZSU3hWUVVGdWVrVXNSVUZCT0hwRkxGVkJRVGw2UlN4RlFVRjVNRVVzVlVGQmVqQkZMRVZCUVc4eFJTeFZRVUZ3TVVVc1JVRkJLekZGTEZWQlFTOHhSU3hGUVVFd01rVXNWVUZCTVRKRkxFVkJRWEV6UlN4VlFVRnlNMFVzUlVGQlp6UkZMRlZCUVdnMFJTeEZRVUV5TkVVc1ZVRkJNelJGTEVWQlFYTTFSU3hWUVVGME5VVXNSVUZCYVRaRkxGVkJRV28yUlN4RlFVRTBOa1VzVlVGQk5UWkZMRVZCUVhVM1JTeFZRVUYyTjBVc1JVRkJhemhGTEZWQlFXdzRSU3hGUVVFMk9FVXNWVUZCTnpoRkxFVkJRWGM1UlN4VlFVRjRPVVVzUlVGQmJTdEZMRlZCUVc0clJTeEZRVUU0SzBVc1ZVRkJPU3RGTEVWQlFYa3ZSU3hWUVVGNkwwVXNSVUZCYjJkR0xGVkJRWEJuUml4RlFVRXJaMFlzVlVGQkwyZEdMRVZCUVRCb1JpeFZRVUV4YUVZc1JVRkJjV2xHTEZWQlFYSnBSaXhGUVVGbmFrWXNWVUZCYUdwR0xFVkJRVEpxUml4VlFVRXpha1lzUlVGQmMydEdMRlZCUVhSclJpeEZRVUZwYkVZc1ZVRkJhbXhHTEVWQlFUUnNSaXhWUVVFMWJFWXNSVUZCZFcxR0xGVkJRWFp0Uml4RlFVRnJia1lzVlVGQmJHNUdMRVZCUVRadVJpeFZRVUUzYmtZc1JVRkJkMjlHTEZWQlFYaHZSaXhGUVVGdGNFWXNWVUZCYm5CR0xFVkJRVGh3Uml4VlFVRTVjRVlzUlVGQmVYRkdMRlZCUVhweFJpeEZRVUZ2Y2tZc1ZVRkJjSEpHTEVWQlFTdHlSaXhWUVVFdmNrWXNSVUZCTUhOR0xGVkJRVEZ6Uml4RlFVRnhkRVlzVlVGQmNuUkdMRVZCUVdkMVJpeFZRVUZvZFVZc1JVRkJNblZHTEZWQlFUTjFSaXhGUVVGemRrWXNWVUZCZEhaR0xFVkJRV2wzUml4VlFVRnFkMFlzUlVGQk5IZEdMRlZCUVRWM1JpeEZRVUYxZUVZc1ZVRkJkbmhHTEVWQlFXdDVSaXhWUVVGc2VVWXNSVUZCTm5sR0xGVkJRVGQ1Uml4RlFVRjNla1lzVlVGQmVIcEdMRVZCUVcwd1JpeFZRVUZ1TUVZc1JVRkJPREJHTEZWQlFUa3dSaXhGUVVGNU1VWXNWVUZCZWpGR0xFVkJRVzh5Uml4VlFVRndNa1lzUlVGQkt6SkdMRlZCUVM4eVJpeEZRVUV3TTBZc1ZVRkJNVE5HTEVWQlFYRTBSaXhWUVVGeU5FWXNSVUZCWnpWR0xGVkJRV2cxUml4RlFVRXlOVVlzVlVGQk16VkdMRVZCUVhNMlJpeFZRVUYwTmtZc1JVRkJhVGRHTEZWQlFXbzNSaXhGUVVFME4wWXNWVUZCTlRkR0xFVkJRWFU0Uml4VlFVRjJPRVlzUlVGQmF6bEdMRlZCUVd3NVJpeEZRVUUyT1VZc1ZVRkJOemxHTEVWQlFYY3JSaXhWUVVGNEswWXNSVUZCYlM5R0xGVkJRVzR2Uml4RlFVRTRMMFlzVlVGQk9TOUdMRVZCUVhsblJ5eFZRVUY2WjBjc1JVRkJiMmhITEZWQlFYQm9SeXhGUVVFcmFFY3NWVUZCTDJoSExFVkJRVEJwUnl4VlFVRXhhVWNzUlVGQmNXcEhMRlZCUVhKcVJ5eEZRVUZuYTBjc1ZVRkJhR3RITEVWQlFUSnJSeXhWUVVFemEwY3NSVUZCYzJ4SExGVkJRWFJzUnl4RlFVRnBiVWNzVlVGQmFtMUhMRVZCUVRSdFJ5eFZRVUUxYlVjc1JVRkJkVzVITEZWQlFYWnVSeXhGUVVGcmIwY3NWVUZCYkc5SExFVkJRVFp2Unl4VlFVRTNiMGNzUlVGQmQzQkhMRlZCUVhod1J5eEZRVUZ0Y1Vjc1ZVRkJibkZITEVWQlFUaHhSeXhWUVVFNWNVY3NSVUZCZVhKSExGVkJRWHB5Unl4RlFVRnZjMGNzVlVGQmNITkhMRVZCUVN0elJ5eFZRVUV2YzBjc1JVRkJNSFJITEZWQlFURjBSenRKUVVOc1FpeG5Ra0ZCUVN4SFFVRnRRaXhEUVVGRExGVkJRVVFzUlVGQllTeFZRVUZpTEVWQlFYbENMRlZCUVhwQ0xFVkJRWEZETEZWQlFYSkRMRVZCUVdsRUxGVkJRV3BFTEVWQlFUWkVMRlZCUVRkRUxFVkJRWGxGTEZWQlFYcEZMRVZCUVhGR0xGVkJRWEpHTEVWQlFXbEhMRlZCUVdwSExFVkJRVFpITEZWQlFUZEhMRVZCUVhsSUxGVkJRWHBJTEVWQlFYRkpMRlZCUVhKSkxFVkJRV2xLTEZWQlFXcEtMRVZCUVRaS0xGVkJRVGRLTEVWQlFYbExMRlZCUVhwTExFVkJRWEZNTEZWQlFYSk1MRVZCUVdsTkxGVkJRV3BOTEVWQlFUWk5MRlZCUVRkTkxFVkJRWGxPTEZWQlFYcE9MRVZCUVhGUExGVkJRWEpQTEVWQlFXbFFMRlZCUVdwUUxFVkJRVFpRTEZWQlFUZFFMRVZCUVhsUkxGVkJRWHBSTEVWQlFYRlNMRlZCUVhKU0xFVkJRV2xUTEZWQlFXcFRMRVZCUVRaVExGVkJRVGRUTEVWQlFYbFVMRlZCUVhwVUxFVkJRWEZWTEZWQlFYSlZMRVZCUVdsV0xGVkJRV3BXTEVWQlFUWldMRlZCUVRkV0xFVkJRWGxYTEZWQlFYcFhMRVZCUVhGWUxGVkJRWEpZTEVWQlFXbFpMRlZCUVdwWkxFVkJRVFpaTEZWQlFUZFpMRVZCUVhsYUxGVkJRWHBhTEVWQlFYRmhMRlZCUVhKaExFVkJRV2xpTEZWQlFXcGlMRVZCUVRaaUxGVkJRVGRpTEVWQlFYbGpMRlZCUVhwakxFVkJRWEZrTEZWQlFYSmtMRVZCUVdsbExGVkJRV3BsTEVWQlFUWmxMRlZCUVRkbExFVkJRWGxtTEZWQlFYcG1MRVZCUVhGblFpeFZRVUZ5WjBJc1JVRkJhV2hDTEZWQlFXcG9RaXhGUVVFMmFFSXNWVUZCTjJoQ0xFVkJRWGxwUWl4VlFVRjZhVUlzUlVGQmNXcENMRlZCUVhKcVFpeEZRVUZwYTBJc1ZVRkJhbXRDTEVWQlFUWnJRaXhWUVVFM2EwSXNSVUZCZVd4Q0xGVkJRWHBzUWl4RlFVRnhiVUlzVlVGQmNtMUNMRVZCUVdsdVFpeFZRVUZxYmtJc1JVRkJObTVDTEZWQlFUZHVRaXhGUVVGNWIwSXNWVUZCZW05Q0xFVkJRWEZ3UWl4VlFVRnljRUlzUlVGQmFYRkNMRlZCUVdweFFpeEZRVUUyY1VJc1ZVRkJOM0ZDTEVWQlFYbHlRaXhWUVVGNmNrSXNSVUZCY1hOQ0xGVkJRWEp6UWl4RlFVRnBkRUlzVlVGQmFuUkNMRVZCUVRaMFFpeFZRVUUzZEVJc1JVRkJlWFZDTEZWQlFYcDFRaXhGUVVGeGRrSXNWVUZCY25aQ0xFVkJRV2wzUWl4VlFVRnFkMElzUlVGQk5uZENMRlZCUVRkM1FpeEZRVUY1ZUVJc1ZVRkJlbmhDTEVWQlFYRjVRaXhWUVVGeWVVSXNSVUZCYVhwQ0xGVkJRV3A2UWl4RlFVRTJla0lzVlVGQk4zcENMRVZCUVhrd1FpeFZRVUY2TUVJc1JVRkJjVEZDTEZWQlFYSXhRaXhGUVVGcE1rSXNWVUZCYWpKQ0xFVkJRVFl5UWl4VlFVRTNNa0lzUlVGQmVUTkNMRlZCUVhvelFpeEZRVUZ4TkVJc1ZVRkJjalJDTEVWQlFXazFRaXhWUVVGcU5VSXNSVUZCTmpWQ0xGVkJRVGMxUWl4RlFVRjVOa0lzVlVGQmVqWkNMRVZCUVhFM1FpeFZRVUZ5TjBJc1JVRkJhVGhDTEZWQlFXbzRRaXhGUVVFMk9FSXNWVUZCTnpoQ0xFVkJRWGs1UWl4VlFVRjZPVUlzUlVGQmNTdENMRlZCUVhJclFpeEZRVUZwTDBJc1ZVRkJhaTlDTEVWQlFUWXZRaXhWUVVFM0wwSXNSVUZCZVdkRExGVkJRWHBuUXl4RlFVRnhhRU1zVlVGQmNtaERMRVZCUVdscFF5eFZRVUZxYVVNc1JVRkJObWxETEZWQlFUZHBReXhGUVVGNWFrTXNWVUZCZW1wRExFVkJRWEZyUXl4VlFVRnlhME1zUlVGQmFXeERMRlZCUVdwc1F5eEZRVUUyYkVNc1ZVRkJOMnhETEVWQlFYbHRReXhWUVVGNmJVTXNSVUZCY1c1RExGVkJRWEp1UXl4RlFVRnBiME1zVlVGQmFtOURMRVZCUVRadlF5eFZRVUUzYjBNc1JVRkJlWEJETEZWQlFYcHdReXhGUVVGeGNVTXNWVUZCY25GRExFVkJRV2x5UXl4VlFVRnFja01zUlVGQk5uSkRMRlZCUVRkeVF5eEZRVUY1YzBNc1ZVRkJlbk5ETEVWQlFYRjBReXhWUVVGeWRFTXNSVUZCYVhWRExGVkJRV3AxUXl4RlFVRTJkVU1zVlVGQk4zVkRMRVZCUVhsMlF5eFZRVUY2ZGtNc1JVRkJjWGRETEZWQlFYSjNReXhGUVVGcGVFTXNWVUZCYW5oRExFVkJRVFo0UXl4VlFVRTNlRU1zUlVGQmVYbERMRlZCUVhwNVF5eEZRVUZ4ZWtNc1ZVRkJjbnBETEVWQlFXa3dReXhWUVVGcU1FTXNSVUZCTmpCRExGVkJRVGN3UXl4RlFVRjVNVU1zVlVGQmVqRkRMRVZCUVhFeVF5eFZRVUZ5TWtNc1JVRkJhVE5ETEZWQlFXb3pReXhGUVVFMk0wTXNWVUZCTnpORExFVkJRWGswUXl4VlFVRjZORU1zUlVGQmNUVkRMRlZCUVhJMVF5eEZRVUZwTmtNc1ZVRkJhalpETEVWQlFUWTJReXhWUVVFM05rTXNSVUZCZVRkRExGVkJRWG8zUXl4RlFVRnhPRU1zVlVGQmNqaERMRVZCUVdrNVF5eFZRVUZxT1VNc1JVRkJOamxETEZWQlFUYzVReXhGUVVGNUswTXNWVUZCZWl0RExFVkJRWEV2UXl4VlFVRnlMME1zUlVGQmFXZEVMRlZCUVdwblJDeEZRVUUyWjBRc1ZVRkJOMmRFTEVWQlFYbG9SQ3hWUVVGNmFFUXNSVUZCY1dsRUxGVkJRWEpwUkN4RlFVRnBha1FzVlVGQmFtcEVMRVZCUVRacVJDeFZRVUUzYWtRc1JVRkJlV3RFTEZWQlFYcHJSQ3hGUVVGeGJFUXNWVUZCY214RUxFVkJRV2x0UkN4VlFVRnFiVVFzUlVGQk5tMUVMRlZCUVRkdFJDeEZRVUY1YmtRc1ZVRkJlbTVFTEVWQlFYRnZSQ3hWUVVGeWIwUXNSVUZCYVhCRUxGVkJRV3B3UkN4RlFVRTJjRVFzVlVGQk4zQkVMRVZCUVhseFJDeFZRVUY2Y1VRc1JVRkJjWEpFTEZWQlFYSnlSQ3hGUVVGcGMwUXNWVUZCYW5ORUxFVkJRVFp6UkN4VlFVRTNjMFFzUlVGQmVYUkVMRlZCUVhwMFJDeEZRVUZ4ZFVRc1ZVRkJjblZFTEVWQlFXbDJSQ3hWUVVGcWRrUXNSVUZCTm5aRUxGVkJRVGQyUkN4RlFVRjVkMFFzVlVGQmVuZEVMRVZCUVhGNFJDeFZRVUZ5ZUVRc1JVRkJhWGxFTEZWQlFXcDVSQ3hGUVVFMmVVUXNWVUZCTjNsRUxFVkJRWGw2UkN4VlFVRjZla1FzUlVGQmNUQkVMRlZCUVhJd1JDeEZRVUZwTVVRc1ZVRkJhakZFTEVWQlFUWXhSQ3hWUVVFM01VUXNSVUZCZVRKRUxGVkJRWG95UkN4RlFVRnhNMFFzVlVGQmNqTkVMRVZCUVdrMFJDeFZRVUZxTkVRc1JVRkJOalJFTEZWQlFUYzBSQ3hGUVVGNU5VUXNWVUZCZWpWRUxFVkJRWEUyUkN4VlFVRnlOa1FzUlVGQmFUZEVMRlZCUVdvM1JDeEZRVUUyTjBRc1ZVRkJOemRFTEVWQlFYazRSQ3hWUVVGNk9FUXNSVUZCY1RsRUxGVkJRWEk1UkN4RlFVRnBLMFFzVlVGQmFpdEVMRVZCUVRZclJDeFZRVUUzSzBRc1JVRkJlUzlFTEZWQlFYb3ZSQ3hGUVVGeFowVXNWVUZCY21kRkxFVkJRV2xvUlN4VlFVRnFhRVVzUlVGQk5taEZMRlZCUVRkb1JTeEZRVUY1YVVVc1ZVRkJlbWxGTEVWQlFYRnFSU3hWUVVGeWFrVXNSVUZCYVd0RkxGVkJRV3ByUlN4RlFVRTJhMFVzVlVGQk4ydEZMRVZCUVhsc1JTeFZRVUY2YkVVc1JVRkJjVzFGTEZWQlFYSnRSU3hGUVVGcGJrVXNWVUZCYW01RkxFVkJRVFp1UlN4VlFVRTNia1VzUlVGQmVXOUZMRlZCUVhwdlJTeEZRVUZ4Y0VVc1ZVRkJjbkJGTEVWQlFXbHhSU3hWUVVGcWNVVXNSVUZCTm5GRkxGVkJRVGR4UlN4RlFVRjVja1VzVlVGQmVuSkZMRVZCUVhGelJTeFZRVUZ5YzBVc1JVRkJhWFJGTEZWQlFXcDBSU3hGUVVFMmRFVXNWVUZCTjNSRkxFVkJRWGwxUlN4VlFVRjZkVVVzUlVGQmNYWkZMRlZCUVhKMlJTeEZRVUZwZDBVc1ZVRkJhbmRGTEVWQlFUWjNSU3hWUVVFM2QwVXNSVUZCZVhoRkxGVkJRWHA0UlN4RlFVRnhlVVVzVlVGQmNubEZMRVZCUVdsNlJTeFZRVUZxZWtVc1JVRkJObnBGTEZWQlFUZDZSU3hGUVVGNU1FVXNWVUZCZWpCRkxFVkJRWEV4UlN4VlFVRnlNVVVzUlVGQmFUSkZMRlZCUVdveVJTeEZRVUUyTWtVc1ZVRkJOekpGTEVWQlFYa3pSU3hWUVVGNk0wVXNSVUZCY1RSRkxGVkJRWEkwUlN4RlFVRnBOVVVzVlVGQmFqVkZMRVZCUVRZMVJTeFZRVUUzTlVVc1JVRkJlVFpGTEZWQlFYbzJSU3hGUVVGeE4wVXNWVUZCY2pkRkxFVkJRV2s0UlN4VlFVRnFPRVVzUlVGQk5qaEZMRlZCUVRjNFJTeEZRVUY1T1VVc1ZVRkJlamxGTEVWQlFYRXJSU3hWUVVGeUswVXNSVUZCYVM5RkxGVkJRV292UlN4RlFVRTJMMFVzVlVGQk55OUZMRVZCUVhsblJpeFZRVUY2WjBZc1JVRkJjV2hHTEZWQlFYSm9SaXhGUVVGcGFVWXNWVUZCYW1sR0xFVkJRVFpwUml4VlFVRTNhVVlzUlVGQmVXcEdMRlZCUVhwcVJpeEZRVUZ4YTBZc1ZVRkJjbXRHTEVWQlFXbHNSaXhWUVVGcWJFWXNSVUZCTm14R0xGVkJRVGRzUml4RlFVRjViVVlzVlVGQmVtMUdMRVZCUVhGdVJpeFZRVUZ5YmtZc1JVRkJhVzlHTEZWQlFXcHZSaXhGUVVFMmIwWXNWVUZCTjI5R0xFVkJRWGx3Uml4VlFVRjZjRVlzUlVGQmNYRkdMRlZCUVhKeFJpeEZRVUZwY2tZc1ZVRkJhbkpHTEVWQlFUWnlSaXhWUVVFM2NrWXNSVUZCZVhOR0xGVkJRWHB6Uml4RlFVRnhkRVlzVlVGQmNuUkdMRVZCUVdsMVJpeFZRVUZxZFVZc1JVRkJOblZHTEZWQlFUZDFSaXhGUVVGNWRrWXNWVUZCZW5aR0xFVkJRWEYzUml4VlFVRnlkMFlzUlVGQmFYaEdMRlZCUVdwNFJpeEZRVUUyZUVZc1ZVRkJOM2hHTEVWQlFYbDVSaXhWUVVGNmVVWXNSVUZCY1hwR0xGVkJRWEo2Uml4RlFVRnBNRVlzVlVGQmFqQkdMRVZCUVRZd1JpeFZRVUUzTUVZc1JVRkJlVEZHTEZWQlFYb3hSaXhGUVVGeE1rWXNWVUZCY2pKR0xFVkJRV2t6Uml4VlFVRnFNMFlzUlVGQk5qTkdMRlZCUVRjelJpeEZRVUY1TkVZc1ZVRkJlalJHTEVWQlFYRTFSaXhWUVVGeU5VWXNSVUZCYVRaR0xGVkJRV28yUml4RlFVRTJOa1lzVlVGQk56WkdMRVZCUVhrM1JpeFZRVUY2TjBZc1JVRkJjVGhHTEZWQlFYSTRSaXhGUVVGcE9VWXNWVUZCYWpsR0xFVkJRVFk1Uml4VlFVRTNPVVlzUlVGQmVTdEdMRlZCUVhvclJpeEZRVUZ4TDBZc1ZVRkJjaTlHTEVWQlFXbG5SeXhWUVVGcVowY3NSVUZCTm1kSExGVkJRVGRuUnl4RlFVRjVhRWNzVlVGQmVtaEhMRVZCUVhGcFJ5eFZRVUZ5YVVjc1JVRkJhV3BITEZWQlFXcHFSeXhGUVVFMmFrY3NWVUZCTjJwSExFVkJRWGxyUnl4VlFVRjZhMGNzUlVGQmNXeEhMRlZCUVhKc1J5eEZRVUZwYlVjc1ZVRkJhbTFITEVWQlFUWnRSeXhWUVVFM2JVY3NSVUZCZVc1SExGVkJRWHB1Unl4RlFVRnhiMGNzVlVGQmNtOUhMRVZCUVdsd1J5eFZRVUZxY0Vjc1JVRkJObkJITEZWQlFUZHdSeXhGUVVGNWNVY3NWVUZCZW5GSExFVkJRWEZ5Unl4VlFVRnlja2NzUlVGQmFYTkhMRlZCUVdwelJ5eEZRVUUyYzBjc1ZVRkJOM05ITEVWQlFYbDBSeXhWUVVGNmRFY3NSVUZCY1hWSExGVkJRWEoxUnl4RlFVRnBka2NzVlVGQmFuWkhMRVZCUVRaMlJ5eFZRVUUzZGtjc1JVRkJlWGRITEZWQlFYcDNSeXhGUVVGeGVFY3NWVUZCY25oSExFVkJRV2w1Unl4VlFVRnFlVWNzUlVGQk5ubEhMRlZCUVRkNVJ5eEZRVUY1ZWtjc1ZVRkJlbnBITEVWQlFYRXdSeXhWUVVGeU1FY3NSVUZCYVRGSExGVkJRV294Unl4RlFVRTJNVWNzVlVGQk56RkhMRVZCUVhreVJ5eFZRVUY2TWtjc1JVRkJjVE5ITEZWQlFYSXpSeXhGUVVGcE5FY3NWVUZCYWpSSExFVkJRVFkwUnl4VlFVRTNORWNzUlVGQmVUVkhMRlZCUVhvMVJ5eEZRVUZ4Tmtjc1ZVRkJjalpITEVWQlFXazNSeXhWUVVGcU4wY3NSVUZCTmpkSExGVkJRVGMzUnl4RlFVRjVPRWNzVlVGQmVqaEhMRVZCUVhFNVJ5eFZRVUZ5T1Vjc1JVRkJhU3RITEZWQlFXb3JSeXhGUVVFMkswY3NWVUZCTnl0SExFVkJRWGt2Unl4VlFVRjZMMGNzUlVGQmNXZElMRlZCUVhKblNDeEZRVUZwYUVnc1ZVRkJhbWhJTEVWQlFUWm9TQ3hWUVVFM2FFZ3NSVUZCZVdsSUxGVkJRWHBwU0N4RlFVRnhha2dzVlVGQmNtcElMRVZCUVdsclNDeFZRVUZxYTBnc1JVRkJObXRJTEZWQlFUZHJTQ3hGUVVGNWJFZ3NWVUZCZW14SUxFVkJRWEZ0U0N4VlFVRnliVWdzUlVGQmFXNUlMRlZCUVdwdVNDeEZRVUUyYmtnc1ZVRkJOMjVJTEVWQlFYbHZTQ3hWUVVGNmIwZ3NSVUZCY1hCSUxGVkJRWEp3U0N4RlFVRnBjVWdzVlVGQmFuRklMRVZCUVRaeFNDeFZRVUUzY1Vnc1JVRkJlWEpJTEZWQlFYcHlTQ3hGUVVGeGMwZ3NWVUZCY25OSUxFVkJRV2wwU0N4VlFVRnFkRWdzUlVGQk5uUklMRlZCUVRkMFNDeEZRVUY1ZFVnc1ZVRkJlblZJTEVWQlFYRjJTQ3hWUVVGeWRrZ3NSVUZCYVhkSUxGVkJRV3AzU0N4RlFVRTJkMGdzVlVGQk4zZElMRVZCUVhsNFNDeFZRVUY2ZUVnc1JVRkJjWGxJTEZWQlFYSjVTQ3hGUVVGcGVrZ3NWVUZCYW5wSUxFVkJRVFo2U0N4VlFVRTNla2dzUlVGQmVUQklMRlZCUVhvd1NDeEZRVUZ4TVVnc1ZVRkJjakZJTEVWQlFXa3lTQ3hWUVVGcU1rZ3NSVUZCTmpKSUxGVkJRVGN5U0N4RlFVRjVNMGdzVlVGQmVqTklMRVZCUVhFMFNDeFZRVUZ5TkVnc1JVRkJhVFZJTEZWQlFXbzFTQ3hGUVVFMk5VZ3NWVUZCTnpWSUxFVkJRWGsyU0N4VlFVRjZOa2dzUlVGQmNUZElMRlZCUVhJM1NDeEZRVUZwT0Vnc1ZVRkJhamhJTEVWQlFUWTRTQ3hWUVVFM09FZ3NSVUZCZVRsSUxGVkJRWG81U0N4RlFVRnhLMGdzVlVGQmNpdElMRVZCUVdrdlNDeFZRVUZxTDBnc1JVRkJOaTlJTEZWQlFUY3ZTQ3hGUVVGNVowa3NWVUZCZW1kSkxFVkJRWEZvU1N4VlFVRnlhRWtzUlVGQmFXbEpMRlZCUVdwcFNTeEZRVUUyYVVrc1ZVRkJOMmxKTEVWQlFYbHFTU3hWUVVGNmFra3NSVUZCY1d0SkxGVkJRWEpyU1N4RlFVRnBiRWtzVlVGQmFteEpMRVZCUVRac1NTeFZRVUUzYkVrc1JVRkJlVzFKTEZWQlFYcHRTU3hGUVVGeGJra3NWVUZCY201SkxFVkJRV2x2U1N4VlFVRnFiMGtzUlVGQk5tOUpMRlZCUVRkdlNTeEZRVUY1Y0Vrc1ZVRkJlbkJKTEVWQlFYRnhTU3hWUVVGeWNVa3NSVUZCYVhKSkxGVkJRV3B5U1N4RlFVRTJja2tzVlVGQk4zSkpMRVZCUVhselNTeFZRVUY2YzBrc1JVRkJjWFJKTEZWQlFYSjBTU3hGUVVGcGRVa3NWVUZCYW5WSkxFVkJRVFoxU1N4VlFVRTNkVWtzUlVGQmVYWkpMRlZCUVhwMlNTeEZRVUZ4ZDBrc1ZVRkJjbmRKTEVWQlFXbDRTU3hWUVVGcWVFa3NSVUZCTm5oSkxGVkJRVGQ0U1N4RlFVRjVlVWtzVlVGQmVubEpMRVZCUVhGNlNTeFZRVUZ5ZWtrc1JVRkJhVEJKTEZWQlFXb3dTU3hGUVVFMk1Fa3NWVUZCTnpCSkxFVkJRWGt4U1N4VlFVRjZNVWtzUlVGQmNUSkpMRlZCUVhJeVNTeEZRVUZwTTBrc1ZVRkJhak5KTEVWQlFUWXpTU3hWUVVFM00wa3NSVUZCZVRSSkxGVkJRWG8wU1N4RlFVRnhOVWtzVlVGQmNqVkpMRVZCUVdrMlNTeFZRVUZxTmtrc1JVRkJOalpKTEZWQlFUYzJTU3hGUVVGNU4wa3NWVUZCZWpkSkxFVkJRWEU0U1N4VlFVRnlPRWtzUlVGQmFUbEpMRlZCUVdvNVNTeEZRVUUyT1Vrc1ZVRkJOemxKTEVWQlFYa3JTU3hWUVVGNkswa3NSVUZCY1M5SkxGVkJRWEl2U1N4RlFVRnBaMG9zVlVGQmFtZEtMRVZCUVRablNpeFZRVUUzWjBvc1JVRkJlV2hLTEZWQlFYcG9TaXhGUVVGeGFVb3NWVUZCY21sS0xFVkJRV2xxU2l4VlFVRnFha29zUlVGQk5tcEtMRlZCUVRkcVNpeEZRVUY1YTBvc1ZVRkJlbXRLTEVWQlFYRnNTaXhWUVVGeWJFb3NSVUZCYVcxS0xGVkJRV3B0U2l4RlFVRTJiVW9zVlVGQk4yMUtMRVZCUVhsdVNpeFZRVUY2Ymtvc1JVRkJjVzlLTEZWQlFYSnZTaXhGUVVGcGNFb3NWVUZCYW5CS0xFVkJRVFp3U2l4VlFVRTNjRW9zUlVGQmVYRktMRlZCUVhweFNpeEZRVUZ4Y2tvc1ZVRkJjbkpLTEVWQlFXbHpTaXhWUVVGcWMwb3NSVUZCTm5OS0xGVkJRVGR6U2l4RlFVRjVkRW9zVlVGQmVuUktMRVZCUVhGMVNpeFZRVUZ5ZFVvc1JVRkJhWFpLTEZWQlFXcDJTaXhGUVVFMmRrb3NWVUZCTjNaS0xFVkJRWGwzU2l4VlFVRjZkMG9zUlVGQmNYaEtMRlZCUVhKNFNpeEZRVUZwZVVvc1ZVRkJhbmxLTEVWQlFUWjVTaXhWUVVFM2VVb3NSVUZCZVhwS0xGVkJRWHA2U2l4RlFVRnhNRW9zVlVGQmNqQktMRVZCUVdreFNpeFZRVUZxTVVvc1JVRkJOakZLTEZWQlFUY3hTaXhGUVVGNU1rb3NWVUZCZWpKS0xFVkJRWEV6U2l4VlFVRnlNMG9zUlVGQmFUUktMRlZCUVdvMFNpeEZRVUUyTkVvc1ZVRkJOelJLTEVWQlFYazFTaXhWUVVGNk5Vb3NSVUZCY1RaS0xGVkJRWEkyU2l4RlFVRnBOMG9zVlVGQmFqZEtMRVZCUVRZM1NpeFZRVUUzTjBvc1JVRkJlVGhLTEZWQlFYbzRTaXhGUVVGeE9Vb3NWVUZCY2psS0xFVkJRV2tyU2l4VlFVRnFLMG9zUlVGQk5pdEtMRlZCUVRjclNpeEZRVUY1TDBvc1ZVRkJlaTlLTEVWQlFYRm5TeXhWUVVGeVowc3NSVUZCYVdoTExGVkJRV3BvU3l4RlFVRTJhRXNzVlVGQk4yaExMRVZCUVhscFN5eFZRVUY2YVVzc1JVRkJjV3BMTEZWQlFYSnFTeXhGUVVGcGEwc3NWVUZCYW10TExFVkJRVFpyU3l4VlFVRTNhMHNzUlVGQmVXeExMRlZCUVhwc1N5eEZRVUZ4YlVzc1ZVRkJjbTFMTEVWQlFXbHVTeXhWUVVGcWJrc3NSVUZCTm01TExGVkJRVGR1U3l4RlFVRjViMHNzVlVGQmVtOUxMRVZCUVhGd1N5eFZRVUZ5Y0Vzc1JVRkJhWEZMTEZWQlFXcHhTeXhGUVVFMmNVc3NWVUZCTjNGTExFVkJRWGx5U3l4VlFVRjZja3NzUlVGQmNYTkxMRlZCUVhKelN5eEZRVUZwZEVzc1ZVRkJhblJMTEVWQlFUWjBTeXhWUVVFM2RFc3NSVUZCZVhWTExGVkJRWHAxU3l4RlFVRnhka3NzVlVGQmNuWkxMRVZCUVdsM1N5eFZRVUZxZDBzc1JVRkJObmRMTEZWQlFUZDNTeXhGUVVGNWVFc3NWVUZCZW5oTExFVkJRWEY1U3l4VlFVRnllVXNzUlVGQmFYcExMRlZCUVdwNlN5eEZRVUUyZWtzc1ZVRkJOM3BMTEVWQlFYa3dTeXhWUVVGNk1Fc3NSVUZCY1RGTExGVkJRWEl4U3l4RlFVRnBNa3NzVlVGQmFqSkxMRVZCUVRZeVN5eFZRVUUzTWtzc1JVRkJlVE5MTEZWQlFYb3pTeXhGUVVGeE5Fc3NWVUZCY2pSTExFVkJRV2sxU3l4VlFVRnFOVXNzUlVGQk5qVkxMRlZCUVRjMVN5eEZRVUY1Tmtzc1ZVRkJlalpMTEVWQlFYRTNTeXhWUVVGeU4wc3NSVUZCYVRoTExGVkJRV280U3l4RlFVRTJPRXNzVlVGQk56aExMRVZCUVhrNVN5eFZRVUY2T1Vzc1JVRkJjU3RMTEZWQlFYSXJTeXhGUVVGcEwwc3NWVUZCYWk5TExFVkJRVFl2U3l4VlFVRTNMMHNzUlVGQmVXZE1MRlZCUVhwblRDeEZRVUZ4YUV3c1ZVRkJjbWhNTEVWQlFXbHBUQ3hWUVVGcWFVd3NSVUZCTm1sTUxGVkJRVGRwVEN4RlFVRjVha3dzVlVGQmVtcE1MRVZCUVhGclRDeFZRVUZ5YTB3c1JVRkJhV3hNTEZWQlFXcHNUQ3hGUVVFMmJFd3NWVUZCTjJ4TUxFVkJRWGx0VEN4VlFVRjZiVXdzUlVGQmNXNU1MRlZCUVhKdVRDeEZRVUZwYjB3c1ZVRkJhbTlNTEVWQlFUWnZUQ3hWUVVFM2Iwd3NSVUZCZVhCTUxGVkJRWHB3VEN4RlFVRnhjVXdzVlVGQmNuRk1MRVZCUVdseVRDeFZRVUZxY2t3c1JVRkJObkpNTEZWQlFUZHlUQ3hGUVVGNWMwd3NWVUZCZW5OTUxFVkJRWEYwVEN4VlFVRnlkRXdzUlVGQmFYVk1MRlZCUVdwMVRDeEZRVUUyZFV3c1ZVRkJOM1ZNTEVWQlFYbDJUQ3hWUVVGNmRrd3NSVUZCY1hkTUxGVkJRWEozVEN4RlFVRnBlRXdzVlVGQmFuaE1MRVZCUVRaNFRDeFZRVUUzZUV3c1JVRkJlWGxNTEZWQlFYcDVUQ3hGUVVGeGVrd3NWVUZCY25wTUxFVkJRV2t3VEN4VlFVRnFNRXdzUlVGQk5qQk1MRlZCUVRjd1RDeEZRVUY1TVV3c1ZVRkJlakZNTEVWQlFYRXlUQ3hWUVVGeU1rd3NSVUZCYVROTUxGVkJRV296VEN4RlFVRTJNMHdzVlVGQk56Tk1MRVZCUVhrMFRDeFZRVUY2TkV3c1JVRkJjVFZNTEZWQlFYSTFUQ3hGUVVGcE5rd3NWVUZCYWpaTUxFVkJRVFkyVEN4VlFVRTNOa3dzUlVGQmVUZE1MRlZCUVhvM1RDeEZRVUZ4T0V3c1ZVRkJjamhNTEVWQlFXazVUQ3hWUVVGcU9Vd3NSVUZCTmpsTUxGVkJRVGM1VEN4RlFVRjVLMHdzVlVGQmVpdE1MRVZCUVhFdlRDeFZRVUZ5TDB3c1JVRkJhV2ROTEZWQlFXcG5UU3hGUVVFMlowMHNWVUZCTjJkTkxFVkJRWGxvVFN4VlFVRjZhRTBzUlVGQmNXbE5MRlZCUVhKcFRTeEZRVUZwYWswc1ZVRkJhbXBOTEVWQlFUWnFUU3hWUVVFM2FrMHNSVUZCZVd0TkxGVkJRWHByVFN4RlFVRnhiRTBzVlVGQmNteE5MRVZCUVdsdFRTeFZRVUZxYlUwc1JVRkJObTFOTEZWQlFUZHRUU3hGUVVGNWJrMHNWVUZCZW01TkxFVkJRWEZ2VFN4VlFVRnliMDBzUlVGQmFYQk5MRlZCUVdwd1RTeEZRVUUyY0Uwc1ZVRkJOM0JOTEVWQlFYbHhUU3hWUVVGNmNVMHNSVUZCY1hKTkxGVkJRWEp5VFN4RlFVRnBjMDBzVlVGQmFuTk5MRVZCUVRaelRTeFZRVUUzYzAwc1JVRkJlWFJOTEZWQlFYcDBUU3hGUVVGeGRVMHNWVUZCY25WTkxFVkJRV2wyVFN4VlFVRnFkazBzUlVGQk5uWk5MRlZCUVRkMlRTeEZRVUY1ZDAwc1ZVRkJlbmROTEVWQlFYRjRUU3hWUVVGeWVFMHNSVUZCYVhsTkxGVkJRV3A1VFN4RlFVRTJlVTBzVlVGQk4zbE5MRVZCUVhsNlRTeFZRVUY2ZWswc1JVRkJjVEJOTEZWQlFYSXdUU3hGUVVGcE1VMHNWVUZCYWpGTkxFVkJRVFl4VFN4VlFVRTNNVTBzUlVGQmVUSk5MRlZCUVhveVRTeEZRVUZ4TTAwc1ZVRkJjak5OTEVWQlFXazBUU3hWUVVGcU5FMHNSVUZCTmpSTkxGVkJRVGMwVFN4RlFVRjVOVTBzVlVGQmVqVk5MRVZCUVhFMlRTeFZRVUZ5Tmswc1JVRkJhVGROTEZWQlFXbzNUU3hGUVVFMk4wMHNWVUZCTnpkTkxFVkJRWGs0VFN4VlFVRjZPRTBzUlVGQmNUbE5MRlZCUVhJNVRTeEZRVUZwSzAwc1ZVRkJhaXROTEVWQlFUWXJUU3hWUVVFM0swMHNSVUZCZVM5TkxGVkJRWG92VFN4RlFVRnhaMDRzVlVGQmNtZE9MRVZCUVdsb1RpeFZRVUZxYUU0c1JVRkJObWhPTEZWQlFUZG9UaXhGUVVGNWFVNHNWVUZCZW1sT0xFVkJRWEZxVGl4VlFVRnlhazRzUlVGQmFXdE9MRlZCUVdwclRpeEZRVUUyYTA0c1ZVRkJOMnRPTEVWQlFYbHNUaXhWUVVGNmJFNHNSVUZCY1cxT0xGVkJRWEp0VGl4RlFVRnBiazRzVlVGQmFtNU9MRVZCUVRadVRpeFZRVUUzYms0c1JVRkJlVzlPTEZWQlFYcHZUaXhGUVVGeGNFNHNWVUZCY25CT0xFVkJRV2x4VGl4VlFVRnFjVTRzUlVGQk5uRk9MRlZCUVRkeFRpeEZRVUY1Y2s0c1ZVRkJlbkpPTEVWQlFYRnpUaXhWUVVGeWMwNHNSVUZCYVhST0xGVkJRV3AwVGl4RlFVRTJkRTRzVlVGQk4zUk9MRVZCUVhsMVRpeFZRVUY2ZFU0c1JVRkJjWFpPTEZWQlFYSjJUaXhGUVVGcGQwNHNWVUZCYW5kT0xFVkJRVFozVGl4VlFVRTNkMDRzUlVGQmVYaE9MRlZCUVhwNFRpeEZRVUZ4ZVU0c1ZVRkJjbmxPTEVWQlFXbDZUaXhWUVVGcWVrNHNSVUZCTm5wT0xGVkJRVGQ2VGl4RlFVRjVNRTRzVlVGQmVqQk9MRVZCUVhFeFRpeFZRVUZ5TVU0c1JVRkJhVEpPTEZWQlFXb3lUaXhGUVVFMk1rNHNWVUZCTnpKT0xFVkJRWGt6VGl4VlFVRjZNMDRzUlVGQmNUUk9MRlZCUVhJMFRpeEZRVUZwTlU0c1ZVRkJhalZPTEVWQlFUWTFUaXhWUVVFM05VNHNSVUZCZVRaT0xGVkJRWG8yVGl4RlFVRnhOMDRzVlVGQmNqZE9MRVZCUVdrNFRpeFZRVUZxT0U0c1JVRkJOamhPTEZWQlFUYzRUaXhGUVVGNU9VNHNWVUZCZWpsT0xFVkJRWEVyVGl4VlFVRnlLMDRzUlVGQmFTOU9MRlZCUVdvdlRpeEZRVUUyTDA0c1ZVRkJOeTlPTEVWQlFYbG5UeXhWUVVGNlowOHNSVUZCY1doUExGVkJRWEpvVHl4RlFVRnBhVThzVlVGQmFtbFBMRVZCUVRacFR5eFZRVUUzYVU4c1JVRkJlV3BQTEZWQlFYcHFUeXhGUVVGeGEwOHNWVUZCY210UExFVkJRV2xzVHl4VlFVRnFiRThzUlVGQk5teFBMRlZCUVRkc1R5eEZRVUY1YlU4c1ZVRkJlbTFQTEVWQlFYRnVUeXhWUVVGeWJrOHNSVUZCYVc5UExGVkJRV3B2VHl4RlFVRTJiMDhzVlVGQk4yOVBMRVZCUVhsd1R5eFZRVUY2Y0U4c1JVRkJjWEZQTEZWQlFYSnhUeXhGUVVGcGNrOHNWVUZCYW5KUExFVkJRVFp5VHl4VlFVRTNjazhzUlVGQmVYTlBMRlZCUVhwelR5eEZRVUZ4ZEU4c1ZVRkJjblJQTEVWQlFXbDFUeXhWUVVGcWRVOHNSVUZCTm5WUExGVkJRVGQxVHl4RlFVRjVkazhzVlVGQmVuWlBMRVZCUVhGM1R5eFZRVUZ5ZDA4c1JVRkJhWGhQTEZWQlFXcDRUeXhGUVVFMmVFOHNWVUZCTjNoUExFVkJRWGw1VHl4VlFVRjZlVThzUlVGQmNYcFBMRlZCUVhKNlR5eEZRVUZwTUU4c1ZVRkJhakJQTEVWQlFUWXdUeXhWUVVFM01FOHNSVUZCZVRGUExGVkJRWG94VHl4RlFVRnhNazhzVlVGQmNqSlBMRVZCUVdrelR5eFZRVUZxTTA4c1JVRkJOak5QTEZWQlFUY3pUeXhGUVVGNU5FOHNWVUZCZWpSUExFVkJRWEUxVHl4VlFVRnlOVThzUlVGQmFUWlBMRlZCUVdvMlR5eEZRVUUyTms4c1ZVRkJOelpQTEVWQlFYazNUeXhWUVVGNk4wOHNSVUZCY1RoUExGVkJRWEk0VHl4RlFVRnBPVThzVlVGQmFqbFBMRVZCUVRZNVR5eFZRVUUzT1U4c1JVRkJlU3RQTEZWQlFYb3JUeXhGUVVGeEwwOHNWVUZCY2k5UExFVkJRV2xuVUN4VlFVRnFaMUFzUlVGQk5tZFFMRlZCUVRkblVDeEZRVUY1YUZBc1ZVRkJlbWhRTEVWQlFYRnBVQ3hWUVVGeWFWQXNSVUZCYVdwUUxGVkJRV3BxVUN4RlFVRTJhbEFzVlVGQk4ycFFMRVZCUVhsclVDeFZRVUY2YTFBc1JVRkJjV3hRTEZWQlFYSnNVQ3hGUVVGcGJWQXNWVUZCYW0xUUxFVkJRVFp0VUN4VlFVRTNiVkFzUlVGQmVXNVFMRlZCUVhwdVVDeEZRVUZ4YjFBc1ZVRkJjbTlRTEVWQlFXbHdVQ3hWUVVGcWNGQXNSVUZCTm5CUUxGVkJRVGR3VUN4RlFVRjVjVkFzVlVGQmVuRlFMRVZCUVhGeVVDeFZRVUZ5Y2xBc1JVRkJhWE5RTEZWQlFXcHpVQ3hGUVVFMmMxQXNWVUZCTjNOUUxFVkJRWGwwVUN4VlFVRjZkRkFzUlVGQmNYVlFMRlZCUVhKMVVDeEZRVUZwZGxBc1ZVRkJhblpRTEVWQlFUWjJVQ3hWUVVFM2RsQXNSVUZCZVhkUUxGVkJRWHAzVUN4RlFVRnhlRkFzVlVGQmNuaFFMRVZCUVdsNVVDeFZRVUZxZVZBc1JVRkJObmxRTEZWQlFUZDVVQ3hGUVVGNWVsQXNWVUZCZW5wUUxFVkJRWEV3VUN4VlFVRnlNRkFzUlVGQmFURlFMRlZCUVdveFVDeEZRVUUyTVZBc1ZVRkJOekZRTEVWQlFYa3lVQ3hWUVVGNk1sQXNSVUZCY1ROUUxGVkJRWEl6VUN4RlFVRnBORkFzVlVGQmFqUlFMRVZCUVRZMFVDeFZRVUUzTkZBc1JVRkJlVFZRTEZWQlFYbzFVQ3hGUVVGeE5sQXNWVUZCY2paUUxFVkJRV2szVUN4VlFVRnFOMUFzUlVGQk5qZFFMRlZCUVRjM1VDeEZRVUY1T0ZBc1ZVRkJlamhRTEVWQlFYRTVVQ3hWUVVGeU9WQXNSVUZCYVN0UUxGVkJRV29yVUN4RlFVRTJLMUFzVlVGQk55dFFMRVZCUVhrdlVDeFZRVUY2TDFBc1JVRkJjV2RSTEZWQlFYSm5VU3hGUVVGcGFGRXNWVUZCYW1oUkxFVkJRVFpvVVN4VlFVRTNhRkVzUlVGQmVXbFJMRlZCUVhwcFVTeEZRVUZ4YWxFc1ZVRkJjbXBSTEVWQlFXbHJVU3hWUVVGcWExRXNSVUZCTm10UkxGVkJRVGRyVVN4RlFVRjViRkVzVlVGQmVteFJMRVZCUVhGdFVTeFZRVUZ5YlZFc1JVRkJhVzVSTEZWQlFXcHVVU3hGUVVFMmJsRXNWVUZCTjI1UkxFVkJRWGx2VVN4VlFVRjZiMUVzUlVGQmNYQlJMRlZCUVhKd1VTeEZRVUZwY1ZFc1ZVRkJhbkZSTEVWQlFUWnhVU3hWUVVFM2NWRXNSVUZCZVhKUkxGVkJRWHB5VVN4RlFVRnhjMUVzVlVGQmNuTlJMRVZCUVdsMFVTeFZRVUZxZEZFc1JVRkJOblJSTEZWQlFUZDBVU3hGUVVGNWRWRXNWVUZCZW5WUkxFVkJRWEYyVVN4VlFVRnlkbEVzUlVGQmFYZFJMRlZCUVdwM1VTeEZRVUUyZDFFc1ZVRkJOM2RSTEVWQlFYbDRVU3hWUVVGNmVGRXNSVUZCY1hsUkxGVkJRWEo1VVN4RlFVRnBlbEVzVlVGQmFucFJMRVZCUVRaNlVTeFZRVUUzZWxFc1JVRkJlVEJSTEZWQlFYb3dVU3hGUVVGeE1WRXNWVUZCY2pGUkxFVkJRV2t5VVN4VlFVRnFNbEVzUlVGQk5qSlJMRlZCUVRjeVVTeEZRVUY1TTFFc1ZVRkJlak5STEVWQlFYRTBVU3hWUVVGeU5GRXNSVUZCYVRWUkxGVkJRV28xVVN4RlFVRTJOVkVzVlVGQk56VlJMRVZCUVhrMlVTeFZRVUY2TmxFc1JVRkJjVGRSTEZWQlFYSTNVU3hGUVVGcE9GRXNWVUZCYWpoUkxFVkJRVFk0VVN4VlFVRTNPRkVzUlVGQmVUbFJMRlZCUVhvNVVTeEZRVUZ4SzFFc1ZVRkJjaXRSTEVWQlFXa3ZVU3hWUVVGcUwxRXNSVUZCTmk5UkxGVkJRVGN2VVN4RlFVRjVaMUlzVlVGQmVtZFNMRVZCUVhGb1VpeFZRVUZ5YUZJc1JVRkJhV2xTTEZWQlFXcHBVaXhGUVVFMmFWSXNWVUZCTjJsU0xFVkJRWGxxVWl4VlFVRjZhbElzUlVGQmNXdFNMRlZCUVhKclVpeEZRVUZwYkZJc1ZVRkJhbXhTTEVWQlFUWnNVaXhWUVVFM2JGSXNSVUZCZVcxU0xGVkJRWHB0VWl4RlFVRnhibElzVlVGQmNtNVNMRVZCUVdsdlVpeFZRVUZxYjFJc1JVRkJObTlTTEZWQlFUZHZVaXhGUVVGNWNGSXNWVUZCZW5CU0xFVkJRWEZ4VWl4VlFVRnljVklzUlVGQmFYSlNMRlZCUVdweVVpeEZRVUUyY2xJc1ZVRkJOM0pTTEVWQlFYbHpVaXhWUVVGNmMxSXNSVUZCY1hSU0xGVkJRWEowVWl4RlFVRnBkVklzVlVGQmFuVlNMRVZCUVRaMVVpeFZRVUUzZFZJc1JVRkJlWFpTTEZWQlFYcDJVaXhGUVVGeGQxSXNWVUZCY25kU0xFVkJRV2w0VWl4VlFVRnFlRklzUlVGQk5uaFNMRlZCUVRkNFVpeEZRVUY1ZVZJc1ZVRkJlbmxTTEVWQlFYRjZVaXhWUVVGeWVsSXNSVUZCYVRCU0xGVkJRV293VWl4RlFVRTJNRklzVlVGQk56QlNMRVZCUVhreFVpeFZRVUY2TVZJc1JVRkJjVEpTTEZWQlFYSXlVaXhGUVVGcE0xSXNWVUZCYWpOU0xFVkJRVFl6VWl4VlFVRTNNMUlzUlVGQmVUUlNMRlZCUVhvMFVpeEZRVUZ4TlZJc1ZVRkJjalZTTEVWQlFXazJVaXhWUVVGcU5sSXNSVUZCTmpaU0xGVkJRVGMyVWl4RlFVRjVOMUlzVlVGQmVqZFNMRVZCUVhFNFVpeFZRVUZ5T0ZJc1JVRkJhVGxTTEZWQlFXbzVVaXhGUVVFMk9WSXNWVUZCTnpsU0xFVkJRWGtyVWl4VlFVRjZLMUlzUlVGQmNTOVNMRlZCUVhJdlVpeEZRVUZwWjFNc1ZVRkJhbWRUTEVWQlFUWm5VeXhWUVVFM1oxTXNSVUZCZVdoVExGVkJRWHBvVXl4RlFVRnhhVk1zVlVGQmNtbFRMRVZCUVdscVV5eFZRVUZxYWxNc1JVRkJObXBUTEZWQlFUZHFVeXhGUVVGNWExTXNWVUZCZW10VExFVkJRWEZzVXl4VlFVRnliRk1zUlVGQmFXMVRMRlZCUVdwdFV5eEZRVUUyYlZNc1ZVRkJOMjFUTEVWQlFYbHVVeXhWUVVGNmJsTXNSVUZCY1c5VExGVkJRWEp2VXl4RlFVRnBjRk1zVlVGQmFuQlRMRVZCUVRad1V5eFZRVUUzY0ZNc1JVRkJlWEZUTEZWQlFYcHhVeXhGUVVGeGNsTXNWVUZCY25KVExFVkJRV2x6VXl4VlFVRnFjMU1zUlVGQk5uTlRMRlZCUVRkelV5eEZRVUY1ZEZNc1ZVRkJlblJUTEVWQlFYRjFVeXhWUVVGeWRWTXNSVUZCYVhaVExGVkJRV3AyVXl4RlFVRTJkbE1zVlVGQk4zWlRMRVZCUVhsM1V5eFZRVUY2ZDFNc1JVRkJjWGhUTEZWQlFYSjRVeXhGUVVGcGVWTXNWVUZCYW5sVExFVkJRVFo1VXl4VlFVRTNlVk1zUlVGQmVYcFRMRlZCUVhwNlV5eEZRVUZ4TUZNc1ZVRkJjakJUTEVWQlFXa3hVeXhWUVVGcU1WTXNSVUZCTmpGVExGVkJRVGN4VXl4RlFVRjVNbE1zVlVGQmVqSlRMRVZCUVhFelV5eFZRVUZ5TTFNc1JVRkJhVFJUTEZWQlFXbzBVeXhGUVVFMk5GTXNWVUZCTnpSVExFVkJRWGsxVXl4VlFVRjZOVk1zUlVGQmNUWlRMRlZCUVhJMlV5eEZRVUZwTjFNc1ZVRkJhamRUTEVWQlFUWTNVeXhWUVVFM04xTXNSVUZCZVRoVExGVkJRWG80VXl4RlFVRnhPVk1zVlVGQmNqbFRMRVZCUVdrclV5eFZRVUZxSzFNc1JVRkJOaXRUTEZWQlFUY3JVeXhGUVVGNUwxTXNWVUZCZWk5VExFVkJRWEZuVkN4VlFVRnlaMVFzUlVGQmFXaFVMRlZCUVdwb1ZDeEZRVUUyYUZRc1ZVRkJOMmhVTEVWQlFYbHBWQ3hWUVVGNmFWUXNSVUZCY1dwVUxGVkJRWEpxVkN4RlFVRnBhMVFzVlVGQmFtdFVMRVZCUVRaclZDeFZRVUUzYTFRc1JVRkJlV3hVTEZWQlFYcHNWQ3hGUVVGeGJWUXNWVUZCY20xVUxFVkJRV2x1VkN4VlFVRnFibFFzUlVGQk5tNVVMRlZCUVRkdVZDeEZRVUY1YjFRc1ZVRkJlbTlVTEVWQlFYRndWQ3hWUVVGeWNGUXNSVUZCYVhGVUxGVkJRV3B4VkN4RlFVRTJjVlFzVlVGQk4zRlVMRVZCUVhseVZDeFZRVUY2Y2xRc1JVRkJjWE5VTEZWQlFYSnpWQ3hGUVVGcGRGUXNWVUZCYW5SVUxFVkJRVFowVkN4VlFVRTNkRlFzUlVGQmVYVlVMRlZCUVhwMVZDeEZRVUZ4ZGxRc1ZVRkJjblpVTEVWQlFXbDNWQ3hWUVVGcWQxUXNSVUZCTm5kVUxGVkJRVGQzVkN4RlFVRjVlRlFzVlVGQmVuaFVMRVZCUVhGNVZDeFZRVUZ5ZVZRc1JVRkJhWHBVTEZWQlFXcDZWQ3hGUVVFMmVsUXNWVUZCTjNwVUxFVkJRWGt3VkN4VlFVRjZNRlFzUlVGQmNURlVMRlZCUVhJeFZDeEZRVUZwTWxRc1ZVRkJhakpVTEVWQlFUWXlWQ3hWUVVFM01sUXNSVUZCZVROVUxGVkJRWG96VkN4RlFVRnhORlFzVlVGQmNqUlVMRVZCUVdrMVZDeFZRVUZxTlZRc1JVRkJOalZVTEZWQlFUYzFWQ3hGUVVGNU5sUXNWVUZCZWpaVUxFVkJRWEUzVkN4VlFVRnlOMVFzUlVGQmFUaFVMRlZCUVdvNFZDeEZRVUUyT0ZRc1ZVRkJOemhVTEVWQlFYazVWQ3hWUVVGNk9WUXNSVUZCY1N0VUxGVkJRWElyVkN4RlFVRnBMMVFzVlVGQmFpOVVMRVZCUVRZdlZDeFZRVUUzTDFRc1JVRkJlV2RWTEZWQlFYcG5WU3hGUVVGeGFGVXNWVUZCY21oVkxFVkJRV2xwVlN4VlFVRnFhVlVzUlVGQk5tbFZMRlZCUVRkcFZTeEZRVUY1YWxVc1ZVRkJlbXBWTEVWQlFYRnJWU3hWUVVGeWExVXNSVUZCYVd4VkxGVkJRV3BzVlN4RlFVRTJiRlVzVlVGQk4yeFZMRVZCUVhsdFZTeFZRVUY2YlZVc1JVRkJjVzVWTEZWQlFYSnVWU3hGUVVGcGIxVXNWVUZCYW05VkxFVkJRVFp2VlN4VlFVRTNiMVVzUlVGQmVYQlZMRlZCUVhwd1ZTeEZRVUZ4Y1ZVc1ZVRkJjbkZWTEVWQlFXbHlWU3hWUVVGcWNsVXNSVUZCTm5KVkxGVkJRVGR5VlN4RlFVRjVjMVVzVlVGQmVuTlZMRVZCUVhGMFZTeFZRVUZ5ZEZVc1JVRkJhWFZWTEZWQlFXcDFWU3hGUVVFMmRWVXNWVUZCTjNWVkxFVkJRWGwyVlN4VlFVRjZkbFVzUlVGQmNYZFZMRlZCUVhKM1ZTeEZRVUZwZUZVc1ZVRkJhbmhWTEVWQlFUWjRWU3hWUVVFM2VGVXNSVUZCZVhsVkxGVkJRWHA1VlN4RlFVRnhlbFVzVlVGQmNucFZMRVZCUVdrd1ZTeFZRVUZxTUZVc1JVRkJOakJWTEZWQlFUY3dWU3hGUVVGNU1WVXNWVUZCZWpGVkxFVkJRWEV5VlN4VlFVRnlNbFVzUlVGQmFUTlZMRlZCUVdvelZTeEZRVUUyTTFVc1ZVRkJOek5WTEVWQlFYazBWU3hWUVVGNk5GVXNSVUZCY1RWVkxGVkJRWEkxVlN4RlFVRnBObFVzVlVGQmFqWlZMRVZCUVRZMlZTeFZRVUUzTmxVc1JVRkJlVGRWTEZWQlFYbzNWU3hGUVVGeE9GVXNWVUZCY2poVkxFVkJRV2s1VlN4VlFVRnFPVlVzUlVGQk5qbFZMRlZCUVRjNVZTeEZRVUY1SzFVc1ZVRkJlaXRWTEVWQlFYRXZWU3hWUVVGeUwxVXNSVUZCYVdkV0xGVkJRV3BuVml4RlFVRTJaMVlzVlVGQk4yZFdMRVZCUVhsb1ZpeFZRVUY2YUZZc1JVRkJjV2xXTEZWQlFYSnBWaXhGUVVGcGFsWXNWVUZCYW1wV0xFVkJRVFpxVml4VlFVRTNhbFlzUlVGQmVXdFdMRlZCUVhwclZpeEZRVUZ4YkZZc1ZVRkJjbXhXTEVWQlFXbHRWaXhWUVVGcWJWWXNSVUZCTm0xV0xGVkJRVGR0Vml4RlFVRjVibFlzVlVGQmVtNVdMRVZCUVhGdlZpeFZRVUZ5YjFZc1JVRkJhWEJXTEZWQlFXcHdWaXhGUVVFMmNGWXNWVUZCTjNCV0xFVkJRWGx4Vml4VlFVRjZjVllzUlVGQmNYSldMRlZCUVhKeVZpeEZRVUZwYzFZc1ZVRkJhbk5XTEVWQlFUWnpWaXhWUVVFM2MxWXNSVUZCZVhSV0xGVkJRWHAwVml4RlFVRnhkVllzVlVGQmNuVldMRVZCUVdsMlZpeFZRVUZxZGxZc1JVRkJOblpXTEZWQlFUZDJWaXhGUVVGNWQxWXNWVUZCZW5kV0xFVkJRWEY0Vml4VlFVRnllRllzUlVGQmFYbFdMRlZCUVdwNVZpeEZRVUUyZVZZc1ZVRkJOM2xXTEVWQlFYbDZWaXhWUVVGNmVsWXNSVUZCY1RCV0xGVkJRWEl3Vml4RlFVRnBNVllzVlVGQmFqRldMRVZCUVRZeFZpeFZRVUUzTVZZc1JVRkJlVEpXTEZWQlFYb3lWaXhGUVVGeE0xWXNWVUZCY2pOV0xFVkJRV2swVml4VlFVRnFORllzUlVGQk5qUldMRlZCUVRjMFZpeEZRVUY1TlZZc1ZVRkJlalZXTEVWQlFYRTJWaXhWUVVGeU5sWXNSVUZCYVRkV0xGVkJRV28zVml4RlFVRTJOMVlzVlVGQk56ZFdMRVZCUVhrNFZpeFZRVUY2T0ZZc1JVRkJjVGxXTEZWQlFYSTVWaXhGUVVGcEsxWXNWVUZCYWl0V0xFVkJRVFlyVml4VlFVRTNLMVlzUlVGQmVTOVdMRlZCUVhvdlZpeEZRVUZ4WjFjc1ZVRkJjbWRYTEVWQlFXbG9WeXhWUVVGcWFGY3NSVUZCTm1oWExGVkJRVGRvVnl4RlFVRjVhVmNzVlVGQmVtbFhMRVZCUVhGcVZ5eFZRVUZ5YWxjc1JVRkJhV3RYTEZWQlFXcHJWeXhGUVVFMmExY3NWVUZCTjJ0WExFVkJRWGxzVnl4VlFVRjZiRmNzUlVGQmNXMVhMRlZCUVhKdFZ5eEZRVUZwYmxjc1ZVRkJhbTVYTEVWQlFUWnVWeXhWUVVFM2JsY3NSVUZCZVc5WExGVkJRWHB2Vnl4RlFVRnhjRmNzVlVGQmNuQlhMRVZCUVdseFZ5eFZRVUZxY1Zjc1JVRkJObkZYTEZWQlFUZHhWeXhGUVVGNWNsY3NWVUZCZW5KWExFVkJRWEZ6Vnl4VlFVRnljMWNzUlVGQmFYUlhMRlZCUVdwMFZ5eEZRVUUyZEZjc1ZVRkJOM1JYTEVWQlFYbDFWeXhWUVVGNmRWY3NSVUZCY1haWExGVkJRWEoyVnl4RlFVRnBkMWNzVlVGQmFuZFhMRVZCUVRaM1Z5eFZRVUUzZDFjc1JVRkJlWGhYTEZWQlFYcDRWeXhGUVVGeGVWY3NWVUZCY25sWExFVkJRV2w2Vnl4VlFVRnFlbGNzUlVGQk5ucFhMRlZCUVRkNlZ5eEZRVUY1TUZjc1ZVRkJlakJYTEVWQlFYRXhWeXhWUVVGeU1WY3NSVUZCYVRKWExGVkJRV295Vnl4RlFVRTJNbGNzVlVGQk56SlhMRVZCUVhrelZ5eFZRVUY2TTFjc1JVRkJjVFJYTEZWQlFYSTBWeXhGUVVGcE5WY3NWVUZCYWpWWExFVkJRVFkxVnl4VlFVRTNOVmNzUlVGQmVUWlhMRlZCUVhvMlZ5eEZRVUZ4TjFjc1ZVRkJjamRYTEVWQlFXazRWeXhWUVVGcU9GY3NSVUZCTmpoWExGVkJRVGM0Vnl4RlFVRjVPVmNzVlVGQmVqbFhMRVZCUVhFclZ5eFZRVUZ5SzFjc1JVRkJhUzlYTEZWQlFXb3ZWeXhGUVVFMkwxY3NWVUZCTnk5WExFVkJRWGxuV0N4VlFVRjZaMWdzUlVGQmNXaFlMRlZCUVhKb1dDeEZRVUZwYVZnc1ZVRkJhbWxZTEVWQlFUWnBXQ3hWUVVFM2FWZ3NSVUZCZVdwWUxGVkJRWHBxV0N4RlFVRnhhMWdzVlVGQmNtdFlMRVZCUVdsc1dDeFZRVUZxYkZnc1JVRkJObXhZTEZWQlFUZHNXQ3hGUVVGNWJWZ3NWVUZCZW0xWUxFVkJRWEZ1V0N4VlFVRnlibGdzUlVGQmFXOVlMRlZCUVdwdldDeEZRVUUyYjFnc1ZVRkJOMjlZTEVWQlFYbHdXQ3hWUVVGNmNGZ3NSVUZCY1hGWUxGVkJRWEp4V0N4RlFVRnBjbGdzVlVGQmFuSllMRVZCUVRaeVdDeFZRVUUzY2xnc1JVRkJlWE5ZTEZWQlFYcHpXQ3hGUVVGeGRGZ3NWVUZCY25SWU8wbEJRMjVDTEZWQlFVRXNSMEZCWVR0QlFVTmlMRmxCUVU4c1IwRkJVRHRCUVVGQkxGZEJRMU1zVDBGRVZEdFJRVVZSTEZWQlFVRXNSMEZCWVR0QlFVUmFPMEZCUkZRc1YwRkhVeXhSUVVoVU8xRkJTVkVzVlVGQlFTeEhRVUZaTzBGQlNuQkNPMEZCUzBFc1YwRkJUenRGUVZSSkxFTkJZbVk3T3p0QlFYZENTaXhOUVVGTkxFTkJRVU1zVDBGQlVDeEhRVUZwUWlKOVxuIl19
