(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
var ArkMainDialog, ArkScrollView, eventManager, eventNames, g_click_times;

eventManager = require('../event/ArkEventManager.coffee');

eventNames = require('../event/ArkEventNames.coffee');

ArkScrollView = require('../tools/ScrollView.coffee');

g_click_times = 0;

ArkMainDialog = (function() {
  function ArkMainDialog() {}

  ArkMainDialog.prototype.onDidLoadFromCCB = function() {
    this._datTable = [];
    this._reset();
    return this.init();
  };

  ArkMainDialog.prototype._reset = function() {
    this._scrollView = null;
    this._stockCodeEditBox = null;
    return this._yearsEditBox = null;
  };

  ArkMainDialog.prototype.init = function() {
    var i, len, textFileName, textFileNameTable;
    textFileNameTable = ["ccb_profitAddRatio", "ccb_roe", "ccb_pe", "ccb_year", "ccb_stockCode", "ccb_advanceReceipts", "ccb_receivableTurnoverDays", "ccb_netProfitQuality"];
    for (i = 0, len = textFileNameTable.length; i < len; i++) {
      textFileName = textFileNameTable[i];
      this["_" + textFileName] = this._createEditBox(this["" + textFileName]);
      this.rootNode.addChild(this["_" + textFileName]);
    }
    this._initData();
    this._scrollView = ArkScrollView.createScrollView(this.ccb_scrollView);
    this.rootNode.addChild(this._scrollView);
    ArkScrollView.initFromContainer(this._scrollView, this.ccb_result);
  };

  ArkMainDialog.prototype._initData = function() {
    this._ccb_stockCode.setString("600519");
    this._ccb_year.setString(global.year + "");
    this._ccb_profitAddRatio.setString("12");
    this._ccb_roe.setString("15");
    this._ccb_pe.setString("60");
    this._ccb_advanceReceipts.setString("5");
    this._ccb_receivableTurnoverDays.setString("30");
    return this._ccb_netProfitQuality.setString("0.8");
  };

  ArkMainDialog.prototype._createEditBox = function(node) {
    var editBox;
    editBox = new cc.EditBox(cc.size(100, 50));
    editBox.setAnchorPoint(cc.p(0, 0.5));
    editBox.setPosition(node.getPosition());
    editBox.setInputMode(cc.EDITBOX_INPUT_MODE_SINGLELINE);
    editBox.setReturnType(cc.KEYBOARD_RETURNTYPE_DONE);
    editBox.setInputFlag(cc.EDITBOX_INPUT_FLAG_INITIAL_CAPS_SENTENCE);
    editBox.setMaxLength(13);
    editBox.setFont("Arial", 26);
    editBox.setFontColor(cc.color(100, 100, 255, 255));
    return editBox;
  };

  ArkMainDialog.prototype.showResult = function(result) {
    this.ccb_result.setString(result);
    ArkScrollView.initFromContainer(this._scrollView, this.ccb_result);
    return ArkScrollView.scrollJumpToTop(this._scrollView);
  };

  ArkMainDialog.prototype.onLoadZz500 = function() {
    return eventManager.send(eventNames.GAME_LOAD_TABLE, "zz500");
  };

  ArkMainDialog.prototype.onLoadZz1000 = function() {
    return eventManager.send(eventNames.GAME_LOAD_TABLE, "zz1000");
  };

  ArkMainDialog.prototype.onFilter = function() {
    var years;
    years = this._ccb_year.getString();
    global.year = years;
    return eventManager.send(eventNames.GAME_FILTER, {
      profitAddRatio: parseFloat(this._ccb_profitAddRatio.getString()),
      roe: parseFloat(this._ccb_roe.getString()),
      pe: parseFloat(this._ccb_pe.getString()),
      advanceReceipt: parseFloat(this._ccb_advanceReceipts.getString()),
      receivableTurnoverDays: parseFloat(this._ccb_receivableTurnoverDays.getString()),
      netProfitQuality: parseFloat(this._ccb_netProfitQuality.getString()),
      callback: (function(_this) {
        return function(str) {
          return _this.showResult(str);
        };
      })(this)
    });
  };

  ArkMainDialog.prototype.onCalc = function() {
    var stockCode, years;
    stockCode = this._ccb_stockCode.getString();
    years = this._ccb_year.getString();
    global.year = years;
    return eventManager.send(eventNames.GAME_GET_RESULT, {
      stockCode: stockCode,
      callback: (function(_this) {
        return function(str) {
          return _this.showResult(str);
        };
      })(this)
    });
  };

  cc.BuilderReader.registerController("ArkMainDialog", new ArkMainDialog());

  return ArkMainDialog;

})();

module.exports = cc.BuilderReader.load("res/main.ccbi");


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../event/ArkEventManager.coffee":3,"../event/ArkEventNames.coffee":4,"../tools/ScrollView.coffee":13}],2:[function(require,module,exports){
(function (global){
var BalanceSheet, CashFlowStatement, GameLogic, ProfitStatement, UserData, eventManager, eventNames, sceneManager, utils;

sceneManager = require('../tools/ArkSceneManager.coffee');

eventManager = require('../event/ArkEventManager.coffee');

eventNames = require('../event/ArkEventNames.coffee');

UserData = require('../model/ArkUserData.coffee');

BalanceSheet = require('../model/BalanceSheet.coffee');

ProfitStatement = require('../model/ProfitStatement.coffee');

CashFlowStatement = require('../model/CashFlowStatement.coffee');

utils = require('../tools/utils.coffee');

GameLogic = (function() {
  function GameLogic() {}

  GameLogic.prototype.init = function(_rootNode) {
    this._rootNode = _rootNode;
    this._balanceObj = {};
    this._profitObj = {};
    this._cashFlowObj = {};
    this._registerEvents();
    return this._initTable(global.dir);
  };

  GameLogic.prototype._registerEvents = function() {
    eventManager.listen(eventNames.GAME_GET_RESULT, (function(_this) {
      return function(options) {
        return typeof options.callback === "function" ? options.callback(_this.getStockDetailInfo(options.stockCode)) : void 0;
      };
    })(this));
    eventManager.listen(eventNames.GAME_LOAD_TABLE, (function(_this) {
      return function(dir) {
        return _this._initTable(dir);
      };
    })(this));
    return eventManager.listen(eventNames.GAME_FILTER, (function(_this) {
      return function(options) {
        var advanceReceipt, netProfitQuality, pe, profitAddRatio, receivableTurnoverDays, roe;
        profitAddRatio = options.profitAddRatio;
        roe = options.roe;
        pe = options.pe;
        advanceReceipt = options.advanceReceipt;
        receivableTurnoverDays = options.receivableTurnoverDays;
        netProfitQuality = options.netProfitQuality;
        return typeof options.callback === "function" ? options.callback(_this.findMatchConditionStock(profitAddRatio, roe, pe, advanceReceipt, receivableTurnoverDays, netProfitQuality)) : void 0;
      };
    })(this));
  };

  GameLogic.prototype._filterAdvanceReceiptsPercent = function(stockCode, advanceReceipt) {
    var percent;
    percent = this._getAdvanceReceiptsPercent(stockCode);
    if (percent >= advanceReceipt) {
      return true;
    }
    return false;
  };

  GameLogic.prototype._getAdvanceReceiptsPercent = function(stockCode) {
    return this._balanceObj[stockCode].getAdvanceReceiptsPercent();
  };

  GameLogic.prototype._filterReceivableTurnoverDays = function(stockCode, receivableTurnoverDays) {
    var day;
    day = this._getReceivableTurnOverDays(stockCode);
    if (day < receivableTurnoverDays) {
      return true;
    }
    return false;
  };

  GameLogic.prototype._getReceivableTurnOverDays = function(stockCode) {
    var day, days, daysTable, i, inComeValueTable, index, len, receivableValue, receivableValueTable;
    receivableValueTable = this._balanceObj[stockCode].getReceivableValue();
    inComeValueTable = this._profitObj[stockCode].getIncomeValue();
    daysTable = [];
    for (index = i = 0, len = receivableValueTable.length; i < len; index = ++i) {
      receivableValue = receivableValueTable[index];
      if (index >= receivableValueTable.length - 1) {
        break;
      }
      days = 360 / inComeValueTable[index] * (receivableValue + receivableValueTable[index + 1]) / 2;
      daysTable.push(days);
    }
    day = utils.getAverage(daysTable);
    return day;
  };

  GameLogic.prototype._filterNetProfitQuality = function(stockCode, netProfitQuality) {
    var aveRatio, ratioTable;
    ratioTable = this._getNetProfitQuality(stockCode);
    aveRatio = utils.getAverage(ratioTable);
    if (aveRatio > netProfitQuality) {
      return true;
    }
    return false;
  };

  GameLogic.prototype._filterROE = function(stockCode, needRoe) {
    var aveRoe, roeTable;
    roeTable = this._getROE(stockCode);
    aveRoe = utils.getAverage(roeTable);
    if (aveRoe > needRoe) {
      return true;
    }
    return false;
  };

  GameLogic.prototype._filterProfitAddRatio = function(stockCode, needRatio) {
    var profitAddRatio;
    profitAddRatio = this._profitObj[stockCode].getNetProfitAddRatio();
    if (profitAddRatio > needRatio) {
      return true;
    }
    return false;
  };

  GameLogic.prototype._filterPE = function(stockCode, maxPe) {
    var pe;
    pe = this._profitObj[stockCode].getPE();
    if ((0 < pe && pe < maxPe)) {
      return true;
    }
    return false;
  };

  GameLogic.prototype._getStockInfo = function(stockCode) {
    var PE, aveRoe, baseInfo, profitAddRatio, roeTable;
    baseInfo = this._profitObj[stockCode].getBaseInfo();
    profitAddRatio = this._profitObj[stockCode].getNetProfitAddRatio();
    roeTable = this._getROE(stockCode);
    aveRoe = utils.getAverage(roeTable);
    PE = this._profitObj[stockCode].getPE();
    return utils.addTab(stockCode) + utils.addTab(baseInfo) + utils.addTab(profitAddRatio) + utils.addTab(aveRoe) + utils.addTab("PE:" + PE) + utils.addTab(utils.getAverage(this._getNetProfitQuality(stockCode))) + utils.addTab("统计时间: " + this._balanceObj[stockCode].getExistYears()) + "\n";
  };

  GameLogic.prototype.findMatchConditionStock = function(profitAddRatio, roe, pe, advanceReceipt, receivableTurnoverDays, netProfitQuality) {
    var i, len, matchStockTable, ref, stockCode;
    matchStockTable = [];
    ref = utils.getStockTable(global.dir);
    for (i = 0, len = ref.length; i < len; i++) {
      stockCode = ref[i];
      stockCode = stockCode.slice(2, 8);
      if (!this._filterProfitAddRatio(stockCode, profitAddRatio)) {
        continue;
      }
      if (!this._filterROE(stockCode, roe)) {
        continue;
      }
      if (!this._filterAdvanceReceiptsPercent(stockCode, advanceReceipt)) {
        continue;
      }
      if (!this._filterReceivableTurnoverDays(stockCode, receivableTurnoverDays)) {
        continue;
      }
      if (!this._filterNetProfitQuality(stockCode, netProfitQuality)) {
        continue;
      }
      matchStockTable.push(stockCode);
    }
    return this._getStockTableInfo(matchStockTable);
  };

  GameLogic.prototype._getStockTableInfo = function(matchStockTable) {
    var i, len, stockCode, stockInfoTable;
    stockInfoTable = ["股票代码 \t 基本信息 \t 所属行业 \t 利润复合增长率 \t 平均ROE \t PE \t 现金流 \t  总数:" + matchStockTable.length + "\n"];
    for (i = 0, len = matchStockTable.length; i < len; i++) {
      stockCode = matchStockTable[i];
      stockInfoTable.push(this._getStockInfo(stockCode));
    }
    console.log(stockInfoTable);
    return stockInfoTable;
  };

  GameLogic.prototype._getROE = function(stockCode) {
    var i, index, len, netAssets, netAssetsTable, netProfitsTable, roe, roeTable;
    netAssetsTable = this._balanceObj[stockCode].getNetAssets();
    netProfitsTable = this._profitObj[stockCode].getNetProfitTable();
    roeTable = [];
    for (index = i = 0, len = netAssetsTable.length; i < len; index = ++i) {
      netAssets = netAssetsTable[index];
      if (index >= netAssetsTable.length - 1) {
        break;
      }
      roe = ((netProfitsTable[index] / ((netAssets + netAssetsTable[index + 1]) / 2)) * 100).toFixed(2);
      roeTable.push(roe + "\t");
    }
    return roeTable;
  };

  GameLogic.prototype._initTable = function(dir) {
    var callback, stockTable, totalIndex;
    totalIndex = 0;
    stockTable = utils.getStockTable(dir);
    callback = (function(_this) {
      return function() {
        var i, index, results, stockCode;
        console.log("Arkad loading ");
        results = [];
        for (index = i = 0; i < 10; index = ++i) {
          if (totalIndex >= stockTable.length) {
            _this._rootNode.unschedule(callback);
            console.log("Arkad load over");
            break;
          }
          stockCode = stockTable[totalIndex];
          stockCode = stockCode.slice(2, 8);
          _this._balanceObj[stockCode] = new BalanceSheet(dir, stockCode);
          _this._profitObj[stockCode] = new ProfitStatement(dir, stockCode);
          _this._cashFlowObj[stockCode] = new CashFlowStatement(dir, stockCode);
          results.push(totalIndex++);
        }
        return results;
      };
    })(this);
    this._rootNode.schedule(callback, 3, 100);
    return callback();
  };

  GameLogic.prototype.getStockDetailInfo = function(stockCode) {
    var infoTable;
    infoTable = [];
    if (this._profitObj[stockCode] == null) {
      return infoTable;
    }
    infoTable.push("基本信息:   " + this._profitObj[stockCode].getBaseInfo() + "\n");
    infoTable.push("年净利润增长率:   " + this._profitObj[stockCode].getNetProfitYoy() + "\n");
    infoTable.push("净利润复合增长率:   " + this._profitObj[stockCode].getNetProfitAddRatio() + "\n");
    infoTable.push("历年ROE:   " + this._getROE(stockCode) + ("平均: " + (utils.getAverage(this._getROE(stockCode)))) + "\n");
    infoTable.push("PE:   " + this._profitObj[stockCode].getPE() + "\n");
    infoTable.push("现金流量比净利润:   " + this._getNetProfitQuality(stockCode) + ("平均:" + (utils.getAverage(this._getNetProfitQuality(stockCode))) + " ") + "\n");
    infoTable.push("应收账款周转天数: " + (this._getReceivableTurnOverDays(stockCode)) + " \n");
    infoTable.push("预收账款占总资产比例: " + (this._getAdvanceReceiptsPercent(stockCode)));
    console.log(infoTable);
    return infoTable;
  };

  GameLogic.prototype._getNetProfitQuality = function(stockCode) {
    var i, index, len, netProfit, netProfitTable, ratioTable, workCashFlowTable;
    netProfitTable = this._profitObj[stockCode].getNetProfitTable();
    workCashFlowTable = this._cashFlowObj[stockCode].getWorkCashFlow();
    ratioTable = [];
    for (index = i = 0, len = netProfitTable.length; i < len; index = ++i) {
      netProfit = netProfitTable[index];
      ratioTable.push((workCashFlowTable[index] / netProfit).toFixed(2));
    }
    return ratioTable;
  };

  return GameLogic;

})();

module.exports = GameLogic;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../event/ArkEventManager.coffee":3,"../event/ArkEventNames.coffee":4,"../model/ArkUserData.coffee":7,"../model/BalanceSheet.coffee":8,"../model/CashFlowStatement.coffee":9,"../model/ProfitStatement.coffee":10,"../tools/ArkSceneManager.coffee":12,"../tools/utils.coffee":14}],3:[function(require,module,exports){
var EventManager;

EventManager = {
  send: function(eventName, data) {
    var event;
    event = new cc.EventCustom(eventName);
    if (data !== null) {
      event.setUserData(data);
    }
    return cc.eventManager.dispatchEvent(event);
  },
  listen: function(eventName, listenFunc, nodeOrPriority) {
    var ccListener;
    if (nodeOrPriority == null) {
      nodeOrPriority = 1;
    }
    ccListener = cc.EventListener.create({
      event: cc.EventListener.CUSTOM,
      eventName: eventName,
      callback: function(event) {
        return listenFunc(event.getUserData(), event);
      }
    });
    return cc.eventManager.addListener(ccListener, nodeOrPriority);
  }
};

module.exports = EventManager;


},{}],4:[function(require,module,exports){
var EventNames;

EventNames = {
  GAME_START: "game.start",
  GAME_END: "game.end",
  GAME_NEXT_LEVEL: "game.next.level",
  GAME_GET_RESULT: "game.get.result",
  GAME_INIT_TABLE: "game.init.table",
  GAME_FILTER: "game.filter",
  GAME_LOAD_TABLE: "game.load.table"
};

module.exports = EventNames;


},{}],5:[function(require,module,exports){
(function (global){
global.year = 6;

global.dir = "zz1000";

global.count = 1;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],6:[function(require,module,exports){
(function (global){
cc.game.onStart = function() {
  cc.view.adjustViewPort(true);
  cc.view.setDesignResolutionSize(1136, 640, cc.ResolutionPolicy.SHOW_ALL);
  cc.view.enableAutoFullScreen(false);
  cc.view.resizeWithBrowserSize(true);
  cc.BuilderReader.setResourcePath("res/");
  require("./globalValue.coffee");
  return cc.LoaderScene.preload([], (function(_this) {
    return function() {
      var GameLogic, gameDialog, gameLogicObj, sceneManager;
      sceneManager = require("./tools/ArkSceneManager.coffee");
      sceneManager.init();
      gameDialog = require('./ccbView/ArkMainDialog.coffee');
      sceneManager.addLayerToScene(gameDialog);
      console.log("game start:" + global.dir);
      GameLogic = require('./control/ArkGameLogic.coffee');
      gameLogicObj = new GameLogic();
      return gameLogicObj.init(gameDialog.controller.rootNode);
    };
  })(this));
};

cc.game.run();


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./ccbView/ArkMainDialog.coffee":1,"./control/ArkGameLogic.coffee":2,"./globalValue.coffee":5,"./tools/ArkSceneManager.coffee":12}],7:[function(require,module,exports){
var UserData;

UserData = (function() {
  function UserData() {
    this._score = 0;
    this._count = 0;
  }

  UserData.prototype.setScore = function(_score) {
    this._score = _score;
  };

  UserData.prototype.getScore = function() {
    return this._score;
  };

  UserData.prototype.setCount = function(_count) {
    this._count = _count;
  };

  UserData.prototype.getCount = function() {
    return this._count;
  };

  return UserData;

})();

module.exports = UserData;


},{}],8:[function(require,module,exports){
var BalanceSheet, TableBase, utils,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

TableBase = require("./TableBase.coffee");

utils = require('../tools/utils.coffee');

BalanceSheet = (function(superClass) {
  extend(BalanceSheet, superClass);

  function BalanceSheet() {
    return BalanceSheet.__super__.constructor.apply(this, arguments);
  }

  BalanceSheet.prototype.getFilePath = function() {
    return "res/" + this._stockType + "_json/zcfzb_" + this._stockCode + ".json";
  };

  BalanceSheet.prototype.getCashValue = function() {
    return this.getValue(this._data["货币资金(万元)"]);
  };

  BalanceSheet.prototype.getTotalAssets = function() {
    return this.getValue(this._data["资产总计(万元)"]);
  };

  BalanceSheet.prototype.getNetAssets = function() {
    return this.getValue(this._data["归属于母公司股东权益合计(万元)"]);
  };

  BalanceSheet.prototype._getNoNeedCalcItems = function() {
    return ["资料", "报告日期"];
  };

  BalanceSheet.prototype.getReceivableValue = function() {
    return this.getValue(this._data["应收账款(万元)"]);
  };

  BalanceSheet.prototype.dumpPercentTable = function() {
    var assetsPercentTable, celValue, i, index, key, len, percent, percentTable, ref, ref1, totalAssets, value;
    totalAssets = this.getTotalAssets();
    assetsPercentTable = [];
    ref = this._data;
    for (key in ref) {
      value = ref[key];
      percentTable = [key + "\t\t\t\t\t"];
      if (value[0] === 0) {
        continue;
      }
      if (indexOf.call(this._getNoNeedCalcItems(), key) >= 0) {
        continue;
      }
      ref1 = this.getValue(value);
      for (index = i = 0, len = ref1.length; i < len; index = ++i) {
        celValue = ref1[index];
        percent = celValue / totalAssets[index] * 100;
        percentTable.push(percent.toFixed(2));
        percentTable.push("\t\t\t\t");
      }
      percentTable.push("\n");
      assetsPercentTable.push(percentTable);
    }
    console.log(JSON.stringify(assetsPercentTable, null, "\t"));
    return assetsPercentTable;
  };

  BalanceSheet.prototype.getCurrentRatio = function() {
    var currentAssets, currentAssetsTable, currentDebtsTable, currentRatio, i, index, len;
    currentAssetsTable = this.getValue(this._data["流动资产合计(万元)"]);
    currentDebtsTable = this.getValue(this._data["流动负债合计(万元)"]);
    currentRatio = [];
    for (index = i = 0, len = currentAssetsTable.length; i < len; index = ++i) {
      currentAssets = currentAssetsTable[index];
      currentRatio.push((currentAssets / currentDebtsTable[index]).toFixed(2));
    }
    return currentRatio;
  };

  BalanceSheet.prototype.getQuickRatio = function() {
    var currentAssets, currentAssetsTable, currentDebtsTable, i, index, inventoryTable, len, quickRatio;
    currentAssetsTable = this.getValue(this._data["流动资产合计(万元)"]);
    currentDebtsTable = this.getValue(this._data["流动负债合计(万元)"]);
    inventoryTable = this.getValue(this._data["存货(万元)"]);
    quickRatio = [];
    for (index = i = 0, len = currentAssetsTable.length; i < len; index = ++i) {
      currentAssets = currentAssetsTable[index];
      quickRatio.push(((currentAssets - inventoryTable[index]) / currentDebtsTable[index]).toFixed(2));
    }
    return quickRatio;
  };

  BalanceSheet.prototype.getAdvanceReceiptsPercent = function() {
    var advanceReceipt, advanceReceiptsTable, i, index, len, percent, totalAssetsTable;
    advanceReceiptsTable = this.getValue(this._data["预收账款(万元)"]);
    totalAssetsTable = this.getTotalAssets();
    percent = [];
    for (index = i = 0, len = advanceReceiptsTable.length; i < len; index = ++i) {
      advanceReceipt = advanceReceiptsTable[index];
      percent.push((advanceReceipt / totalAssetsTable[index]) * 100);
    }
    return utils.getAverage(percent);
  };

  return BalanceSheet;

})(TableBase);

module.exports = BalanceSheet;


},{"../tools/utils.coffee":14,"./TableBase.coffee":11}],9:[function(require,module,exports){
var CashFlowStatement, TableBase,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

TableBase = require("./TableBase.coffee");

CashFlowStatement = (function(superClass) {
  extend(CashFlowStatement, superClass);

  function CashFlowStatement() {
    return CashFlowStatement.__super__.constructor.apply(this, arguments);
  }

  CashFlowStatement.prototype.getFilePath = function() {
    return "res/" + this._stockType + "_json/xjllb_" + this._stockCode + ".json";
  };

  CashFlowStatement.prototype.getWorkCashFlow = function() {
    return this.getValue(this._data["经营活动产生的现金流量净额(万元)"]);
  };

  return CashFlowStatement;

})(TableBase);

module.exports = CashFlowStatement;


},{"./TableBase.coffee":11}],10:[function(require,module,exports){
(function (global){
var ProfitStatement, TableBase, utils,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

TableBase = require("./TableBase.coffee");

utils = require('../tools/utils.coffee');

ProfitStatement = (function(superClass) {
  extend(ProfitStatement, superClass);

  function ProfitStatement() {
    return ProfitStatement.__super__.constructor.apply(this, arguments);
  }

  ProfitStatement.prototype.getFilePath = function() {
    return "res/" + this._stockType + "_json/lrb_" + this._stockCode + ".json";
  };

  ProfitStatement.prototype.getIncomeValue = function() {
    return this.getValue(this._data["营业收入(万元)"]);
  };

  ProfitStatement.prototype.getNetProfitAddRatio = function() {
    var addRatio, addTimes, netProfitTable;
    netProfitTable = this.getValue(this._data["净利润(万元)"]);
    addTimes = netProfitTable[0] / netProfitTable[netProfitTable.length - 1];
    addRatio = utils.getCompoundRate(addTimes, global.year);
    addRatio = ((addRatio - 1) * 100).toFixed(2);
    return addRatio;
  };

  ProfitStatement.prototype.getNetProfitTable = function() {
    return this.getValue(this._data["净利润(万元)"]);
  };

  ProfitStatement.prototype.getNetProfitYoy = function() {
    var addRatio, i, index, len, profit, profitTable;
    profitTable = this.getValue(this._data["净利润(万元)"]);
    addRatio = [];
    for (index = i = 0, len = profitTable.length; i < len; index = ++i) {
      profit = profitTable[index];
      if (index >= profitTable.length - 1) {
        break;
      }
      addRatio.push(((profit - profitTable[index + 1]) / profitTable[index + 1] * 100).toFixed(2));
    }
    return addRatio;
  };

  ProfitStatement.prototype.getPE = function() {
    var PE, earnPerShare, price;
    earnPerShare = this.getValue(this._data["基本每股收益"], true)[0];
    price = this.getSharePrice();
    PE = (price / earnPerShare).toFixed(2);
    return PE;
  };

  return ProfitStatement;

})(TableBase);

module.exports = ProfitStatement;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../tools/utils.coffee":14,"./TableBase.coffee":11}],11:[function(require,module,exports){
(function (global){
var TableBase;

TableBase = (function() {
  function TableBase(_stockType, _stockCode) {
    this._stockType = _stockType;
    this._stockCode = _stockCode;
    this._data = [];
    this._loadJson();
  }

  TableBase.prototype.getFilePath = function() {};

  TableBase.prototype.getStockCode = function() {
    return this._stockCode;
  };

  TableBase.prototype.getExistYears = function() {
    return this._existYears;
  };

  TableBase.prototype._loadJson = function() {
    var filePath;
    filePath = this.getFilePath();
    return cc.loader.loadJson(filePath, (function(_this) {
      return function(error, data) {
        console.log("load " + _this._stockCode + ", count :" + (global.count++));
        return _this._data = data;
      };
    })(this));
  };

  TableBase.prototype.getBaseInfo = function() {
    return this._data["资料"][0] + "------" + this._data["资料"][2];
  };

  TableBase.prototype.getSharePrice = function() {
    return this._data["资料"][1];
  };

  TableBase.prototype._getShowNumber = function(number) {
    return ((number / 100000).toFixed(2)) + " 亿";
  };

  TableBase.prototype.getFormatNumberTable = function(numberTable) {
    var formatTable, i, len, number;
    formatTable = [];
    for (i = 0, len = numberTable.length; i < len; i++) {
      number = numberTable[i];
      formatTable.push(this._getShowNumber(number));
    }
    return formatTable;
  };

  TableBase.prototype._getYearValueIndex = function() {
    var i, index, indexTable, len, ref, timeStr;
    indexTable = [];
    ref = this._data["报告日期"];
    for (index = i = 0, len = ref.length; i < len; index = ++i) {
      timeStr = ref[index];
      if (timeStr.indexOf("12-31") !== -1) {
        indexTable.push(index);
      }
    }
    return indexTable;
  };

  TableBase.prototype._getValueLength = function(valueLength) {
    var length;
    if (valueLength < global.year) {
      length = valueLength;
    } else {
      length = global.year;
    }
    this._existYears = length;
    return length;
  };

  TableBase.prototype._formatToInt = function(valueTable) {
    var i, intTable, len, value;
    intTable = [];
    for (i = 0, len = valueTable.length; i < len; i++) {
      value = valueTable[i];
      intTable.push(parseInt(value));
    }
    return intTable;
  };

  TableBase.prototype.getValue = function(data, doNotToInt) {
    var i, index, len, valueTable, yearIndexTable;
    yearIndexTable = this._getYearValueIndex();
    valueTable = [];
    for (i = 0, len = yearIndexTable.length; i < len; i++) {
      index = yearIndexTable[i];
      valueTable.push(data[index]);
    }
    valueTable = valueTable.slice(0, this._getValueLength(valueTable.length));
    if (doNotToInt) {
      return valueTable;
    }
    return this._formatToInt(valueTable);
  };

  return TableBase;

})();

module.exports = TableBase;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],12:[function(require,module,exports){
var LayerManager, Loader;

LayerManager = {
  init: function() {
    this.layerStack = [];
    this.scene = new cc.Scene();
    return cc.director.runScene(this.scene);
  },
  clearLayer: function() {
    this.scene.removeAllChildren();
    return this.layerStack.length = 0;
  },
  addLayerToScene: function(ccbLayer, zOrder) {
    var layout, node;
    if (zOrder == null) {
      zOrder = 0;
    }
    layout = new ccui.Layout();
    layout.setContentSize(cc.size(1136, 640));
    layout.setTouchEnabled(true);
    node = new cc.Node();
    node.addChild(layout);
    node.addChild(ccbLayer);
    this.scene.addChild(node, zOrder);
    return this.layerStack.push(node);
  },
  removeTopLayer: function() {
    var topLayer;
    topLayer = this.layerStack.pop();
    return this.scene.removeChild(topLayer, true);
  }
};

Loader = (function() {
  function Loader(ccbFile1, controllerName1) {
    this.ccbFile = ccbFile1;
    this.controllerName = controllerName1;
  }

  Loader.prototype.showDialog = function() {
    return cc.BuilderReader.load(this.ccbFile);
  };

  return Loader;

})();

LayerManager.defineDialog = function(ccbFile, controllerName, controllerClass) {
  cc.BuilderReader.registerController(controllerName, new controllerClass());
  return new Loader(ccbFile, controllerName);
};

module.exports = LayerManager;


},{}],13:[function(require,module,exports){
var ScrollView;

ScrollView = {
  createScrollView: function(targetNode) {
    var container, scrollView, size;
    size = targetNode.getContentSize();
    container = new cc.Node();
    scrollView = new cc.ScrollView(size, container);
    scrollView.setPosition(targetNode.getPosition());
    scrollView.setDirection(cc.SCROLLVIEW_DIRECTION_VERTICAL);
    scrollView.setTouchEnabled(true);
    return scrollView;
  },
  initFromContainer: function(scrollView, inner) {
    var container;
    inner.setPosition({
      x: 0,
      y: 0
    });
    inner.setAnchorPoint({
      x: 0,
      y: 0
    });
    inner.removeFromParent();
    container = scrollView.getContainer();
    container.removeAllChildren(true);
    container.setContentSize(inner.getContentSize());
    return container.addChild(inner);
  },
  scrollJumpToTop: function(scrollView) {
    var container, offset;
    container = scrollView.getContainer();
    offset = scrollView.getViewSize().height - container.getContentSize().height;
    if (offset < 0) {
      return scrollView.setContentOffset({
        x: 0,
        y: offset
      });
    } else {
      return scrollView.setContentOffset({
        x: 0,
        y: 0
      });
    }
  }
};

module.exports = ScrollView;


},{}],14:[function(require,module,exports){
var utils;

utils = {
  getCompoundRate: function(addRate, time) {
    return Math.exp(1 / time * Math.log(addRate));
  },
  getAverage: function(table) {
    var ave, i, len, total, value;
    total = 0;
    for (i = 0, len = table.length; i < len; i++) {
      value = table[i];
      total += parseFloat(value);
    }
    ave = (total / table.length).toFixed(2);
    return ave;
  },
  addTab: function(value) {
    return value + "\t\t";
  },
  getStockTable: function(dir) {
    var stockTable, stockTableHs300, stockTableZz1000, stockTableZz500;
    stockTableHs300 = ["SZ000001", "SZ000002", "SZ000008", "SZ000060", "SZ000063", "SZ000069", "SZ000100", "SZ000157", "SZ000166", "SZ000333", "SZ000338", "SZ000402", "SZ000413", "SZ000415", "SZ000423", "SZ000425", "SZ000503", "SZ000538", "SZ000540", "SZ000559", "SZ000568", "SZ000623", "SZ000625", "SZ000627", "SZ000630", "SZ000651", "SZ000671", "SZ000686", "SZ000709", "SZ000723", "SZ000725", "SZ000728", "SZ000738", "SZ000750", "SZ000768", "SZ000776", "SZ000783", "SZ000792", "SZ000826", "SZ000839", "SZ000858", "SZ000876", "SZ000895", "SZ000898", "SZ000938", "SZ000959", "SZ000961", "SZ000963", "SZ000983", "SZ001979", "SZ002007", "SZ002008", "SZ002024", "SZ002027", "SZ002044", "SZ002065", "SZ002074", "SZ002081", "SZ002142", "SZ002146", "SZ002153", "SZ002174", "SZ002202", "SZ002230", "SZ002236", "SZ002241", "SZ002252", "SZ002292", "SZ002294", "SZ002304", "SZ002310", "SZ002352", "SZ002385", "SZ002411", "SZ002415", "SZ002424", "SZ002426", "SZ002450", "SZ002456", "SZ002460", "SZ002465", "SZ002466", "SZ002468", "SZ002470", "SZ002475", "SZ002500", "SZ002508", "SZ002555", "SZ002558", "SZ002572", "SZ002594", "SZ002601", "SZ002602", "SZ002608", "SZ002624", "SZ002673", "SZ002714", "SZ002736", "SZ002739", "SZ002797", "SZ002831", "SZ002839", "SZ002841", "SZ300003", "SZ300015", "SZ300017", "SZ300024", "SZ300027", "SZ300033", "SZ300059", "SZ300070", "SZ300072", "SZ300122", "SZ300124", "SZ300136", "SZ300144", "SZ300251", "SZ300315", "SH600000", "SH600008", "SH600009", "SH600010", "SH600011", "SH600015", "SH600016", "SH600018", "SH600019", "SH600021", "SH600023", "SH600028", "SH600029", "SH600030", "SH600031", "SH600036", "SH600038", "SH600048", "SH600050", "SH600061", "SH600066", "SH600068", "SH600074", "SH600085", "SH600089", "SH600100", "SH600104", "SH600109", "SH600111", "SH600115", "SH600118", "SH600153", "SH600157", "SH600170", "SH600177", "SH600188", "SH600196", "SH600208", "SH600219", "SH600221", "SH600233", "SH600271", "SH600276", "SH600297", "SH600309", "SH600332", "SH600340", "SH600352", "SH600362", "SH600369", "SH600372", "SH600373", "SH600376", "SH600383", "SH600390", "SH600406", "SH600415", "SH600436", "SH600482", "SH600485", "SH600489", "SH600498", "SH600518", "SH600519", "SH600522", "SH600535", "SH600547", "SH600549", "SH600570", "SH600583", "SH600585", "SH600588", "SH600606", "SH600637", "SH600649", "SH600660", "SH600663", "SH600674", "SH600682", "SH600685", "SH600688", "SH600690", "SH600703", "SH600704", "SH600705", "SH600739", "SH600741", "SH600795", "SH600804", "SH600816", "SH600820", "SH600827", "SH600837", "SH600871", "SH600886", "SH600887", "SH600893", "SH600895", "SH600900", "SH600909", "SH600919", "SH600926", "SH600958", "SH600959", "SH600977", "SH600999", "SH601006", "SH601009", "SH601012", "SH601018", "SH601021", "SH601088", "SH601099", "SH601111", "SH601117", "SH601118", "SH601155", "SH601163", "SH601166", "SH601169", "SH601186", "SH601198", "SH601211", "SH601212", "SH601216", "SH601225", "SH601228", "SH601229", "SH601288", "SH601318", "SH601328", "SH601333", "SH601336", "SH601375", "SH601377", "SH601390", "SH601398", "SH601555", "SH601600", "SH601601", "SH601607", "SH601608", "SH601611", "SH601618", "SH601628", "SH601633", "SH601668", "SH601669", "SH601688", "SH601718", "SH601727", "SH601766", "SH601788", "SH601800", "SH601818", "SH601857", "SH601866", "SH601872", "SH601877", "SH601878", "SH601881", "SH601888", "SH601898", "SH601899", "SH601901", "SH601919", "SH601933", "SH601939", "SH601958", "SH601966", "SH601985", "SH601988", "SH601989", "SH601991", "SH601992", "SH601997", "SH601998", "SH603160", "SH603799", "SH603833", "SH603858", "SH603993"];
    stockTableZz1000 = ["SZ000010", "SZ000011", "SZ000016", "SZ000018", "SZ000022", "SZ000029", "SZ000034", "SZ000035", "SZ000036", "SZ000038", "SZ000040", "SZ000042", "SZ000043", "SZ000048", "SZ000055", "SZ000058", "SZ000059", "SZ000065", "SZ000070", "SZ000088", "SZ000150", "SZ000151", "SZ000159", "SZ000404", "SZ000407", "SZ000409", "SZ000416", "SZ000429", "SZ000498", "SZ000506", "SZ000514", "SZ000516", "SZ000518", "SZ000520", "SZ000525", "SZ000532", "SZ000533", "SZ000537", "SZ000544", "SZ000545", "SZ000546", "SZ000548", "SZ000550", "SZ000551", "SZ000553", "SZ000554", "SZ000558", "SZ000560", "SZ000561", "SZ000571", "SZ000573", "SZ000576", "SZ000582", "SZ000584", "SZ000591", "SZ000601", "SZ000603", "SZ000607", "SZ000615", "SZ000626", "SZ000637", "SZ000639", "SZ000650", "SZ000657", "SZ000665", "SZ000666", "SZ000672", "SZ000673", "SZ000676", "SZ000683", "SZ000687", "SZ000688", "SZ000700", "SZ000701", "SZ000711", "SZ000717", "SZ000719", "SZ000722", "SZ000731", "SZ000733", "SZ000735", "SZ000739", "SZ000751", "SZ000752", "SZ000757", "SZ000760", "SZ000767", "SZ000782", "SZ000789", "SZ000795", "SZ000796", "SZ000797", "SZ000800", "SZ000801", "SZ000802", "SZ000811", "SZ000818", "SZ000819", "SZ000820", "SZ000821", "SZ000828", "SZ000831", "SZ000836", "SZ000837", "SZ000838", "SZ000851", "SZ000863", "SZ000869", "SZ000875", "SZ000881", "SZ000882", "SZ000885", "SZ000889", "SZ000892", "SZ000893", "SZ000899", "SZ000901", "SZ000902", "SZ000905", "SZ000910", "SZ000915", "SZ000917", "SZ000918", "SZ000920", "SZ000921", "SZ000925", "SZ000927", "SZ000928", "SZ000933", "SZ000936", "SZ000951", "SZ000952", "SZ000957", "SZ000958", "SZ000965", "SZ000967", "SZ000968", "SZ000971", "SZ000973", "SZ000976", "SZ000980", "SZ000989", "SZ000996", "SZ001896", "SZ002009", "SZ002016", "SZ002017", "SZ002023", "SZ002025", "SZ002031", "SZ002033", "SZ002035", "SZ002036", "SZ002042", "SZ002043", "SZ002047", "SZ002053", "SZ002055", "SZ002059", "SZ002060", "SZ002067", "SZ002071", "SZ002079", "SZ002080", "SZ002086", "SZ002089", "SZ002091", "SZ002094", "SZ002095", "SZ002097", "SZ002099", "SZ002100", "SZ002102", "SZ002104", "SZ002108", "SZ002110", "SZ002113", "SZ002114", "SZ002115", "SZ002117", "SZ002121", "SZ002124", "SZ002126", "SZ002130", "SZ002135", "SZ002137", "SZ002138", "SZ002139", "SZ002141", "SZ002145", "SZ002148", "SZ002151", "SZ002154", "SZ002156", "SZ002157", "SZ002166", "SZ002167", "SZ002171", "SZ002175", "SZ002177", "SZ002178", "SZ002182", "SZ002185", "SZ002192", "SZ002196", "SZ002197", "SZ002198", "SZ002203", "SZ002204", "SZ002206", "SZ002210", "SZ002212", "SZ002215", "SZ002218", "SZ002222", "SZ002224", "SZ002226", "SZ002229", "SZ002231", "SZ002232", "SZ002234", "SZ002235", "SZ002237", "SZ002239", "SZ002245", "SZ002246", "SZ002247", "SZ002253", "SZ002255", "SZ002256", "SZ002259", "SZ002260", "SZ002262", "SZ002263", "SZ002274", "SZ002279", "SZ002283", "SZ002284", "SZ002287", "SZ002288", "SZ002296", "SZ002298", "SZ002301", "SZ002302", "SZ002303", "SZ002305", "SZ002307", "SZ002313", "SZ002314", "SZ002318", "SZ002320", "SZ002321", "SZ002322", "SZ002323", "SZ002326", "SZ002329", "SZ002331", "SZ002335", "SZ002339", "SZ002341", "SZ002343", "SZ002346", "SZ002349", "SZ002351", "SZ002355", "SZ002362", "SZ002363", "SZ002364", "SZ002367", "SZ002372", "SZ002376", "SZ002378", "SZ002383", "SZ002387", "SZ002388", "SZ002389", "SZ002393", "SZ002401", "SZ002402", "SZ002406", "SZ002413", "SZ002418", "SZ002419", "SZ002421", "SZ002425", "SZ002427", "SZ002429", "SZ002430", "SZ002432", "SZ002433", "SZ002436", "SZ002443", "SZ002445", "SZ002446", "SZ002447", "SZ002448", "SZ002449", "SZ002451", "SZ002452", "SZ002453", "SZ002457", "SZ002458", "SZ002461", "SZ002462", "SZ002464", "SZ002467", "SZ002474", "SZ002476", "SZ002481", "SZ002483", "SZ002484", "SZ002488", "SZ002494", "SZ002496", "SZ002497", "SZ002499", "SZ002501", "SZ002502", "SZ002507", "SZ002509", "SZ002510", "SZ002511", "SZ002515", "SZ002516", "SZ002518", "SZ002519", "SZ002521", "SZ002522", "SZ002524", "SZ002531", "SZ002534", "SZ002535", "SZ002537", "SZ002538", "SZ002539", "SZ002542", "SZ002543", "SZ002545", "SZ002547", "SZ002550", "SZ002554", "SZ002556", "SZ002559", "SZ002562", "SZ002564", "SZ002567", "SZ002574", "SZ002575", "SZ002577", "SZ002579", "SZ002581", "SZ002582", "SZ002584", "SZ002585", "SZ002586", "SZ002590", "SZ002596", "SZ002597", "SZ002600", "SZ002604", "SZ002605", "SZ002606", "SZ002609", "SZ002610", "SZ002611", "SZ002614", "SZ002616", "SZ002617", "SZ002618", "SZ002619", "SZ002622", "SZ002625", "SZ002626", "SZ002630", "SZ002631", "SZ002636", "SZ002638", "SZ002643", "SZ002647", "SZ002648", "SZ002649", "SZ002650", "SZ002651", "SZ002655", "SZ002656", "SZ002658", "SZ002660", "SZ002662", "SZ002664", "SZ002667", "SZ002668", "SZ002675", "SZ002677", "SZ002678", "SZ002680", "SZ002684", "SZ002695", "SZ002697", "SZ002703", "SZ002711", "SZ002712", "SZ002716", "SZ002717", "SZ002721", "SZ002724", "SZ002726", "SZ002733", "SZ002737", "SZ002746", "SZ002747", "SZ002751", "SZ002752", "SZ002756", "SZ002759", "SZ002762", "SZ002766", "SZ002769", "SZ002772", "SZ002781", "SZ002782", "SZ002783", "SZ002786", "SZ002788", "SZ002790", "SZ002791", "SZ002792", "SZ002801", "SZ002802", "SZ002812", "SZ002821", "SZ002822", "SZ002850", "SZ002852", "SZ002859", "SZ002867", "SZ002872", "SZ300005", "SZ300006", "SZ300007", "SZ300008", "SZ300009", "SZ300011", "SZ300012", "SZ300014", "SZ300016", "SZ300020", "SZ300021", "SZ300028", "SZ300030", "SZ300031", "SZ300034", "SZ300036", "SZ300037", "SZ300038", "SZ300044", "SZ300045", "SZ300047", "SZ300048", "SZ300050", "SZ300051", "SZ300052", "SZ300053", "SZ300054", "SZ300056", "SZ300063", "SZ300064", "SZ300065", "SZ300066", "SZ300068", "SZ300071", "SZ300073", "SZ300074", "SZ300075", "SZ300076", "SZ300077", "SZ300078", "SZ300079", "SZ300083", "SZ300084", "SZ300085", "SZ300086", "SZ300090", "SZ300096", "SZ300097", "SZ300098", "SZ300100", "SZ300101", "SZ300102", "SZ300109", "SZ300110", "SZ300114", "SZ300118", "SZ300128", "SZ300130", "SZ300131", "SZ300135", "SZ300137", "SZ300140", "SZ300142", "SZ300145", "SZ300148", "SZ300149", "SZ300152", "SZ300157", "SZ300160", "SZ300165", "SZ300168", "SZ300170", "SZ300171", "SZ300172", "SZ300173", "SZ300175", "SZ300177", "SZ300178", "SZ300180", "SZ300183", "SZ300184", "SZ300185", "SZ300188", "SZ300191", "SZ300194", "SZ300198", "SZ300203", "SZ300205", "SZ300207", "SZ300208", "SZ300209", "SZ300212", "SZ300213", "SZ300215", "SZ300216", "SZ300219", "SZ300221", "SZ300222", "SZ300223", "SZ300224", "SZ300226", "SZ300227", "SZ300228", "SZ300229", "SZ300231", "SZ300232", "SZ300236", "SZ300237", "SZ300238", "SZ300242", "SZ300245", "SZ300248", "SZ300252", "SZ300255", "SZ300256", "SZ300262", "SZ300263", "SZ300269", "SZ300271", "SZ300276", "SZ300278", "SZ300284", "SZ300285", "SZ300288", "SZ300292", "SZ300294", "SZ300295", "SZ300299", "SZ300300", "SZ300302", "SZ300303", "SZ300304", "SZ300307", "SZ300308", "SZ300309", "SZ300310", "SZ300311", "SZ300312", "SZ300316", "SZ300317", "SZ300322", "SZ300323", "SZ300328", "SZ300332", "SZ300333", "SZ300336", "SZ300339", "SZ300343", "SZ300347", "SZ300348", "SZ300349", "SZ300350", "SZ300352", "SZ300353", "SZ300355", "SZ300356", "SZ300359", "SZ300362", "SZ300363", "SZ300364", "SZ300366", "SZ300367", "SZ300368", "SZ300369", "SZ300373", "SZ300377", "SZ300378", "SZ300379", "SZ300380", "SZ300381", "SZ300386", "SZ300388", "SZ300392", "SZ300403", "SZ300406", "SZ300409", "SZ300410", "SZ300413", "SZ300418", "SZ300419", "SZ300424", "SZ300426", "SZ300429", "SZ300431", "SZ300432", "SZ300438", "SZ300439", "SZ300440", "SZ300441", "SZ300443", "SZ300447", "SZ300449", "SZ300450", "SZ300456", "SZ300457", "SZ300458", "SZ300459", "SZ300463", "SZ300465", "SZ300467", "SZ300468", "SZ300471", "SZ300474", "SZ300476", "SZ300482", "SZ300484", "SZ300485", "SZ300494", "SZ300495", "SZ300496", "SZ300497", "SZ300502", "SZ300506", "SZ300507", "SZ300508", "SZ300511", "SZ300512", "SZ300516", "SZ300518", "SZ300520", "SZ300522", "SZ300523", "SZ300527", "SZ300528", "SZ300529", "SZ300531", "SZ300533", "SZ300558", "SZ300568", "SZ300601", "SZ300613", "SZ300616", "SZ300618", "SZ300625", "SZ300628", "SZ300633", "SZ300660", "SZ300679", "SH600007", "SH600012", "SH600020", "SH600033", "SH600035", "SH600054", "SH600057", "SH600063", "SH600067", "SH600072", "SH600075", "SH600076", "SH600082", "SH600084", "SH600090", "SH600093", "SH600096", "SH600101", "SH600103", "SH600105", "SH600106", "SH600107", "SH600110", "SH600113", "SH600114", "SH600116", "SH600119", "SH600123", "SH600129", "SH600130", "SH600132", "SH600133", "SH600135", "SH600136", "SH600162", "SH600165", "SH600172", "SH600173", "SH600175", "SH600185", "SH600190", "SH600192", "SH600193", "SH600197", "SH600206", "SH600207", "SH600209", "SH600210", "SH600217", "SH600226", "SH600227", "SH600230", "SH600231", "SH600237", "SH600239", "SH600246", "SH600252", "SH600255", "SH600258", "SH600261", "SH600269", "SH600273", "SH600278", "SH600279", "SH600283", "SH600285", "SH600288", "SH600290", "SH600303", "SH600310", "SH600313", "SH600318", "SH600320", "SH600321", "SH600322", "SH600323", "SH600326", "SH600330", "SH600331", "SH600336", "SH600337", "SH600343", "SH600354", "SH600359", "SH600360", "SH600363", "SH600381", "SH600382", "SH600386", "SH600391", "SH600399", "SH600400", "SH600405", "SH600420", "SH600446", "SH600449", "SH600456", "SH600459", "SH600467", "SH600470", "SH600477", "SH600480", "SH600486", "SH600490", "SH600491", "SH600495", "SH600501", "SH600502", "SH600507", "SH600508", "SH600512", "SH600523", "SH600526", "SH600531", "SH600533", "SH600546", "SH600548", "SH600550", "SH600552", "SH600559", "SH600562", "SH600567", "SH600568", "SH600569", "SH600571", "SH600577", "SH600590", "SH600592", "SH600595", "SH600602", "SH600604", "SH600612", "SH600616", "SH600620", "SH600621", "SH600622", "SH600624", "SH600626", "SH600629", "SH600630", "SH600634", "SH600638", "SH600641", "SH600650", "SH600652", "SH600658", "SH600662", "SH600667", "SH600668", "SH600675", "SH600676", "SH600677", "SH600681", "SH600684", "SH600686", "SH600692", "SH600693", "SH600702", "SH600707", "SH600708", "SH600711", "SH600728", "SH600730", "SH600734", "SH600735", "SH600740", "SH600742", "SH600744", "SH600745", "SH600756", "SH600758", "SH600763", "SH600764", "SH600771", "SH600775", "SH600777", "SH600779", "SH600782", "SH600783", "SH600784", "SH600789", "SH600797", "SH600798", "SH600800", "SH600803", "SH600807", "SH600812", "SH600814", "SH600818", "SH600824", "SH600828", "SH600830", "SH600836", "SH600838", "SH600843", "SH600845", "SH600846", "SH600855", "SH600856", "SH600865", "SH600868", "SH600876", "SH600963", "SH600965", "SH600973", "SH600986", "SH600987", "SH600988", "SH600990", "SH600995", "SH600997", "SH601003", "SH601007", "SH601011", "SH601015", "SH601038", "SH601058", "SH601069", "SH601101", "SH601107", "SH601116", "SH601126", "SH601137", "SH601222", "SH601339", "SH601366", "SH601388", "SH601500", "SH601566", "SH601588", "SH601595", "SH601599", "SH601636", "SH601666", "SH601700", "SH601789", "SH601799", "SH601858", "SH601882", "SH601890", "SH601900", "SH601918", "SH601952", "SH601968", "SH603003", "SH603008", "SH603010", "SH603026", "SH603043", "SH603058", "SH603063", "SH603081", "SH603098", "SH603108", "SH603111", "SH603113", "SH603116", "SH603118", "SH603126", "SH603128", "SH603166", "SH603218", "SH603227", "SH603233", "SH603258", "SH603298", "SH603299", "SH603303", "SH603305", "SH603308", "SH603313", "SH603323", "SH603337", "SH603338", "SH603339", "SH603358", "SH603368", "SH603385", "SH603393", "SH603398", "SH603421", "SH603508", "SH603517", "SH603555", "SH603579", "SH603588", "SH603600", "SH603603", "SH603609", "SH603612", "SH603618", "SH603626", "SH603636", "SH603660", "SH603669", "SH603678", "SH603686", "SH603707", "SH603708", "SH603718", "SH603727", "SH603730", "SH603758", "SH603777", "SH603779", "SH603800", "SH603803", "SH603817", "SH603839", "SH603843", "SH603861", "SH603881", "SH603885", "SH603898", "SH603900", "SH603919", "SH603920", "SH603939", "SH603958", "SH603959", "SH603979", "SH603980", "SH603989", "SH603996", "SH603997", "SH603999"];
    stockTableZz500 = ["SZ000006", "SZ000009", "SZ000012", "SZ000021", "SZ000025", "SZ000027", "SZ000028", "SZ000031", "SZ000039", "SZ000049", "SZ000050", "SZ000061", "SZ000062", "SZ000066", "SZ000078", "SZ000089", "SZ000090", "SZ000099", "SZ000156", "SZ000158", "SZ000400", "SZ000401", "SZ000418", "SZ000426", "SZ000488", "SZ000501", "SZ000513", "SZ000519", "SZ000528", "SZ000536", "SZ000541", "SZ000543", "SZ000547", "SZ000552", "SZ000563", "SZ000566", "SZ000572", "SZ000581", "SZ000587", "SZ000592", "SZ000596", "SZ000598", "SZ000600", "SZ000612", "SZ000636", "SZ000652", "SZ000656", "SZ000661", "SZ000662", "SZ000667", "SZ000669", "SZ000680", "SZ000681", "SZ000685", "SZ000690", "SZ000703", "SZ000712", "SZ000718", "SZ000727", "SZ000729", "SZ000732", "SZ000758", "SZ000761", "SZ000762", "SZ000766", "SZ000777", "SZ000778", "SZ000786", "SZ000806", "SZ000807", "SZ000816", "SZ000825", "SZ000829", "SZ000830", "SZ000848", "SZ000860", "SZ000877", "SZ000878", "SZ000887", "SZ000897", "SZ000926", "SZ000930", "SZ000937", "SZ000939", "SZ000960", "SZ000969", "SZ000970", "SZ000975", "SZ000977", "SZ000979", "SZ000981", "SZ000987", "SZ000988", "SZ000990", "SZ000997", "SZ000998", "SZ000999", "SZ001696", "SZ002001", "SZ002002", "SZ002004", "SZ002005", "SZ002011", "SZ002013", "SZ002018", "SZ002019", "SZ002022", "SZ002028", "SZ002030", "SZ002032", "SZ002038", "SZ002041", "SZ002048", "SZ002049", "SZ002050", "SZ002051", "SZ002056", "SZ002063", "SZ002064", "SZ002073", "SZ002078", "SZ002092", "SZ002093", "SZ002106", "SZ002118", "SZ002122", "SZ002123", "SZ002127", "SZ002128", "SZ002131", "SZ002147", "SZ002152", "SZ002155", "SZ002176", "SZ002179", "SZ002183", "SZ002190", "SZ002191", "SZ002195", "SZ002221", "SZ002223", "SZ002233", "SZ002242", "SZ002244", "SZ002249", "SZ002250", "SZ002251", "SZ002254", "SZ002261", "SZ002266", "SZ002268", "SZ002269", "SZ002271", "SZ002273", "SZ002276", "SZ002277", "SZ002280", "SZ002281", "SZ002285", "SZ002299", "SZ002308", "SZ002311", "SZ002317", "SZ002325", "SZ002332", "SZ002340", "SZ002342", "SZ002344", "SZ002345", "SZ002353", "SZ002354", "SZ002358", "SZ002359", "SZ002366", "SZ002368", "SZ002371", "SZ002373", "SZ002375", "SZ002384", "SZ002390", "SZ002392", "SZ002400", "SZ002405", "SZ002407", "SZ002408", "SZ002410", "SZ002414", "SZ002416", "SZ002422", "SZ002428", "SZ002431", "SZ002434", "SZ002437", "SZ002439", "SZ002440", "SZ002444", "SZ002463", "SZ002477", "SZ002479", "SZ002482", "SZ002489", "SZ002491", "SZ002503", "SZ002505", "SZ002506", "SZ002512", "SZ002517", "SZ002544", "SZ002551", "SZ002573", "SZ002583", "SZ002588", "SZ002589", "SZ002603", "SZ002635", "SZ002640", "SZ002642", "SZ002657", "SZ002663", "SZ002665", "SZ002670", "SZ002672", "SZ002681", "SZ002690", "SZ002699", "SZ002701", "SZ002707", "SZ002709", "SZ002745", "SZ002807", "SZ002815", "SZ002818", "SZ300001", "SZ300002", "SZ300010", "SZ300026", "SZ300032", "SZ300039", "SZ300043", "SZ300055", "SZ300058", "SZ300088", "SZ300113", "SZ300115", "SZ300116", "SZ300133", "SZ300134", "SZ300146", "SZ300147", "SZ300159", "SZ300166", "SZ300182", "SZ300197", "SZ300199", "SZ300202", "SZ300244", "SZ300253", "SZ300257", "SZ300266", "SZ300273", "SZ300274", "SZ300287", "SZ300291", "SZ300297", "SZ300324", "SZ300376", "SZ300383", "SH600004", "SH600006", "SH600017", "SH600022", "SH600026", "SH600037", "SH600039", "SH600053", "SH600056", "SH600058", "SH600059", "SH600060", "SH600062", "SH600064", "SH600073", "SH600079", "SH600086", "SH600094", "SH600098", "SH600108", "SH600120", "SH600122", "SH600125", "SH600126", "SH600138", "SH600141", "SH600143", "SH600151", "SH600155", "SH600158", "SH600160", "SH600161", "SH600166", "SH600169", "SH600171", "SH600176", "SH600179", "SH600183", "SH600184", "SH600187", "SH600195", "SH600201", "SH600216", "SH600240", "SH600256", "SH600259", "SH600260", "SH600266", "SH600267", "SH600270", "SH600277", "SH600280", "SH600282", "SH600284", "SH600289", "SH600291", "SH600292", "SH600298", "SH600300", "SH600307", "SH600312", "SH600315", "SH600316", "SH600317", "SH600325", "SH600329", "SH600335", "SH600338", "SH600346", "SH600348", "SH600366", "SH600380", "SH600388", "SH600392", "SH600393", "SH600395", "SH600409", "SH600410", "SH600416", "SH600418", "SH600422", "SH600426", "SH600428", "SH600435", "SH600438", "SH600458", "SH600460", "SH600466", "SH600478", "SH600481", "SH600499", "SH600500", "SH600503", "SH600511", "SH600516", "SH600517", "SH600521", "SH600525", "SH600536", "SH600545", "SH600557", "SH600563", "SH600565", "SH600566", "SH600572", "SH600575", "SH600578", "SH600580", "SH600582", "SH600584", "SH600587", "SH600594", "SH600597", "SH600598", "SH600600", "SH600611", "SH600614", "SH600618", "SH600623", "SH600628", "SH600633", "SH600635", "SH600639", "SH600640", "SH600642", "SH600643", "SH600645", "SH600648", "SH600651", "SH600655", "SH600657", "SH600664", "SH600673", "SH600687", "SH600694", "SH600717", "SH600718", "SH600729", "SH600737", "SH600743", "SH600748", "SH600750", "SH600751", "SH600754", "SH600755", "SH600757", "SH600759", "SH600765", "SH600770", "SH600773", "SH600776", "SH600787", "SH600801", "SH600808", "SH600811", "SH600823", "SH600826", "SH600835", "SH600839", "SH600848", "SH600859", "SH600862", "SH600863", "SH600869", "SH600872", "SH600874", "SH600875", "SH600879", "SH600880", "SH600881", "SH600884", "SH600885", "SH600894", "SH600908", "SH600917", "SH600936", "SH600939", "SH600967", "SH600970", "SH600971", "SH600978", "SH600993", "SH600996", "SH601000", "SH601001", "SH601002", "SH601016", "SH601020", "SH601127", "SH601128", "SH601168", "SH601200", "SH601231", "SH601233", "SH601311", "SH601678", "SH601689", "SH601699", "SH601717", "SH601777", "SH601811", "SH601880", "SH601928", "SH601969", "SH603000", "SH603001", "SH603019", "SH603025", "SH603077", "SH603169", "SH603188", "SH603198", "SH603225", "SH603228", "SH603328", "SH603355", "SH603369", "SH603377", "SH603444", "SH603515", "SH603528", "SH603556", "SH603568", "SH603569", "SH603589", "SH603658", "SH603766", "SH603806", "SH603816", "SH603868", "SH603877", "SH603883", "SH603888"];
    stockTable = [];
    switch (dir) {
      case "hs300":
        stockTable = stockTableHs300;
        break;
      case "zz1000":
        stockTable = stockTableZz1000;
        break;
      case "zz500":
        stockTable = stockTableZz500;
    }
    return stockTable;
  }
};

module.exports = utils;


},{}]},{},[6])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
